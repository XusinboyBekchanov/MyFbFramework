'            FreeBasic header file, auto-generated by
'                       ### girtobac ###
' LGPLv2.1 (C) 2013-2022 by Thomas{ doT ]Freiherr[ At ]gmx[ DoT }net
' Auto-translated from file /usr/share/gir-1.0/OsmGpsMap-1.0.gir
#INCLUDE ONCE "_GirToBac-0.0.bi"
' Repository version 1.2
#INCLUDE ONCE "GObject-2.0.bi"
#INCLUDE ONCE "Gtk-3.0.bi"
#DEFINE OSM_GPS_MAP_CACHE_AUTO @!"auto://"
#DEFINE OSM_GPS_MAP_CACHE_DISABLED @!"none://"
#DEFINE OSM_GPS_MAP_CACHE_FRIENDLY @!"friendly://"
#DEFINE OSM_GPS_MAP_INVALID 0
TYPE AS _OsmGpsMap OsmGpsMap
TYPE AS _OsmGpsMapClass OsmGpsMapClass
TYPE AS _OsmGpsMapImage OsmGpsMapImage
TYPE AS _OsmGpsMapImageClass OsmGpsMapImageClass
TYPE AS _OsmGpsMapImagePrivate OsmGpsMapImagePrivate
TYPE AS LONG OsmGpsMapKey_t
ENUM
  OSM_GPS_MAP_KEY_FULLSCREEN = 0
  OSM_GPS_MAP_KEY_ZOOMIN = 1
  OSM_GPS_MAP_KEY_ZOOMOUT = 2
  OSM_GPS_MAP_KEY_UP = 3
  OSM_GPS_MAP_KEY_DOWN = 4
  OSM_GPS_MAP_KEY_LEFT = 5
  OSM_GPS_MAP_KEY_RIGHT = 6
  OSM_GPS_MAP_KEY_MAX = 7
END ENUM
TYPE AS _OsmGpsMapLayer OsmGpsMapLayer
TYPE AS _OsmGpsMapLayerIface OsmGpsMapLayerIface
TYPE AS _OsmGpsMapOsd OsmGpsMapOsd
TYPE AS _OsmGpsMapOsdClass OsmGpsMapOsdClass
TYPE AS _OsmGpsMapOsdPrivate OsmGpsMapOsdPrivate
TYPE AS _OsmGpsMapPoint OsmGpsMapPoint
TYPE AS _OsmGpsMapPolygon OsmGpsMapPolygon
TYPE AS _OsmGpsMapPolygonClass OsmGpsMapPolygonClass
TYPE AS _OsmGpsMapPolygonPrivate OsmGpsMapPolygonPrivate
TYPE AS _OsmGpsMapPrivate OsmGpsMapPrivate
TYPE AS LONG OsmGpsMapSource_t
ENUM
  OSM_GPS_MAP_SOURCE_NULL = 0
  OSM_GPS_MAP_SOURCE_OPENSTREETMAP = 1
  OSM_GPS_MAP_SOURCE_OPENSTREETMAP_RENDERER = 2
  OSM_GPS_MAP_SOURCE_OPENAERIALMAP = 3
  OSM_GPS_MAP_SOURCE_MAPS_FOR_FREE = 4
  OSM_GPS_MAP_SOURCE_OPENCYCLEMAP = 5
  OSM_GPS_MAP_SOURCE_OSM_PUBLIC_TRANSPORT = 6
  OSM_GPS_MAP_SOURCE_GOOGLE_STREET = 7
  OSM_GPS_MAP_SOURCE_GOOGLE_SATELLITE = 8
  OSM_GPS_MAP_SOURCE_GOOGLE_HYBRID = 9
  OSM_GPS_MAP_SOURCE_VIRTUAL_EARTH_STREET = 10
  OSM_GPS_MAP_SOURCE_VIRTUAL_EARTH_SATELLITE = 11
  OSM_GPS_MAP_SOURCE_VIRTUAL_EARTH_HYBRID = 12
  OSM_GPS_MAP_SOURCE_OSMC_TRAILS = 13
  OSM_GPS_MAP_SOURCE_LAST = 14
END ENUM
TYPE AS _OsmGpsMapTrack OsmGpsMapTrack
TYPE AS _OsmGpsMapTrackClass OsmGpsMapTrackClass
TYPE AS _OsmGpsMapTrackPrivate OsmGpsMapTrackPrivate
EXTERN "C" LIB "osmgpsmap-1.0"
' P_X

' P_3

TYPE _OsmGpsMap
  AS GtkDrawingArea parent_instance
  AS OsmGpsMapPrivate PTR priv
END TYPE
DECLARE FUNCTION osm_gps_map_get_type() AS GType
#DEFINE OSM_TYPE_GPS_MAP (osm_gps_map_get_type())
#DEFINE OSM_GPS_MAP(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), OSM_TYPE_GPS_MAP, OsmGpsMap))
#DEFINE OSM_GPS_MAP_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), OSM_TYPE_GPS_MAP, OSMMapClass))
#DEFINE OSM_IS_GPS_MAP(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), OSM_TYPE_GPS_MAP))
#DEFINE OSM_IS_CLASS_GPS_MAP(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), OSM_TYPE_GPS_MAP))
#DEFINE OSM_GPS_MAP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), OSM_TYPE_GPS_MAP, OSMMapClass))
DECLARE FUNCTION osm_gps_map_new() AS GtkWidget PTR
DECLARE FUNCTION osm_gps_map_get_default_cache_directory() AS gchar PTR
DECLARE FUNCTION osm_gps_map_source_get_friendly_name(BYVAL AS OsmGpsMapSource_t) AS const char PTR
DECLARE FUNCTION osm_gps_map_source_get_image_format(BYVAL AS OsmGpsMapSource_t) AS const char PTR
DECLARE FUNCTION osm_gps_map_source_get_max_zoom(BYVAL AS OsmGpsMapSource_t) AS gint /'int'/
DECLARE FUNCTION osm_gps_map_source_get_min_zoom(BYVAL AS OsmGpsMapSource_t) AS gint /'int'/
DECLARE FUNCTION osm_gps_map_source_get_repo_uri(BYVAL AS OsmGpsMapSource_t) AS const char PTR
DECLARE FUNCTION osm_gps_map_source_is_valid(BYVAL AS OsmGpsMapSource_t) AS gboolean
DECLARE SUB osm_gps_map_convert_geographic_to_screen(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapPoint PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE SUB osm_gps_map_convert_screen_to_geographic(BYVAL AS OsmGpsMap PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS OsmGpsMapPoint PTR)
DECLARE SUB osm_gps_map_download_cancel_all(BYVAL AS OsmGpsMap PTR)
DECLARE SUB osm_gps_map_download_maps(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapPoint PTR, BYVAL AS OsmGpsMapPoint PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
DECLARE SUB osm_gps_map_get_bbox(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapPoint PTR, BYVAL AS OsmGpsMapPoint PTR)
DECLARE FUNCTION osm_gps_map_get_event_location(BYVAL AS OsmGpsMap PTR, BYVAL AS GdkEventButton PTR) AS OsmGpsMapPoint PTR
DECLARE FUNCTION osm_gps_map_get_scale(BYVAL AS OsmGpsMap PTR) AS gfloat /'float'/
DECLARE SUB osm_gps_map_gps_add(BYVAL AS OsmGpsMap PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/)
DECLARE SUB osm_gps_map_gps_clear(BYVAL AS OsmGpsMap PTR)
DECLARE FUNCTION osm_gps_map_gps_get_track(BYVAL AS OsmGpsMap PTR) AS OsmGpsMapTrack PTR
DECLARE FUNCTION osm_gps_map_image_add(BYVAL AS OsmGpsMap PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/, BYVAL AS GdkPixbuf PTR) AS OsmGpsMapImage PTR
DECLARE FUNCTION osm_gps_map_image_add_with_alignment(BYVAL AS OsmGpsMap PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/, BYVAL AS GdkPixbuf PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/) AS OsmGpsMapImage PTR
DECLARE FUNCTION osm_gps_map_image_add_with_alignment_z(BYVAL AS OsmGpsMap PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/, BYVAL AS GdkPixbuf PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/, BYVAL AS gint) AS OsmGpsMapImage PTR
DECLARE FUNCTION osm_gps_map_image_add_z(BYVAL AS OsmGpsMap PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/, BYVAL AS GdkPixbuf PTR, BYVAL AS gint) AS OsmGpsMapImage PTR
DECLARE FUNCTION osm_gps_map_image_remove(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapImage PTR) AS gboolean
DECLARE SUB osm_gps_map_image_remove_all(BYVAL AS OsmGpsMap PTR)
DECLARE SUB osm_gps_map_layer_add(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapLayer PTR)
DECLARE FUNCTION osm_gps_map_layer_remove(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapLayer PTR) AS gboolean
DECLARE SUB osm_gps_map_layer_remove_all(BYVAL AS OsmGpsMap PTR)
DECLARE FUNCTION osm_gps_map_map_redraw(BYVAL AS OsmGpsMap PTR) AS gboolean
DECLARE SUB osm_gps_map_map_redraw_idle(BYVAL AS OsmGpsMap PTR)
DECLARE SUB osm_gps_map_polygon_add(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapPolygon PTR)
DECLARE FUNCTION osm_gps_map_polygon_remove(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapPolygon PTR) AS gboolean
DECLARE SUB osm_gps_map_polygon_remove_all(BYVAL AS OsmGpsMap PTR)
DECLARE SUB osm_gps_map_scroll(BYVAL AS OsmGpsMap PTR, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB osm_gps_map_set_center(BYVAL AS OsmGpsMap PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/)
DECLARE SUB osm_gps_map_set_center_and_zoom(BYVAL AS OsmGpsMap PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/, BYVAL AS gint /'int'/)
DECLARE SUB osm_gps_map_set_keyboard_shortcut(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapKey_t, BYVAL AS guint)
DECLARE FUNCTION osm_gps_map_set_zoom(BYVAL AS OsmGpsMap PTR, BYVAL AS gint /'int'/) AS gint /'int'/
DECLARE SUB osm_gps_map_set_zoom_offset(BYVAL AS OsmGpsMap PTR, BYVAL AS gint /'int'/)
DECLARE SUB osm_gps_map_track_add(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapTrack PTR)
DECLARE FUNCTION osm_gps_map_track_remove(BYVAL AS OsmGpsMap PTR, BYVAL AS OsmGpsMapTrack PTR) AS gboolean
DECLARE SUB osm_gps_map_track_remove_all(BYVAL AS OsmGpsMap PTR)
DECLARE SUB osm_gps_map_zoom_fit_bbox(BYVAL AS OsmGpsMap PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/)
DECLARE FUNCTION osm_gps_map_zoom_in(BYVAL AS OsmGpsMap PTR) AS gint /'int'/
DECLARE FUNCTION osm_gps_map_zoom_out(BYVAL AS OsmGpsMap PTR) AS gint /'int'/
TYPE _OsmGpsMapClass
  AS GtkDrawingAreaClass parent_class
  draw_gps_point AS SUB CDECL(BYVAL AS OsmGpsMap PTR, BYVAL AS cairo_t PTR)
END TYPE
TYPE _OsmGpsMapImage
  AS GObject parent
  AS OsmGpsMapImagePrivate PTR priv
END TYPE
DECLARE FUNCTION osm_gps_map_image_get_type() AS GType
#DEFINE OSM_TYPE_GPS_MAP_IMAGE (osm_gps_map_image_get_type())
#DEFINE OSM_GPS_MAP_IMAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), OSM_TYPE_GPS_MAP_IMAGE, OsmGpsMapImage))
#DEFINE OSM_GPS_MAP_IMAGE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), OSM_TYPE_GPS_MAP_IMAGE, OSMMapImageClass))
#DEFINE OSM_IS_GPS_MAP_IMAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), OSM_TYPE_GPS_MAP_IMAGE))
#DEFINE OSM_IS_CLASS_GPS_MAP_IMAGE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), OSM_TYPE_GPS_MAP_IMAGE))
#DEFINE OSM_GPS_MAP_IMAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), OSM_TYPE_GPS_MAP_IMAGE, OSMMapImageClass))
DECLARE FUNCTION osm_gps_map_image_new() AS OsmGpsMapImage PTR
DECLARE SUB osm_gps_map_image_draw(BYVAL AS OsmGpsMapImage PTR, BYVAL AS cairo_t PTR, BYVAL AS GdkRectangle PTR)
DECLARE FUNCTION osm_gps_map_image_get_point(BYVAL AS OsmGpsMapImage PTR) AS const OsmGpsMapPoint PTR
DECLARE FUNCTION osm_gps_map_image_get_rotation(BYVAL AS OsmGpsMapImage PTR) AS gfloat /'float'/
DECLARE FUNCTION osm_gps_map_image_get_zorder(BYVAL AS OsmGpsMapImage PTR) AS gint
DECLARE SUB osm_gps_map_image_set_rotation(BYVAL AS OsmGpsMapImage PTR, BYVAL AS gfloat /'float'/)
TYPE _OsmGpsMapImageClass
  AS GObjectClass parent_class
END TYPE
DECLARE FUNCTION osm_gps_map_layer_get_type() AS GType
#DEFINE OSM_TYPE_GPS_MAP_LAYER (osm_gps_map_layer_get_type())
#DEFINE OSM_GPS_MAP_LAYER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), OSM_TYPE_GPS_MAP_LAYER, OsmGpsMapLayer))
#DEFINE OSM_GPS_MAP_LAYER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), OSM_TYPE_GPS_MAP_LAYER, OSMMapLayerIface))
#DEFINE OSM_IS_GPS_MAP_LAYER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), OSM_TYPE_GPS_MAP_LAYER))
#DEFINE OSM_GPS_MAP_LAYER_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), OSM_TYPE_GPS_MAP_LAYER, OSMMapLayerIface))
DECLARE FUNCTION osm_gps_map_layer_busy(BYVAL AS OsmGpsMapLayer PTR) AS gboolean
DECLARE FUNCTION osm_gps_map_layer_button_press(BYVAL AS OsmGpsMapLayer PTR, BYVAL AS OsmGpsMap PTR, BYVAL AS GdkEventButton PTR) AS gboolean
DECLARE SUB osm_gps_map_layer_draw(BYVAL AS OsmGpsMapLayer PTR, BYVAL AS OsmGpsMap PTR, BYVAL AS cairo_t PTR)
DECLARE SUB osm_gps_map_layer_render(BYVAL AS OsmGpsMapLayer PTR, BYVAL AS OsmGpsMap PTR)
TYPE _OsmGpsMapLayerIface
  AS GTypeInterface parent
  render AS SUB CDECL(BYVAL AS OsmGpsMapLayer PTR, BYVAL AS OsmGpsMap PTR)
  draw AS SUB CDECL(BYVAL AS OsmGpsMapLayer PTR, BYVAL AS OsmGpsMap PTR, BYVAL AS cairo_t PTR)
  busy AS FUNCTION CDECL(BYVAL AS OsmGpsMapLayer PTR) AS gboolean
  button_press AS FUNCTION CDECL(BYVAL AS OsmGpsMapLayer PTR, BYVAL AS OsmGpsMap PTR, BYVAL AS GdkEventButton PTR) AS gboolean
END TYPE
TYPE _OsmGpsMapOsd
  AS GObject parent
  AS OsmGpsMapOsdPrivate PTR priv
END TYPE
DECLARE FUNCTION osm_gps_map_osd_get_type() AS GType
#DEFINE OSM_TYPE_GPS_MAP_OSD (osm_gps_map_osd_get_type())
#DEFINE OSM_GPS_MAP_OSD(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), OSM_TYPE_GPS_MAP_OSD, OsmGpsMapOsd))
#DEFINE OSM_GPS_MAP_OSD_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), OSM_TYPE_GPS_MAP_OSD, OSMMapOsdClass))
#DEFINE OSM_IS_GPS_MAP_OSD(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), OSM_TYPE_GPS_MAP_OSD))
#DEFINE OSM_IS_CLASS_GPS_MAP_OSD(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), OSM_TYPE_GPS_MAP_OSD))
#DEFINE OSM_GPS_MAP_OSD_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), OSM_TYPE_GPS_MAP_OSD, OSMMapOsdClass))
DECLARE FUNCTION osm_gps_map_osd_new() AS OsmGpsMapOsd PTR
TYPE _OsmGpsMapOsdClass
  AS GObjectClass parent_class
END TYPE
TYPE _OsmGpsMapPoint
  AS gfloat /'float'/ rlat
  AS gfloat /'float'/ rlon
END TYPE
DECLARE FUNCTION osm_gps_map_point_new_degrees(BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/) AS OsmGpsMapPoint PTR
DECLARE FUNCTION osm_gps_map_point_new_radians(BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/) AS OsmGpsMapPoint PTR
DECLARE FUNCTION osm_gps_map_point_copy(BYVAL AS const OsmGpsMapPoint PTR) AS OsmGpsMapPoint PTR
DECLARE SUB osm_gps_map_point_free(BYVAL AS OsmGpsMapPoint PTR)
DECLARE SUB osm_gps_map_point_get_degrees(BYVAL AS OsmGpsMapPoint PTR, BYVAL AS gfloat /'float'/ PTR, BYVAL AS gfloat /'float'/ PTR)
DECLARE SUB osm_gps_map_point_get_radians(BYVAL AS OsmGpsMapPoint PTR, BYVAL AS gfloat /'float'/ PTR, BYVAL AS gfloat /'float'/ PTR)
DECLARE SUB osm_gps_map_point_set_degrees(BYVAL AS OsmGpsMapPoint PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/)
DECLARE SUB osm_gps_map_point_set_radians(BYVAL AS OsmGpsMapPoint PTR, BYVAL AS gfloat /'float'/, BYVAL AS gfloat /'float'/)
TYPE _OsmGpsMapPolygon
  AS GObject parent
  AS OsmGpsMapPolygonPrivate PTR priv
END TYPE
DECLARE FUNCTION osm_gps_map_polygon_get_type() AS GType
#DEFINE OSM_TYPE_GPS_MAP_POLYGON (osm_gps_map_polygon_get_type())
#DEFINE OSM_GPS_MAP_POLYGON(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), OSM_TYPE_GPS_MAP_POLYGON, OsmGpsMapPolygon))
#DEFINE OSM_GPS_MAP_POLYGON_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), OSM_TYPE_GPS_MAP_POLYGON, OSMMapPolygonClass))
#DEFINE OSM_IS_GPS_MAP_POLYGON(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), OSM_TYPE_GPS_MAP_POLYGON))
#DEFINE OSM_IS_CLASS_GPS_MAP_POLYGON(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), OSM_TYPE_GPS_MAP_POLYGON))
#DEFINE OSM_GPS_MAP_POLYGON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), OSM_TYPE_GPS_MAP_POLYGON, OSMMapPolygonClass))
DECLARE FUNCTION osm_gps_map_polygon_new() AS OsmGpsMapPolygon PTR
DECLARE FUNCTION osm_gps_map_polygon_get_track(BYVAL AS OsmGpsMapPolygon PTR) AS OsmGpsMapTrack PTR
TYPE _OsmGpsMapPolygonClass
  AS GObjectClass parent_class
END TYPE
TYPE _OsmGpsMapTrack
  AS GObject parent
  AS OsmGpsMapTrackPrivate PTR priv
END TYPE
DECLARE FUNCTION osm_gps_map_track_get_type() AS GType
#DEFINE OSM_TYPE_GPS_MAP_TRACK (osm_gps_map_track_get_type())
#DEFINE OSM_GPS_MAP_TRACK(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), OSM_TYPE_GPS_MAP_TRACK, OsmGpsMapTrack))
#DEFINE OSM_GPS_MAP_TRACK_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), OSM_TYPE_GPS_MAP_TRACK, OSMMapTrackClass))
#DEFINE OSM_IS_GPS_MAP_TRACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), OSM_TYPE_GPS_MAP_TRACK))
#DEFINE OSM_IS_CLASS_GPS_MAP_TRACK(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), OSM_TYPE_GPS_MAP_TRACK))
#DEFINE OSM_GPS_MAP_TRACK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), OSM_TYPE_GPS_MAP_TRACK, OSMMapTrackClass))
DECLARE FUNCTION osm_gps_map_track_new() AS OsmGpsMapTrack PTR
DECLARE SUB osm_gps_map_track_add_point(BYVAL AS OsmGpsMapTrack PTR, BYVAL AS const OsmGpsMapPoint PTR)
DECLARE SUB osm_gps_map_track_get_color(BYVAL AS OsmGpsMapTrack PTR, BYVAL AS GdkRGBA PTR)
DECLARE FUNCTION osm_gps_map_track_get_length(BYVAL AS OsmGpsMapTrack PTR) AS double
DECLARE FUNCTION osm_gps_map_track_get_point(BYVAL AS OsmGpsMapTrack PTR, BYVAL AS gint /'int'/) AS OsmGpsMapPoint PTR
DECLARE FUNCTION osm_gps_map_track_get_points(BYVAL AS OsmGpsMapTrack PTR) AS GSList PTR
DECLARE SUB osm_gps_map_track_insert_point(BYVAL AS OsmGpsMapTrack PTR, BYVAL AS OsmGpsMapPoint PTR, BYVAL AS gint /'int'/)
DECLARE FUNCTION osm_gps_map_track_n_points(BYVAL AS OsmGpsMapTrack PTR) AS gint /'int'/
DECLARE SUB osm_gps_map_track_remove_point(BYVAL AS OsmGpsMapTrack PTR, BYVAL AS gint /'int'/)
DECLARE SUB osm_gps_map_track_set_color(BYVAL AS OsmGpsMapTrack PTR, BYVAL AS GdkRGBA PTR)
TYPE _OsmGpsMapTrackClass
  AS GObjectClass parent_class
END TYPE
' P_4

END EXTERN

