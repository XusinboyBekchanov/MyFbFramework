'            FreeBasic header file, auto-generated by
'                       ### girtobac ###
' LGPLv2.1 (C) 2013-2022 by Thomas{ doT ]Freiherr[ At ]gmx[ DoT }net
' Auto-translated from file /home/tom/Downloads/GtkExtra-3.0.gir
#include once "_GirToBac-0.0.bi"
' Repository version 1.2
#include once "Atk-1.0.bi"
#include once "GLib-2.0.bi"
#include once "GModule-2.0.bi"
#include once "GObject-2.0.bi"
#include once "Gdk-2.0.bi"
#include once "GdkPixbuf-2.0.bi"
#include once "Gio-2.0.bi"
#include once "Gtk-2.0.bi"
#include once "Pango-1.0.bi"
'#include once "cairo-1.0.bi"
Type As _GtkBorderCombo GtkBorderCombo
Type As _GtkBorderComboClass GtkBorderComboClass
Type As _GtkCharSelection GtkCharSelection
Type As _GtkCharSelectionClass GtkCharSelectionClass
Type As _GtkCheckItem GtkCheckItem
Type As _GtkCheckItemClass GtkCheckItemClass
Type As _GtkColorCombo GtkColorCombo
Type As _GtkColorComboClass GtkColorComboClass
Type As _GtkComboButton GtkComboButton
Type As _GtkComboButtonClass GtkComboButtonClass
Type As _GtkDataEntry GtkDataEntry
Type As _GtkDataEntryClass GtkDataEntryClass
Type As _GtkDataTextView GtkDataTextView
Type As _GtkDataTextViewClass GtkDataTextViewClass
Type As _GtkDirTree GtkDirTree
Type As _GtkDirTreeClass GtkDirTreeClass
Type As _GtkDirTreeNode GtkDirTreeNode
Type As _GtkFileList GtkFileList
Type As _GtkFileListClass GtkFileListClass
Type As _GtkFileListItem GtkFileListItem
Type As _GtkFileListType GtkFileListType
Type As _GtkFontCombo GtkFontCombo
Type As _GtkFontComboClass GtkFontComboClass
Type As _GtkIconFileSel GtkIconFileSel
Type As _GtkIconFileSelClass GtkIconFileSelClass
Type As _GtkIconList GtkIconList
Type As _GtkIconListClass GtkIconListClass
Type As _GtkIconListItem GtkIconListItem
TYPE AS LONG GtkIconListMode
ENUM
  GTK_ICON_LIST_ICON = 0
  GTK_ICON_LIST_TEXT_RIGHT = 1
  GTK_ICON_LIST_TEXT_BELOW = 2
END ENUM
TYPE AS _GtkItemEntry GtkItemEntry
TYPE AS _GtkItemEntryClass GtkItemEntryClass
#DEFINE GTK_PLOT_A4_H 842
#DEFINE GTK_PLOT_A4_W 595
#DEFINE GTK_PLOT_CANVAS_DND_FLAGS 0
#DEFINE GTK_PLOT_EXECUTIVE_H 720
#DEFINE GTK_PLOT_EXECUTIVE_W 540
#DEFINE GTK_PLOT_LEGAL_H 1008
#DEFINE GTK_PLOT_LEGAL_W 612
#DEFINE GTK_PLOT_LETTER_H 792
#DEFINE GTK_PLOT_LETTER_W 612
TYPE AS _GtkPSFont GtkPSFont
TYPE AS _GtkPlot GtkPlot
TYPE AS _GtkPlot3D GtkPlot3D
TYPE AS _GtkPlot3DClass GtkPlot3DClass
TYPE AS _GtkPlotArray GtkPlotArray
TYPE AS _GtkPlotArrayClass GtkPlotArrayClass
TYPE AS _GtkPlotArrayList GtkPlotArrayList
TYPE AS _GtkPlotArrayListClass GtkPlotArrayListClass
TYPE AS LONG GtkPlotArrow
ENUM
  GTK_PLOT_ARROW_NONE = 0
  GTK_PLOT_ARROW_ORIGIN = 1
  GTK_PLOT_ARROW_END = 2
END ENUM
TYPE AS _GtkPlotAxis GtkPlotAxis
TYPE AS _GtkPlotAxisClass GtkPlotAxisClass
TYPE AS LONG GtkPlotAxisPos
ENUM
  GTK_PLOT_AXIS_LEFT = 0
  GTK_PLOT_AXIS_RIGHT = 1
  GTK_PLOT_AXIS_TOP = 2
  GTK_PLOT_AXIS_BOTTOM = 3
END ENUM
TYPE AS _GtkPlotBar GtkPlotBar
TYPE AS _GtkPlotBarClass GtkPlotBarClass
TYPE AS LONG GtkPlotBarUnits
ENUM
  GTK_PLOT_BAR_POINTS = 0
  GTK_PLOT_BAR_RELATIVE = 1
  GTK_PLOT_BAR_ABSOLUTE = 2
END ENUM
TYPE AS LONG GtkPlotBorderStyle
ENUM
  GTK_PLOT_BORDER_NONE = 0
  GTK_PLOT_BORDER_LINE = 1
  GTK_PLOT_BORDER_SHADOW = 2
END ENUM
TYPE AS _GtkPlotBox GtkPlotBox
TYPE AS _GtkPlotBoxClass GtkPlotBoxClass
TYPE AS _GtkPlotBubble GtkPlotBubble
TYPE AS _GtkPlotBubbleClass GtkPlotBubbleClass
TYPE AS _GtkPlotCSurface GtkPlotCSurface
TYPE AS _GtkPlotCSurfaceClass GtkPlotCSurfaceClass
TYPE AS _GtkPlotCairo GtkPlotCairo
TYPE AS _GtkPlotCairoClass GtkPlotCairoClass
TYPE AS _GtkPlotCandle GtkPlotCandle
TYPE AS _GtkPlotCandleClass GtkPlotCandleClass
TYPE AS _GtkPlotCanvas GtkPlotCanvas
TYPE AS LONG GtkPlotCanvasAction
ENUM
  GTK_PLOT_CANVAS_ACTION_INACTIVE = 0
  GTK_PLOT_CANVAS_ACTION_SELECTION = 1
  GTK_PLOT_CANVAS_ACTION_DRAG = 2
  GTK_PLOT_CANVAS_ACTION_RESIZE = 3
END ENUM
TYPE AS LONG GtkPlotCanvasArrow
ENUM
  GTK_PLOT_CANVAS_ARROW_NONE = 0
  GTK_PLOT_CANVAS_ARROW_ORIGIN = 1
  GTK_PLOT_CANVAS_ARROW_END = 2
END ENUM
TYPE AS _GtkPlotCanvasChild GtkPlotCanvasChild
TYPE AS _GtkPlotCanvasChildClass GtkPlotCanvasChildClass
TYPE AS LONG GtkPlotCanvasChildFlags
ENUM
  GTK_PLOT_CANVAS_CHILD_FROZEN = 0
  GTK_PLOT_CANVAS_CHILD_CAN_MOVE = 1
  GTK_PLOT_CANVAS_CHILD_CAN_RESIZE = 2
END ENUM
TYPE AS _GtkPlotCanvasClass GtkPlotCanvasClass
TYPE AS _GtkPlotCanvasEllipse GtkPlotCanvasEllipse
TYPE AS _GtkPlotCanvasEllipseClass GtkPlotCanvasEllipseClass
TYPE AS LONG GtkPlotCanvasFlag
ENUM
  GTK_PLOT_CANVAS_FROZEN = 0
  GTK_PLOT_CANVAS_CAN_MOVE = 1
  GTK_PLOT_CANVAS_CAN_RESIZE = 2
END ENUM
TYPE AS LONG GtkPlotCanvasFlags
ENUM
  GTK_PLOT_CANVAS_CAN_SELECT = 1
  GTK_PLOT_CANVAS_CAN_SELECT_ITEM = 2
  GTK_PLOT_CANVAS_CAN_DND = 4
END ENUM
TYPE AS _GtkPlotCanvasLine GtkPlotCanvasLine
TYPE AS _GtkPlotCanvasLineClass GtkPlotCanvasLineClass
TYPE AS _GtkPlotCanvasPixmap GtkPlotCanvasPixmap
TYPE AS _GtkPlotCanvasPixmapClass GtkPlotCanvasPixmapClass
TYPE AS _GtkPlotCanvasPlot GtkPlotCanvasPlot
TYPE AS _GtkPlotCanvasPlotClass GtkPlotCanvasPlotClass
TYPE AS LONG GtkPlotCanvasPlotFlags
ENUM
  GTK_PLOT_CANVAS_PLOT_SELECT_POINT = 1
  GTK_PLOT_CANVAS_PLOT_DND_POINT = 2
END ENUM
TYPE AS LONG GtkPlotCanvasPlotPos
ENUM
  GTK_PLOT_CANVAS_PLOT_OUT = 0
  GTK_PLOT_CANVAS_PLOT_IN_PLOT = 1
  GTK_PLOT_CANVAS_PLOT_IN_LEGENDS = 2
  GTK_PLOT_CANVAS_PLOT_IN_TITLE = 3
  GTK_PLOT_CANVAS_PLOT_IN_AXIS = 4
  GTK_PLOT_CANVAS_PLOT_IN_DATA = 5
  GTK_PLOT_CANVAS_PLOT_IN_GRADIENT = 6
  GTK_PLOT_CANVAS_PLOT_IN_MARKER = 7
END ENUM
TYPE AS LONG GtkPlotCanvasPos
ENUM
  GTK_PLOT_CANVAS_OUT = 0
  GTK_PLOT_CANVAS_IN = 1
  GTK_PLOT_CANVAS_LEFT = 2
  GTK_PLOT_CANVAS_RIGHT = 3
  GTK_PLOT_CANVAS_TOP = 4
  GTK_PLOT_CANVAS_BOTTOM = 5
  GTK_PLOT_CANVAS_TOP_LEFT = 6
  GTK_PLOT_CANVAS_TOP_RIGHT = 7
  GTK_PLOT_CANVAS_BOTTOM_LEFT = 8
  GTK_PLOT_CANVAS_BOTTOM_RIGHT = 9
END ENUM
TYPE AS _GtkPlotCanvasRectangle GtkPlotCanvasRectangle
TYPE AS _GtkPlotCanvasRectangleClass GtkPlotCanvasRectangleClass
TYPE AS LONG GtkPlotCanvasSelection
ENUM
  GTK_PLOT_CANVAS_SELECT_NONE = 0
  GTK_PLOT_CANVAS_SELECT_MARKERS = 1
  GTK_PLOT_CANVAS_SELECT_TARGET = 2
END ENUM
TYPE AS LONG GtkPlotCanvasSelectionMode
ENUM
  GTK_PLOT_CANVAS_SELECT_CLICK_1 = 0
  GTK_PLOT_CANVAS_SELECT_CLICK_2 = 1
END ENUM
TYPE AS _GtkPlotCanvasText GtkPlotCanvasText
TYPE AS _GtkPlotCanvasTextClass GtkPlotCanvasTextClass
TYPE AS _GtkPlotClass GtkPlotClass
TYPE AS LONG GtkPlotConnector
ENUM
  GTK_PLOT_CONNECT_NONE = 0
  GTK_PLOT_CONNECT_STRAIGHT = 1
  GTK_PLOT_CONNECT_SPLINE = 2
  GTK_PLOT_CONNECT_HV_STEP = 3
  GTK_PLOT_CONNECT_VH_STEP = 4
  GTK_PLOT_CONNECT_MIDDLE_STEP = 5
END ENUM
TYPE AS _GtkPlotDT GtkPlotDT
TYPE AS _GtkPlotDTClass GtkPlotDTClass
TYPE AS _GtkPlotDTnode GtkPlotDTnode
TYPE AS _GtkPlotDTsegment GtkPlotDTsegment
TYPE AS _GtkPlotDTtriangle GtkPlotDTtriangle
TYPE AS _GtkPlotData GtkPlotData
TYPE AS _GtkPlotDataClass GtkPlotDataClass
TYPE AS LONG GtkPlotError
ENUM
  GTK_PLOT_ERROR_DIV_ZERO = 0
  GTK_PLOT_ERROR_LOG_NEG = 1
END ENUM
TYPE AS _GtkPlotFlux GtkPlotFlux
TYPE AS _GtkPlotFluxClass GtkPlotFluxClass
TYPE AS _GtkPlotGdk GtkPlotGdk
TYPE AS _GtkPlotGdkClass GtkPlotGdkClass
TYPE AS LONG GtkPlotLabelPos
ENUM
  GTK_PLOT_LABEL_NONE = 0
  GTK_PLOT_LABEL_IN = 1
  GTK_PLOT_LABEL_OUT = 2
END ENUM
TYPE AS LONG GtkPlotLabelStyle
ENUM
  GTK_PLOT_LABEL_FLOAT = 0
  GTK_PLOT_LABEL_EXP = 1
  GTK_PLOT_LABEL_POW = 2
END ENUM
TYPE AS _GtkPlotLine GtkPlotLine
TYPE AS LONG GtkPlotLineStyle
ENUM
  GTK_PLOT_LINE_NONE = 0
  GTK_PLOT_LINE_SOLID = 1
  GTK_PLOT_LINE_DOTTED = 2
  GTK_PLOT_LINE_DASHED = 3
  GTK_PLOT_LINE_DOT_DASH = 4
  GTK_PLOT_LINE_DOT_DOT_DASH = 5
  GTK_PLOT_LINE_DOT_DASH_DASH = 6
END ENUM
TYPE AS _GtkPlotMarker GtkPlotMarker
TYPE AS LONG GtkPlotOrientation
ENUM
  GTK_PLOT_AXIS_X = 0
  GTK_PLOT_AXIS_Y = 1
  GTK_PLOT_AXIS_Z = 2
END ENUM
TYPE AS _GtkPlotPC GtkPlotPC
TYPE AS _GtkPlotPCClass GtkPlotPCClass
TYPE AS _GtkPlotPS GtkPlotPS
TYPE AS _GtkPlotPSClass GtkPlotPSClass
TYPE AS LONG GtkPlotPageOrientation
ENUM
  GTK_PLOT_PORTRAIT = 0
  GTK_PLOT_LANDSCAPE = 1
END ENUM
TYPE AS LONG GtkPlotPageSize
ENUM
  GTK_PLOT_LETTER = 0
  GTK_PLOT_LEGAL = 1
  GTK_PLOT_A4 = 2
  GTK_PLOT_EXECUTIVE = 3
  GTK_PLOT_CUSTOM = 4
END ENUM
TYPE AS _GtkPlotPixmap GtkPlotPixmap
TYPE AS _GtkPlotPixmapClass GtkPlotPixmapClass
TYPE AS LONG GtkPlotPlane
ENUM
  GTK_PLOT_PLANE_XY = 0
  GTK_PLOT_PLANE_YX = 0
  GTK_PLOT_PLANE_XZ = 1
  GTK_PLOT_PLANE_ZX = 1
  GTK_PLOT_PLANE_YZ = 2
  GTK_PLOT_PLANE_ZY = 2
END ENUM
TYPE AS _GtkPlotPoint GtkPlotPoint
TYPE AS _GtkPlotPolar GtkPlotPolar
TYPE AS _GtkPlotPolarClass GtkPlotPolarClass
TYPE AS _GtkPlotPolygon GtkPlotPolygon
TYPE AS LONG GtkPlotProjection
ENUM
  GTK_PLOT_PROJECT_NONE = 0
  GTK_PLOT_PROJECT_EMPTY = 1
  GTK_PLOT_PROJECT_FULL = 2
END ENUM
TYPE AS LONG GtkPlotScale
ENUM
  GTK_PLOT_SCALE_LINEAR = 0
  GTK_PLOT_SCALE_LOG10 = 1
END ENUM
TYPE AS _GtkPlotSegment GtkPlotSegment
TYPE AS _GtkPlotSegmentClass GtkPlotSegmentClass
TYPE AS LONG GtkPlotSide
ENUM
  GTK_PLOT_SIDE_XY = 1
  GTK_PLOT_SIDE_XZ = 2
  GTK_PLOT_SIDE_YX = 4
  GTK_PLOT_SIDE_YZ = 8
  GTK_PLOT_SIDE_ZX = 16
  GTK_PLOT_SIDE_ZY = 32
END ENUM
TYPE AS _GtkPlotSurface GtkPlotSurface
TYPE AS _GtkPlotSurfaceClass GtkPlotSurfaceClass
TYPE AS _GtkPlotSymbol GtkPlotSymbol
TYPE AS LONG GtkPlotSymbolStyle
ENUM
  GTK_PLOT_SYMBOL_EMPTY = 0
  GTK_PLOT_SYMBOL_FILLED = 1
  GTK_PLOT_SYMBOL_OPAQUE = 2
END ENUM
TYPE AS LONG GtkPlotSymbolType
ENUM
  GTK_PLOT_SYMBOL_NONE = 0
  GTK_PLOT_SYMBOL_SQUARE = 1
  GTK_PLOT_SYMBOL_CIRCLE = 2
  GTK_PLOT_SYMBOL_UP_TRIANGLE = 3
  GTK_PLOT_SYMBOL_DOWN_TRIANGLE = 4
  GTK_PLOT_SYMBOL_RIGHT_TRIANGLE = 5
  GTK_PLOT_SYMBOL_LEFT_TRIANGLE = 6
  GTK_PLOT_SYMBOL_DIAMOND = 7
  GTK_PLOT_SYMBOL_PLUS = 8
  GTK_PLOT_SYMBOL_CROSS = 9
  GTK_PLOT_SYMBOL_STAR = 10
  GTK_PLOT_SYMBOL_DOT = 11
  GTK_PLOT_SYMBOL_IMPULSE = 12
END ENUM
TYPE AS _GtkPlotText GtkPlotText
TYPE AS _GtkPlotTick GtkPlotTick
TYPE AS _GtkPlotTicks GtkPlotTicks
TYPE AS LONG GtkPlotTicksPos
ENUM
  GTK_PLOT_TICKS_NONE = 0
  GTK_PLOT_TICKS_IN = 1
  GTK_PLOT_TICKS_OUT = 2
END ENUM
TYPE AS LONG GtkPlotUnits
ENUM
  GTK_PLOT_PSPOINTS = 0
  GTK_PLOT_MM = 1
  GTK_PLOT_CM = 2
  GTK_PLOT_INCHES = 3
END ENUM
TYPE AS _GtkPlotVector GtkPlotVector
#DEFINE GTK_SHEET_COLUMN_DEFAULT_WIDTH 80
#DEFINE GTK_SHEET_COLUMN_MIN_WIDTH 10
#DEFINE GTK_SHEET_OPTIMIZE_COLUMN_DRAW 0
TYPE AS _GtkSheet GtkSheet
TYPE AS LONG GtkSheetAttrType
ENUM
  GTK_SHEET_FOREGROUND = 0
  GTK_SHEET_BACKGROUND = 1
  GTK_SHEET_FONT = 2
  GTK_SHEET_JUSTIFICATION = 3
  GTK_SHEET_BORDER = 4
  GTK_SHEET_BORDER_COLOR = 5
  GTK_SHEET_IS_EDITABLE = 6
  GTK_SHEET_IS_VISIBLE = 7
END ENUM
TYPE AS _GtkSheetButton GtkSheetButton
TYPE AS _GtkSheetCell GtkSheetCell
TYPE AS _GtkSheetCellAttr GtkSheetCellAttr
TYPE AS _GtkSheetCellBorder GtkSheetCellBorder
TYPE AS _GtkSheetChild GtkSheetChild
TYPE AS _GtkSheetClass GtkSheetClass
TYPE AS _GtkSheetColumn GtkSheetColumn
TYPE AS _GtkSheetColumnClass GtkSheetColumnClass
TYPE AS LONG GtkSheetEntryType
ENUM
  GTK_SHEET_ENTRY_TYPE_DEFAULT = 0
  GTK_SHEET_ENTRY_TYPE_GTK_ITEM_ENTRY = 1
  GTK_SHEET_ENTRY_TYPE_GTK_ENTRY = 2
  GTK_SHEET_ENTRY_TYPE_GTK_TEXT_VIEW = 3
  GTK_SHEET_ENTRY_TYPE_GTK_DATA_TEXT_VIEW = 4
  GTK_SHEET_ENTRY_TYPE_GTK_SPIN_BUTTON = 5
  GTK_SHEET_ENTRY_TYPE_GTK_COMBO_BOX = 6
  GTK_SHEET_ENTRY_TYPE_GTK_COMBO_BOX_ENTRY = 7
  GTK_SHEET_ENTRY_TYPE_GTK_COMBO = 8
END ENUM
TYPE AS _GtkSheetRange GtkSheetRange
TYPE AS _GtkSheetRow GtkSheetRow
TYPE AS LONG GtkSheetState
ENUM
  GTK_SHEET_NORMAL = 0
  GTK_SHEET_ROW_SELECTED = 1
  GTK_SHEET_COLUMN_SELECTED = 2
  GTK_SHEET_RANGE_SELECTED = 3
END ENUM
TYPE AS LONG GtkSheetTraverseType
ENUM
  GTK_SHEET_TRAVERSE_ALL = 0
  GTK_SHEET_TRAVERSE_EDITABLE = 1
END ENUM
TYPE AS LONG GtkSheetVerticalJustification
ENUM
  GTK_SHEET_VERTICAL_JUSTIFICATION_DEFAULT = 0
  GTK_SHEET_VERTICAL_JUSTIFICATION_TOP = 1
  GTK_SHEET_VERTICAL_JUSTIFICATION_MIDDLE = 2
  GTK_SHEET_VERTICAL_JUSTIFICATION_BOTTOM = 3
END ENUM
TYPE AS _GtkToggleCombo GtkToggleCombo
TYPE AS _GtkToggleComboClass GtkToggleComboClass
EXTERN "C" LIB "gtkextra-x11-3.0"
' P_X

TYPE _GtkComboButton
  AS GtkHBox hbox
  AS GtkWidget PTR button
  AS GtkWidget PTR arrow
  AS GtkWidget PTR popup
  AS GtkWidget PTR popwin
  AS GtkWidget PTR frame
END TYPE
DECLARE FUNCTION gtk_combo_button_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_COMBO_BUTTON (gtk_combo_button_get_type())
#DEFINE GTKEXTRA_COMBO_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_COMBO_BUTTON, GtkComboButton))
#DEFINE GTKEXTRA_COMBO_BUTTON_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_COMBO_BUTTON, GtkExtraComboButtonClass))
#DEFINE GTKEXTRA_IS_COMBO_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_COMBO_BUTTON))
#DEFINE GTKEXTRA_IS_CLASS_COMBO_BUTTON(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_COMBO_BUTTON))
#DEFINE GTKEXTRA_COMBO_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_COMBO_BUTTON, GtkExtraComboButtonClass))
DECLARE FUNCTION gtk_combo_button_new() AS GtkWidget PTR
DECLARE SUB gtk_combo_button_hide_popdown_window()
TYPE _GtkComboButtonClass
  AS GtkHBoxClass parent_class
END TYPE
TYPE _GtkIconList
  AS GtkFixed fixed
  AS GtkIconListMode mode
  AS GtkSelectionMode selection_mode
  AS guint freeze_count
  AS guint icon_width
  AS guint text_space
  AS guint row_spacing
  AS guint col_spacing
  AS guint icon_border
  AS gboolean is_editable
  AS GtkIconListItem PTR active_icon
  AS GdkColor background
  AS gint num_icons
  AS GList PTR icons
  AS GList PTR selection
  AS GCompareFunc compare_func
END TYPE
DECLARE FUNCTION gtk_icon_list_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_ICON_LIST (gtk_icon_list_get_type())
#DEFINE GTKEXTRA_ICON_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_ICON_LIST, GtkIconList))
#DEFINE GTKEXTRA_ICON_LIST_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_ICON_LIST, GtkExtraIconListClass))
#DEFINE GTKEXTRA_IS_ICON_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_ICON_LIST))
#DEFINE GTKEXTRA_IS_CLASS_ICON_LIST(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_ICON_LIST))
#DEFINE GTKEXTRA_ICON_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_ICON_LIST, GtkExtraIconListClass))
DECLARE FUNCTION gtk_icon_list_new(BYVAL AS guint, BYVAL AS GtkIconListMode) AS GtkWidget PTR
DECLARE FUNCTION gtk_icon_list_get_entry(BYVAL AS GtkIconListItem PTR) AS GtkWidget PTR
DECLARE FUNCTION gtk_icon_list_get_link(BYVAL AS GtkIconListItem PTR) AS gpointer
DECLARE FUNCTION gtk_icon_list_get_pixmap(BYVAL AS GtkIconListItem PTR) AS GtkWidget PTR
DECLARE SUB gtk_icon_list_link(BYVAL AS GtkIconListItem PTR, BYVAL AS gpointer)
DECLARE SUB gtk_icon_list_set_pixmap(BYVAL AS GtkIconListItem PTR, BYVAL AS GdkPixmap PTR, BYVAL AS GdkBitmap PTR)
DECLARE FUNCTION gtk_icon_list_add(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS gpointer) AS GtkIconListItem PTR
DECLARE FUNCTION gtk_icon_list_add_from_data(BYVAL AS gchar PTR PTR, BYVAL AS const gchar PTR, BYVAL AS gpointer) AS GtkIconListItem PTR
DECLARE FUNCTION gtk_icon_list_add_from_pixmap(BYVAL AS GdkPixmap PTR, BYVAL AS GdkBitmap PTR, BYVAL AS const gchar PTR, BYVAL AS gpointer) AS GtkIconListItem PTR
DECLARE SUB gtk_icon_list_clear()
DECLARE SUB gtk_icon_list_construct(BYVAL AS guint, BYVAL AS GtkIconListMode)
DECLARE SUB gtk_icon_list_freeze()
DECLARE FUNCTION gtk_icon_list_get_active_icon() AS GtkIconListItem PTR
DECLARE FUNCTION gtk_icon_list_get_col_spacing() AS guint
DECLARE FUNCTION gtk_icon_list_get_icon_at(BYVAL AS gint, BYVAL AS gint) AS GtkIconListItem PTR
DECLARE FUNCTION gtk_icon_list_get_icon_border() AS guint
DECLARE FUNCTION gtk_icon_list_get_icon_from_link(BYVAL AS gpointer) AS GtkIconListItem PTR
DECLARE FUNCTION gtk_icon_list_get_icon_width() AS guint
DECLARE FUNCTION gtk_icon_list_get_index(BYVAL AS GtkIconListItem PTR) AS gint
DECLARE FUNCTION gtk_icon_list_get_mode() AS GtkIconListMode
DECLARE FUNCTION gtk_icon_list_get_nth(BYVAL AS guint) AS GtkIconListItem PTR
DECLARE FUNCTION gtk_icon_list_get_row_spacing() AS guint
DECLARE FUNCTION gtk_icon_list_get_text_space() AS guint
DECLARE FUNCTION gtk_icon_list_is_editable() AS gboolean
DECLARE SUB gtk_icon_list_remove(BYVAL AS GtkIconListItem PTR)
DECLARE SUB gtk_icon_list_remove_nth(BYVAL AS guint)
DECLARE SUB gtk_icon_list_select_icon(BYVAL AS GtkIconListItem PTR)
DECLARE SUB gtk_icon_list_set_active_icon(BYVAL AS GtkIconListItem PTR)
DECLARE SUB gtk_icon_list_set_background(BYVAL AS GdkColor PTR)
DECLARE SUB gtk_icon_list_set_col_spacing(BYVAL AS guint)
DECLARE SUB gtk_icon_list_set_editable(BYVAL AS gboolean)
DECLARE SUB gtk_icon_list_set_icon_border(BYVAL AS guint)
DECLARE SUB gtk_icon_list_set_icon_width(BYVAL AS guint)
DECLARE SUB gtk_icon_list_set_label(BYVAL AS GtkIconListItem PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_icon_list_set_mode(BYVAL AS GtkIconListMode)
DECLARE SUB gtk_icon_list_set_row_spacing(BYVAL AS guint)
DECLARE SUB gtk_icon_list_set_selection_mode(BYVAL AS gint)
DECLARE SUB gtk_icon_list_set_text_space(BYVAL AS guint)
DECLARE SUB gtk_icon_list_thaw()
DECLARE SUB gtk_icon_list_unselect_all()
DECLARE SUB gtk_icon_list_unselect_icon(BYVAL AS GtkIconListItem PTR)
DECLARE SUB gtk_icon_list_update()
TYPE _GtkIconListClass
  AS GtkFixedClass parent_class
  select_icon AS FUNCTION CDECL(BYVAL AS GtkIconList PTR, BYVAL AS GtkIconListItem PTR, BYVAL AS GdkEvent PTR) AS gboolean
  unselect_icon AS SUB CDECL(BYVAL AS GtkIconList PTR, BYVAL AS GtkIconListItem PTR, BYVAL AS GdkEvent PTR)
  text_changed AS FUNCTION CDECL(BYVAL AS GtkIconList PTR, BYVAL AS GtkIconListItem PTR, BYVAL AS gchar PTR) AS gboolean
  activate_icon AS FUNCTION CDECL(BYVAL AS GtkIconList PTR, BYVAL AS GtkIconListItem PTR) AS gboolean
  deactivate_icon AS FUNCTION CDECL(BYVAL AS GtkIconList PTR, BYVAL AS GtkIconListItem PTR) AS gboolean
  click_event AS SUB CDECL(BYVAL AS GtkIconList PTR, BYVAL AS GdkEvent PTR)
END TYPE
TYPE _GtkPlotLine
  AS GtkPlotLineStyle line_style
  AS GdkCapStyle cap_style
  AS GdkJoinStyle join_style
  AS gfloat line_width
  AS GdkColor color
END TYPE
TYPE _GtkPlotText
  AS gdouble x
  AS gdouble y
  AS gint angle
  AS GdkColor fg
  AS GdkColor bg
  AS gboolean transparent
  AS GtkPlotBorderStyle border
  AS gint border_width
  AS gint shadow_width
  AS gint border_space
  AS gchar PTR font
  AS gint height
  AS gchar PTR text
  AS GtkJustification justification
END TYPE
DECLARE SUB gtk_plot_text_set_attributes(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS gboolean, BYVAL AS GtkJustification, BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_text_set_border(BYVAL AS GtkPlotBorderStyle, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_plot_text_get_area(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS GtkJustification, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE SUB gtk_plot_text_get_size(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
TYPE _GtkPlotVector
  AS gdouble x
  AS gdouble y
  AS gdouble z
END TYPE
TYPE _GtkPlotTicks
  AS gdouble min
  AS gdouble max
  AS GtkPlotScale scale
  AS gint nmajorticks
  AS gint nminorticks
  AS gint nticks
  AS gdouble step
  AS gint nminor
  AS gboolean apply_break
  AS GtkPlotScale break_scale
  AS gdouble break_step
  AS gint break_nminor
  AS gdouble break_min
  AS gdouble break_max
  AS gdouble break_position
  AS GtkPlotTick PTR values
  AS gboolean set_limits
  AS gdouble begin
  AS gdouble end
END TYPE
TYPE GtkPlotTicksAutoscaleFunc AS SUB CDECL(BYVAL AS GtkPlotAxis PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gint PTR)
TYPE GtkPlotTicksInverseFunc AS FUNCTION CDECL(BYVAL AS GtkPlotAxis PTR, BYVAL AS gdouble) AS gdouble
TYPE GtkPlotTicksRecalcFunc AS SUB CDECL(BYVAL AS GtkPlotAxis PTR)
TYPE GtkPlotTicksTransformFunc AS FUNCTION CDECL(BYVAL AS GtkPlotAxis PTR, BYVAL AS gdouble) AS gdouble
TYPE GtkPlotParseLabelFunc AS SUB CDECL(BYVAL AS GtkPlotAxis PTR, BYVAL AS gdouble, BYVAL AS gint, BYVAL AS gint, BYVAL AS gchar PTR)
TYPE _GtkPlotAxis
  AS GtkObject object
  AS gboolean is_visible
  AS GtkPlotVector origin
  AS GtkPlotVector direction
  AS GtkPlotText title
  AS gboolean title_visible
  AS GtkPlotTicks ticks
  AS GtkPlotOrientation orientation
  AS GtkPlotLine line
  AS GtkPlotLine major_grid
  AS GtkPlotLine minor_grid
  AS gint major_mask
  AS gint minor_mask
  AS gint ticks_length
  AS gfloat ticks_width
  AS gboolean custom_labels
  AS gint labels_offset
  AS gchar PTR labels_prefix
  AS gchar PTR labels_suffix
  AS gboolean show_major_grid
  AS gboolean show_minor_grid
  AS GtkPlotText labels_attr
  AS gint label_precision
  AS gint label_style
  AS gint label_mask
  AS GtkPlotArray PTR tick_labels
  AS GtkPlotTicksRecalcFunc ticks_recalc
  AS GtkPlotTicksAutoscaleFunc ticks_autoscale
  AS GtkPlotTicksTransformFunc ticks_transform
  AS GtkPlotTicksInverseFunc ticks_inverse
  AS GtkPlotParseLabelFunc parse_label
END TYPE
DECLARE FUNCTION gtk_plot_axis_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_AXIS (gtk_plot_axis_get_type())
#DEFINE GTKEXTRA_PLOT_AXIS(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_AXIS, GtkPlotAxis))
#DEFINE GTKEXTRA_PLOT_AXIS_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_AXIS, GtkExtraPlotAxisClass))
#DEFINE GTKEXTRA_IS_PLOT_AXIS(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_AXIS))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_AXIS(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_AXIS))
#DEFINE GTKEXTRA_PLOT_AXIS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_AXIS, GtkExtraPlotAxisClass))
DECLARE FUNCTION gtk_plot_axis_new(BYVAL AS GtkPlotOrientation) AS GtkObject PTR
DECLARE SUB gtk_plot_axis_construct(BYVAL AS GtkPlotOrientation)
DECLARE SUB gtk_plot_axis_get_attributes(BYVAL AS gfloat PTR, BYVAL AS GdkColor PTR)
DECLARE FUNCTION gtk_plot_axis_get_labels_offset() AS gint
DECLARE FUNCTION gtk_plot_axis_get_labels_prefix() AS gchar PTR
DECLARE FUNCTION gtk_plot_axis_get_labels_suffix() AS gchar PTR
DECLARE SUB gtk_plot_axis_hide_title()
DECLARE SUB gtk_plot_axis_justify_title(BYVAL AS GtkJustification)
DECLARE SUB gtk_plot_axis_move_title(BYVAL AS gint, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_axis_parse_label(BYVAL AS gdouble, BYVAL AS gint, BYVAL AS gint, BYVAL AS gchar PTR)
DECLARE SUB gtk_plot_axis_remove_break()
DECLARE SUB gtk_plot_axis_set_attributes(BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_axis_set_break(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gint, BYVAL AS GtkPlotScale, BYVAL AS gdouble)
DECLARE SUB gtk_plot_axis_set_labels_attributes(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS gboolean, BYVAL AS GtkJustification)
DECLARE SUB gtk_plot_axis_set_labels_offset(BYVAL AS gint)
DECLARE SUB gtk_plot_axis_set_labels_prefix(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_axis_set_labels_style(BYVAL AS GtkPlotLabelStyle, BYVAL AS gint)
DECLARE SUB gtk_plot_axis_set_labels_suffix(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_axis_set_major_ticks(BYVAL AS gdouble)
DECLARE SUB gtk_plot_axis_set_minor_ticks(BYVAL AS gint)
DECLARE SUB gtk_plot_axis_set_tick_labels(BYVAL AS GtkPlotArray PTR)
DECLARE SUB gtk_plot_axis_set_ticks(BYVAL AS gdouble, BYVAL AS gint)
DECLARE SUB gtk_plot_axis_set_ticks_length(BYVAL AS gint)
DECLARE SUB gtk_plot_axis_set_ticks_limits(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_axis_set_ticks_width(BYVAL AS gfloat)
DECLARE SUB gtk_plot_axis_set_title(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_axis_set_visible(BYVAL AS gboolean)
DECLARE SUB gtk_plot_axis_show_labels(BYVAL AS gint)
DECLARE SUB gtk_plot_axis_show_ticks(BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_plot_axis_show_title()
DECLARE SUB gtk_plot_axis_ticks_autoscale(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gint PTR)
DECLARE FUNCTION gtk_plot_axis_ticks_inverse(BYVAL AS gdouble) AS gdouble
DECLARE SUB gtk_plot_axis_ticks_recalc()
DECLARE FUNCTION gtk_plot_axis_ticks_transform(BYVAL AS gdouble) AS gdouble
DECLARE SUB gtk_plot_axis_title_set_attributes(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS gboolean, BYVAL AS GtkJustification)
DECLARE SUB gtk_plot_axis_unset_ticks_limits()
DECLARE SUB gtk_plot_axis_use_custom_tick_labels(BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot_axis_visible() AS gboolean
TYPE _GtkPlotClass
  AS GtkWidgetClass parent_class
  set_pc AS SUB CDECL(BYVAL AS GtkPlot PTR, BYVAL AS GtkPlotPC PTR)
  set_drawable AS SUB CDECL(BYVAL AS GtkPlot PTR, BYVAL AS GdkDrawable PTR)
  add_data AS FUNCTION CDECL(BYVAL AS GtkPlot PTR, BYVAL AS GtkPlotData PTR) AS gboolean
  update AS SUB CDECL(BYVAL AS GtkPlot PTR, BYVAL AS gboolean)
  changed AS SUB CDECL(BYVAL AS GtkPlot PTR)
  moved AS FUNCTION CDECL(BYVAL AS GtkPlot PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR) AS gboolean
  resized AS FUNCTION CDECL(BYVAL AS GtkPlot PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR) AS gboolean
  plot_paint AS SUB CDECL(BYVAL AS GtkWidget PTR)
  draw_legends AS SUB CDECL(BYVAL AS GtkWidget PTR)
  get_pixel AS SUB CDECL(BYVAL AS GtkWidget PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
  get_point AS SUB CDECL(BYVAL AS GtkWidget PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
END TYPE
UNION GtkPlotArrayArg
  AS gdouble PTR data_double
  AS gfloat PTR data_float
  AS gint PTR data_int
  AS gboolean PTR data_bool
  AS gchar PTR PTR data_string
  AS gpointer PTR data_pointer
END UNION
TYPE GtkPlotIterator AS SUB CDECL(BYVAL AS GtkPlot PTR, BYVAL AS GtkPlotData PTR, BYVAL AS gint, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gchar PTR PTR, BYVAL AS gboolean PTR)
TYPE _GtkPlotSymbol
  AS GtkPlotSymbolType symbol_type
  AS GtkPlotSymbolStyle symbol_style
  AS gint size
  AS GdkColor color
  AS GtkPlotLine border
END TYPE
TYPE GtkPlotFunc AS FUNCTION CDECL(BYVAL AS GtkPlot PTR, BYVAL AS GtkPlotData PTR, BYVAL AS gdouble, BYVAL AS gboolean PTR) AS gdouble
TYPE GtkPlotFunc3D AS FUNCTION CDECL(BYVAL AS GtkPlot PTR, BYVAL AS GtkPlotData PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gboolean PTR) AS gdouble
TYPE _GtkPlotData
  AS GtkWidget widget
  AS gboolean is_function
  AS gboolean is_iterator
  AS guint16 iterator_mask
  AS gboolean show_legend
  AS gboolean show_labels
  AS gboolean fill_area
  AS gchar PTR name
  AS gchar PTR legend
  AS GtkPlot PTR plot
  AS GtkPlotSymbol symbol
  AS GtkPlotLine line
  AS GtkPlotConnector line_connector
  AS GtkPlotLine x_line
  AS GtkPlotLine y_line
  AS GtkPlotLine z_line
  AS gboolean show_xerrbars
  AS gint xerrbar_width
  AS gint xerrbar_caps
  AS gboolean show_yerrbars
  AS gint yerrbar_width
  AS gint yerrbar_caps
  AS gboolean show_zerrbars
  AS gint zerrbar_width
  AS gint zerrbar_caps
  AS gint num_points
  AS GtkPlotArrayList PTR data
  AS gint labels_offset
  AS GtkPlotText labels_attr
  AS GtkPlotFunc function
  AS GtkPlotFunc3D function3d
  AS GtkPlotIterator iterator
  AS gdouble x_step
  AS gdouble y_step
  AS gdouble z_step
  AS GdkColor color_min
  AS GdkColor color_max
  AS GdkColor color_lt_min
  AS GdkColor color_gt_max
  AS gboolean gradient_show_lt_gt
  AS gint gradient_mask
  AS GtkPlotAxis PTR gradient
  AS gboolean gradient_custom
  AS GdkColor PTR gradient_colors
  AS gboolean show_gradient
  AS gint legends_precision
  AS GtkPlotLabelStyle legends_style
  AS gpointer link
  AS GList PTR markers
  AS gboolean show_markers
  AS gboolean redraw_pending
  AS GtkPlotAxisPos gradient_title_pos
  AS gint gradient_line_width
  AS gint gradient_line_height
  AS gdouble gradient_x
  AS gdouble gradient_y
  AS GtkPlotBorderStyle gradient_border
  AS gint gradient_border_offset
  AS gint gradient_border_width
  AS gint gradient_shadow_width
END TYPE
DECLARE FUNCTION gtk_plot_data_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_DATA (gtk_plot_data_get_type())
#DEFINE GTKEXTRA_PLOT_DATA(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_DATA, GtkPlotData))
#DEFINE GTKEXTRA_PLOT_DATA_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_DATA, GtkExtraPlotDataClass))
#DEFINE GTKEXTRA_IS_PLOT_DATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_DATA))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_DATA(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_DATA))
#DEFINE GTKEXTRA_PLOT_DATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_DATA, GtkExtraPlotDataClass))
DECLARE FUNCTION gtk_plot_data_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_plot_data_new_function(BYVAL AS GtkPlotFunc) AS GtkWidget PTR
DECLARE FUNCTION gtk_plot_data_new_iterator(BYVAL AS GtkPlotIterator, BYVAL AS gint, BYVAL AS guint16) AS GtkWidget PTR
DECLARE SUB gtk_plot_data_add_dimension(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS GType, BYVAL AS gboolean, BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot_data_add_marker(BYVAL AS guint) AS GtkPlotMarker PTR
DECLARE FUNCTION gtk_plot_data_area_is_filled() AS gboolean
DECLARE SUB gtk_plot_data_clone(BYVAL AS GtkPlotData PTR)
DECLARE SUB gtk_plot_data_construct_function(BYVAL AS GtkPlotFunc)
DECLARE SUB gtk_plot_data_construct_iterator(BYVAL AS GtkPlotIterator, BYVAL AS gint, BYVAL AS guint16)
DECLARE FUNCTION gtk_plot_data_dimension_get_array(BYVAL AS const gchar PTR) AS GtkPlotArray PTR
DECLARE FUNCTION gtk_plot_data_dimension_get_scale(BYVAL AS const gchar PTR) AS gdouble
DECLARE SUB gtk_plot_data_dimension_set_array(BYVAL AS const gchar PTR, BYVAL AS GtkPlotArray PTR)
DECLARE FUNCTION gtk_plot_data_dimension_set_points(BYVAL AS const gchar PTR, BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_data_dimension_set_scale(BYVAL AS const gchar PTR, BYVAL AS gdouble)
DECLARE SUB gtk_plot_data_draw_points(BYVAL AS gint)
DECLARE SUB gtk_plot_data_draw_symbol(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_data_fill_area(BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot_data_find_dimension(BYVAL AS const gchar PTR) AS GtkPlotArray PTR
DECLARE FUNCTION gtk_plot_data_get_a(BYVAL AS gint PTR) AS gdouble PTR
DECLARE FUNCTION gtk_plot_data_get_a_scale() AS gdouble
DECLARE FUNCTION gtk_plot_data_get_connector() AS gint
DECLARE FUNCTION gtk_plot_data_get_da(BYVAL AS gint PTR) AS gdouble PTR
DECLARE FUNCTION gtk_plot_data_get_dx(BYVAL AS gint PTR) AS gdouble PTR
DECLARE FUNCTION gtk_plot_data_get_dy(BYVAL AS gint PTR) AS gdouble PTR
DECLARE FUNCTION gtk_plot_data_get_dz(BYVAL AS gint PTR) AS gdouble PTR
DECLARE SUB gtk_plot_data_get_gradient(BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE FUNCTION gtk_plot_data_get_gradient_allocation() AS GtkAllocation
DECLARE SUB gtk_plot_data_get_gradient_colors(BYVAL AS GdkColor PTR, BYVAL AS GdkColor PTR)
DECLARE SUB gtk_plot_data_get_gradient_level(BYVAL AS gdouble, BYVAL AS GdkColor PTR)
DECLARE FUNCTION gtk_plot_data_get_gradient_mask() AS gint
DECLARE FUNCTION gtk_plot_data_get_gradient_nth_color(BYVAL AS guint) AS const GdkColor PTR
DECLARE SUB gtk_plot_data_get_gradient_outer_colors(BYVAL AS GdkColor PTR, BYVAL AS GdkColor PTR)
DECLARE FUNCTION gtk_plot_data_get_labels(BYVAL AS gboolean PTR) AS gchar PTR PTR
DECLARE FUNCTION gtk_plot_data_get_legend_precision() AS gint
DECLARE SUB gtk_plot_data_get_line_attributes(BYVAL AS GtkPlotLineStyle PTR, BYVAL AS GdkCapStyle PTR, BYVAL AS GdkJoinStyle PTR, BYVAL AS gfloat PTR, BYVAL AS GdkColor PTR)
DECLARE FUNCTION gtk_plot_data_get_link() AS gpointer
DECLARE FUNCTION gtk_plot_data_get_numpoints() AS gint
DECLARE SUB gtk_plot_data_get_point(BYVAL AS gint, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gchar PTR PTR, BYVAL AS gboolean PTR)
DECLARE SUB gtk_plot_data_get_points(BYVAL AS gdouble PTR PTR, BYVAL AS gdouble PTR PTR, BYVAL AS gdouble PTR PTR, BYVAL AS gdouble PTR PTR, BYVAL AS gint PTR)
DECLARE SUB gtk_plot_data_get_symbol(BYVAL AS GtkPlotSymbolType PTR, BYVAL AS GtkPlotSymbolStyle PTR, BYVAL AS gint PTR, BYVAL AS gfloat PTR, BYVAL AS GdkColor PTR, BYVAL AS GdkColor PTR)
DECLARE FUNCTION gtk_plot_data_get_x(BYVAL AS gint PTR) AS gdouble PTR
DECLARE FUNCTION gtk_plot_data_get_y(BYVAL AS gint PTR) AS gdouble PTR
DECLARE FUNCTION gtk_plot_data_get_z(BYVAL AS gint PTR) AS gdouble PTR
DECLARE FUNCTION gtk_plot_data_gradient() AS GtkPlotAxis PTR
DECLARE SUB gtk_plot_data_gradient_autoscale_a()
DECLARE SUB gtk_plot_data_gradient_autoscale_da()
DECLARE SUB gtk_plot_data_gradient_autoscale_z()
DECLARE FUNCTION gtk_plot_data_gradient_custom_colors() AS gboolean
DECLARE SUB gtk_plot_data_gradient_set_scale(BYVAL AS GtkPlotScale)
DECLARE SUB gtk_plot_data_gradient_set_style(BYVAL AS GtkPlotLabelStyle, BYVAL AS gint)
DECLARE SUB gtk_plot_data_gradient_set_title(BYVAL AS gchar PTR)
DECLARE SUB gtk_plot_data_gradient_set_visible(BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot_data_gradient_show_lt_gt() AS gboolean
DECLARE SUB gtk_plot_data_gradient_use_custom_colors(BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot_data_gradient_visible() AS gboolean
DECLARE SUB gtk_plot_data_hide_legend()
DECLARE SUB gtk_plot_data_hide_xerrbars()
DECLARE SUB gtk_plot_data_hide_yerrbars()
DECLARE SUB gtk_plot_data_hide_zerrbars()
DECLARE FUNCTION gtk_plot_data_independent_dimensions() AS guint
DECLARE SUB gtk_plot_data_labels_set_attributes(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR)
DECLARE FUNCTION gtk_plot_data_markers_visible() AS gboolean
DECLARE SUB gtk_plot_data_move_gradient(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_data_paint()
DECLARE SUB gtk_plot_data_remove_dimension(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_data_remove_link()
DECLARE FUNCTION gtk_plot_data_remove_marker(BYVAL AS GtkPlotMarker PTR) AS gboolean
DECLARE SUB gtk_plot_data_remove_markers()
DECLARE FUNCTION gtk_plot_data_required_dimensions() AS guint
DECLARE SUB gtk_plot_data_reset_gradient()
DECLARE SUB gtk_plot_data_reset_gradient_colors()
DECLARE FUNCTION gtk_plot_data_set_a(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_data_set_a_scale(BYVAL AS gdouble)
DECLARE SUB gtk_plot_data_set_connector(BYVAL AS GtkPlotConnector)
DECLARE FUNCTION gtk_plot_data_set_da(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE FUNCTION gtk_plot_data_set_dx(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE FUNCTION gtk_plot_data_set_dy(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE FUNCTION gtk_plot_data_set_dz(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_data_set_gradient(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_plot_data_set_gradient_colors(BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_data_set_gradient_mask(BYVAL AS gint)
DECLARE SUB gtk_plot_data_set_gradient_nth_color(BYVAL AS guint, BYVAL AS GdkColor PTR)
DECLARE SUB gtk_plot_data_set_gradient_outer_colors(BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_data_set_gradient_show_lt_gt(BYVAL AS gboolean)
DECLARE SUB gtk_plot_data_set_gradient_size(BYVAL AS gint)
DECLARE FUNCTION gtk_plot_data_set_labels(BYVAL AS gchar PTR PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_data_set_legend(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_data_set_legend_precision(BYVAL AS gint)
DECLARE SUB gtk_plot_data_set_line_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS GdkCapStyle, BYVAL AS GdkJoinStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_data_set_link(BYVAL AS gpointer)
DECLARE SUB gtk_plot_data_set_name(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_data_set_numpoints(BYVAL AS gint)
DECLARE SUB gtk_plot_data_set_points(BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gint)
DECLARE SUB gtk_plot_data_set_symbol(BYVAL AS GtkPlotSymbolType, BYVAL AS GtkPlotSymbolStyle, BYVAL AS gint, BYVAL AS gfloat, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR)
DECLARE FUNCTION gtk_plot_data_set_x(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_data_set_x_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS GdkCapStyle, BYVAL AS GdkJoinStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE FUNCTION gtk_plot_data_set_y(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_data_set_y_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS GdkCapStyle, BYVAL AS GdkJoinStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE FUNCTION gtk_plot_data_set_z(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_data_set_z_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS GdkCapStyle, BYVAL AS GdkJoinStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_data_show_labels(BYVAL AS gboolean)
DECLARE SUB gtk_plot_data_show_legend()
DECLARE SUB gtk_plot_data_show_markers(BYVAL AS gboolean)
DECLARE SUB gtk_plot_data_show_xerrbars()
DECLARE SUB gtk_plot_data_show_yerrbars()
DECLARE SUB gtk_plot_data_show_zerrbars()
DECLARE SUB gtk_plot_data_update()
TYPE _GtkPlotDataClass
  AS GtkWidgetClass parent_class
  add_to_plot AS FUNCTION CDECL(BYVAL AS GtkPlotData PTR, BYVAL AS GtkPlot PTR) AS gboolean
  update AS SUB CDECL(BYVAL AS GtkPlotData PTR, BYVAL AS gboolean)
  gradient_changed AS SUB CDECL(BYVAL AS GtkPlotData PTR)
  gradient_colors_changed AS SUB CDECL(BYVAL AS GtkPlotData PTR)
  draw_data AS SUB CDECL(BYVAL AS GtkPlotData PTR)
  draw_symbol AS SUB CDECL(BYVAL AS GtkPlotData PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
  draw_legend AS SUB CDECL(BYVAL AS GtkPlotData PTR, BYVAL AS gint, BYVAL AS gint)
  get_legend_size AS SUB CDECL(BYVAL AS GtkPlotData PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
  draw_gradient AS SUB CDECL(BYVAL AS GtkPlotData PTR)
  get_gradient_size AS SUB CDECL(BYVAL AS GtkPlotData PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
  clone AS SUB CDECL(BYVAL AS GtkPlotData PTR, BYVAL AS GtkPlotData PTR)
END TYPE
TYPE _GtkPlotSurface
  AS GtkPlotData data
  AS GdkColor color
  AS GdkColor shadow
  AS GdkColor grid_foreground
  AS GdkColor grid_background
  AS gboolean use_height_gradient
  AS gboolean use_amplitud
  AS GtkPlotVector light
  AS gdouble ambient
  AS gint nx
  AS gint ny
  AS GtkPlotDT PTR dt
  AS gboolean recalc_dt
  AS GList PTR polygons
  AS gboolean show_grid
  AS gboolean show_mesh
  AS gboolean transparent
  AS gdouble xstep
  AS gdouble ystep
  AS GtkPlotLine mesh_line
END TYPE
DECLARE FUNCTION gtk_plot_surface_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_SURFACE (gtk_plot_surface_get_type())
#DEFINE GTKEXTRA_PLOT_SURFACE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_SURFACE, GtkPlotSurface))
#DEFINE GTKEXTRA_PLOT_SURFACE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_SURFACE, GtkExtraPlotSurfaceClass))
#DEFINE GTKEXTRA_IS_PLOT_SURFACE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_SURFACE))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_SURFACE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_SURFACE))
#DEFINE GTKEXTRA_PLOT_SURFACE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_SURFACE, GtkExtraPlotSurfaceClass))
DECLARE FUNCTION gtk_plot_surface_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_plot_surface_new_function(BYVAL AS GtkPlotFunc3D) AS GtkWidget PTR
DECLARE SUB gtk_plot_surface_build_mesh()
DECLARE SUB gtk_plot_surface_construct_function(BYVAL AS GtkPlotFunc3D)
DECLARE FUNCTION gtk_plot_surface_get_dx() AS gdouble PTR
DECLARE FUNCTION gtk_plot_surface_get_dy() AS gdouble PTR
DECLARE FUNCTION gtk_plot_surface_get_dz() AS gdouble PTR
DECLARE FUNCTION gtk_plot_surface_get_grid_visible() AS gboolean
DECLARE FUNCTION gtk_plot_surface_get_mesh_visible() AS gboolean
DECLARE FUNCTION gtk_plot_surface_get_nx() AS gint
DECLARE FUNCTION gtk_plot_surface_get_ny() AS gint
DECLARE SUB gtk_plot_surface_get_points(BYVAL AS gdouble PTR PTR, BYVAL AS gdouble PTR PTR, BYVAL AS gdouble PTR PTR, BYVAL AS gdouble PTR PTR, BYVAL AS gdouble PTR PTR, BYVAL AS gdouble PTR PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE FUNCTION gtk_plot_surface_get_x(BYVAL AS gint PTR) AS gdouble PTR
DECLARE FUNCTION gtk_plot_surface_get_xstep() AS gdouble
DECLARE FUNCTION gtk_plot_surface_get_y(BYVAL AS gint PTR) AS gdouble PTR
DECLARE FUNCTION gtk_plot_surface_get_ystep() AS gdouble
DECLARE FUNCTION gtk_plot_surface_get_z(BYVAL AS gint PTR, BYVAL AS gint PTR) AS gdouble PTR
DECLARE SUB gtk_plot_surface_recalc_nodes()
DECLARE SUB gtk_plot_surface_set_ambient(BYVAL AS gdouble)
DECLARE SUB gtk_plot_surface_set_color(BYVAL AS GdkColor PTR)
DECLARE FUNCTION gtk_plot_surface_set_dx(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE FUNCTION gtk_plot_surface_set_dy(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE FUNCTION gtk_plot_surface_set_dz(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_surface_set_grid_background(BYVAL AS GdkColor PTR)
DECLARE SUB gtk_plot_surface_set_grid_foreground(BYVAL AS GdkColor PTR)
DECLARE SUB gtk_plot_surface_set_grid_visible(BYVAL AS gboolean)
DECLARE SUB gtk_plot_surface_set_light(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_surface_set_mesh_visible(BYVAL AS gboolean)
DECLARE SUB gtk_plot_surface_set_nx(BYVAL AS gint)
DECLARE SUB gtk_plot_surface_set_ny(BYVAL AS gint)
DECLARE SUB gtk_plot_surface_set_points(BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_plot_surface_set_shadow(BYVAL AS GdkColor PTR)
DECLARE SUB gtk_plot_surface_set_transparent(BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot_surface_set_x(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_surface_set_xstep(BYVAL AS gdouble)
DECLARE FUNCTION gtk_plot_surface_set_y(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_surface_set_ystep(BYVAL AS gdouble)
DECLARE FUNCTION gtk_plot_surface_set_z(BYVAL AS gdouble PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_surface_use_amplitud(BYVAL AS gboolean)
DECLARE SUB gtk_plot_surface_use_height_gradient(BYVAL AS gboolean)
TYPE _GtkPlotSurfaceClass
  AS GtkPlotDataClass parent_class
  build_polygons AS SUB CDECL(BYVAL AS GtkPlotSurface PTR)
  sort_polygons AS SUB CDECL(BYVAL AS GtkPlotSurface PTR)
  draw_polygons AS SUB CDECL(BYVAL AS GtkPlotSurface PTR)
END TYPE
TYPE _GtkPlotPC
  AS GtkObject object
  AS gdouble width
  AS gdouble height
  AS GdkColor color
  AS gint init_count
  AS gboolean use_pixmap
END TYPE
DECLARE FUNCTION gtk_plot_pc_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_PC (gtk_plot_pc_get_type())
#DEFINE GTKEXTRA_PLOT_PC(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_PC, GtkPlotPC))
#DEFINE GTKEXTRA_PLOT_PC_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_PC, GtkExtraPlotPCClass))
#DEFINE GTKEXTRA_IS_PLOT_PC(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_PC))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_PC(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_PC))
#DEFINE GTKEXTRA_PLOT_PC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_PC, GtkExtraPlotPCClass))
DECLARE FUNCTION gtk_plot_pc_new() AS GtkObject PTR
DECLARE SUB gtk_plot_pc_clip(BYVAL AS GdkRectangle PTR)
DECLARE SUB gtk_plot_pc_clip_mask(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS GdkBitmap PTR)
DECLARE SUB gtk_plot_pc_draw_circle(BYVAL AS gint, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_pc_draw_ellipse(BYVAL AS gboolean, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_pc_draw_line(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_pc_draw_lines(BYVAL AS GtkPlotPoint PTR, BYVAL AS gint)
DECLARE SUB gtk_plot_pc_draw_pixmap(BYVAL AS GdkPixmap PTR, BYVAL AS GdkBitmap PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_pc_draw_point(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_pc_draw_polygon(BYVAL AS gint, BYVAL AS GtkPlotPoint PTR, BYVAL AS gint)
DECLARE SUB gtk_plot_pc_draw_rectangle(BYVAL AS gboolean, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_pc_draw_string(BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS gboolean, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS GtkJustification, BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_pc_grestore()
DECLARE SUB gtk_plot_pc_gsave()
DECLARE FUNCTION gtk_plot_pc_init() AS gboolean
DECLARE SUB gtk_plot_pc_leave()
DECLARE SUB gtk_plot_pc_set_color(BYVAL AS GdkColor PTR)
DECLARE SUB gtk_plot_pc_set_dash(BYVAL AS gdouble, BYVAL AS gdouble PTR, BYVAL AS gint)
DECLARE SUB gtk_plot_pc_set_font(BYVAL AS GtkPSFont PTR, BYVAL AS gint)
DECLARE SUB gtk_plot_pc_set_lineattr(BYVAL AS gfloat, BYVAL AS GdkLineStyle, BYVAL AS GdkCapStyle, BYVAL AS GdkJoinStyle)
DECLARE SUB gtk_plot_pc_set_viewport(BYVAL AS gdouble, BYVAL AS gdouble)
TYPE _GtkPlotPCClass
  AS GtkObjectClass parent_class
  init AS FUNCTION CDECL(BYVAL AS GtkPlotPC PTR) AS gboolean
  leave AS SUB CDECL(BYVAL AS GtkPlotPC PTR)
  set_viewport AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gdouble, BYVAL AS gdouble)
  gsave AS SUB CDECL(BYVAL AS GtkPlotPC PTR)
  grestore AS SUB CDECL(BYVAL AS GtkPlotPC PTR)
  clip AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS const GdkRectangle PTR)
  clip_mask AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS const GdkBitmap PTR)
  set_color AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS const GdkColor PTR)
  set_lineattr AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gfloat, BYVAL AS GdkLineStyle, BYVAL AS GdkCapStyle, BYVAL AS GdkJoinStyle)
  set_dash AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gdouble, BYVAL AS gdouble PTR, BYVAL AS gint)
  draw_point AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gdouble, BYVAL AS gdouble)
  draw_line AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
  draw_lines AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS GtkPlotPoint PTR, BYVAL AS gint)
  draw_rectangle AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gboolean, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
  draw_polygon AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gboolean, BYVAL AS GtkPlotPoint PTR, BYVAL AS gint)
  draw_circle AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gboolean, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
  draw_ellipse AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gboolean, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
  set_font AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS GtkPSFont PTR, BYVAL AS gint)
  draw_string AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS gboolean, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS GtkJustification, BYVAL AS const gchar PTR)
  draw_pixmap AS SUB CDECL(BYVAL AS GtkPlotPC PTR, BYVAL AS GdkPixmap PTR, BYVAL AS GdkBitmap PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble, BYVAL AS gdouble)
END TYPE
TYPE _GtkPlotDTnode
  AS gdouble x
  AS gdouble y
  AS gdouble z
  AS gdouble px
  AS gdouble py
  AS gdouble pz
  AS gint id
  AS gint a
  AS gint b
  AS gint c
  AS gint d
  AS gint boundary_marker
END TYPE
TYPE _GtkSheetRange
  AS gint row0
  AS gint col0
  AS gint rowi
  AS gint coli
END TYPE
TYPE _GtkSheetCell
  AS GdkRectangle extent
  AS gint row
  AS gint col
  AS GtkSheetCellAttr PTR attributes
  AS gchar PTR text
  AS gpointer link
  AS gchar PTR tooltip_markup
  AS gchar PTR tooltip_text
END TYPE
TYPE _GtkSheetCellBorder
  AS gint8 mask
  AS guint width
  AS GdkLineStyle line_style
  AS GdkCapStyle cap_style
  AS GdkJoinStyle join_style
  AS GdkColor color
END TYPE
TYPE GtkPlotDTprogressbarFunc AS FUNCTION CDECL(BYVAL AS double) AS gint
' P_3

TYPE _GtkBorderCombo
  AS GtkComboButton border_combo
  AS gint nrows
  AS gint ncols
  AS gint row
  AS gint column
  AS GtkWidget PTR PTR PTR button
  AS GtkWidget PTR table
END TYPE
DECLARE FUNCTION gtk_border_combo_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_BORDER_COMBO (gtk_border_combo_get_type())
#DEFINE GTKEXTRA_BORDER_COMBO(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_BORDER_COMBO, GtkBorderCombo))
#DEFINE GTKEXTRA_BORDER_COMBO_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_BORDER_COMBO, GtkExtraBorderComboClass))
#DEFINE GTKEXTRA_IS_BORDER_COMBO(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_BORDER_COMBO))
#DEFINE GTKEXTRA_IS_CLASS_BORDER_COMBO(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_BORDER_COMBO))
#DEFINE GTKEXTRA_BORDER_COMBO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_BORDER_COMBO, GtkExtraBorderComboClass))
DECLARE FUNCTION gtk_border_combo_new() AS GtkWidget PTR
TYPE _GtkBorderComboClass
  AS GtkComboButtonClass parent_class
  changed AS SUB CDECL(BYVAL AS GtkBorderCombo PTR, BYVAL AS gint)
END TYPE
TYPE _GtkCharSelection
  AS GtkWindow window
  AS GtkFontCombo PTR font_combo
  AS GtkTable PTR table
  AS GtkToggleButton PTR button(255)
  AS gint selection
  AS GtkWidget PTR ok_button
  AS GtkWidget PTR cancel_button
  AS GtkWidget PTR action_area
END TYPE
DECLARE FUNCTION gtk_char_selection_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_CHAR_SELECTION (gtk_char_selection_get_type())
#DEFINE GTKEXTRA_CHAR_SELECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_CHAR_SELECTION, GtkCharSelection))
#DEFINE GTKEXTRA_CHAR_SELECTION_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_CHAR_SELECTION, GtkExtraCharSelectionClass))
#DEFINE GTKEXTRA_IS_CHAR_SELECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_CHAR_SELECTION))
#DEFINE GTKEXTRA_IS_CLASS_CHAR_SELECTION(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_CHAR_SELECTION))
#DEFINE GTKEXTRA_CHAR_SELECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_CHAR_SELECTION, GtkExtraCharSelectionClass))
DECLARE FUNCTION gtk_char_selection_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_char_selection_get_selection() AS gint
DECLARE SUB gtk_char_selection_set_selection(BYVAL AS gint)
TYPE _GtkCharSelectionClass
  AS GtkWindowClass parent_class
END TYPE
TYPE _GtkCheckItem
  AS GtkToggleButton toggle_button
END TYPE
DECLARE FUNCTION gtk_check_item_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_CHECK_ITEM (gtk_check_item_get_type())
#DEFINE GTKEXTRA_CHECK_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_CHECK_ITEM, GtkCheckItem))
#DEFINE GTKEXTRA_CHECK_ITEM_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_CHECK_ITEM, GtkExtraCheckItemClass))
#DEFINE GTKEXTRA_IS_CHECK_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_CHECK_ITEM))
#DEFINE GTKEXTRA_IS_CLASS_CHECK_ITEM(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_CHECK_ITEM))
#DEFINE GTKEXTRA_CHECK_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_CHECK_ITEM, GtkExtraCheckItemClass))
DECLARE FUNCTION gtk_check_item_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_check_item_new_with_label(BYVAL AS const gchar PTR) AS GtkWidget PTR
DECLARE SUB gtk_check_item_construct_with_label(BYVAL AS const gchar PTR)
TYPE _GtkCheckItemClass
  AS GtkToggleButtonClass parent_class
  AS guint16 indicator_size
  AS guint16 indicator_spacing
  draw_indicator AS SUB CDECL(BYVAL AS GtkCheckItem PTR, BYVAL AS GdkRectangle PTR)
END TYPE
TYPE _GtkColorCombo
  AS GtkComboButton color_combo
  AS gint nrows
  AS gint ncols
  AS gint row
  AS gint column
  AS GtkWidget PTR PTR button
  AS GtkWidget PTR table
  AS GtkWidget PTR custom_button
  AS GdkColor PTR colors
  AS GdkColor selection
END TYPE
DECLARE FUNCTION gtk_color_combo_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_COLOR_COMBO (gtk_color_combo_get_type())
#DEFINE GTKEXTRA_COLOR_COMBO(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_COLOR_COMBO, GtkColorCombo))
#DEFINE GTKEXTRA_COLOR_COMBO_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_COLOR_COMBO, GtkExtraColorComboClass))
#DEFINE GTKEXTRA_IS_COLOR_COMBO(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_COLOR_COMBO))
#DEFINE GTKEXTRA_IS_CLASS_COLOR_COMBO(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_COLOR_COMBO))
#DEFINE GTKEXTRA_COLOR_COMBO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_COLOR_COMBO, GtkExtraColorComboClass))
DECLARE FUNCTION gtk_color_combo_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_color_combo_new_with_values(BYVAL AS gint, BYVAL AS gint, BYVAL AS GdkColor PTR) AS GtkWidget PTR
DECLARE SUB gtk_color_combo_construct()
DECLARE SUB gtk_color_combo_construct_with_values(BYVAL AS gint, BYVAL AS gint, BYVAL AS GdkColor PTR)
DECLARE SUB gtk_color_combo_find_color(BYVAL AS GdkColor PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE FUNCTION gtk_color_combo_get_color_at(BYVAL AS gint, BYVAL AS gint) AS GdkColor
DECLARE FUNCTION gtk_color_combo_get_selection() AS GdkColor
TYPE _GtkColorComboClass
  AS GtkComboButtonClass parent_class
  changed AS SUB CDECL(BYVAL AS GtkColorCombo PTR, BYVAL AS gint, BYVAL AS GdkColor PTR)
END TYPE
TYPE _GtkDataEntry
  AS GtkEntry entry
  AS gchar PTR data_type
  AS gchar PTR data_format
  AS gchar PTR description
  AS gint max_length_bytes
  AS gchar PTR vlist_ignore
  AS gchar PTR vlist_accept
  AS gchar PTR vlist_reject
  AS gchar PTR map_from
  AS gunichar PTR map_to
END TYPE
DECLARE FUNCTION gtk_data_entry_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_DATA_ENTRY (gtk_data_entry_get_type())
#DEFINE GTKEXTRA_DATA_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_DATA_ENTRY, GtkDataEntry))
#DEFINE GTKEXTRA_DATA_ENTRY_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_DATA_ENTRY, GtkExtraDataEntryClass))
#DEFINE GTKEXTRA_IS_DATA_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_DATA_ENTRY))
#DEFINE GTKEXTRA_IS_CLASS_DATA_ENTRY(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_DATA_ENTRY))
#DEFINE GTKEXTRA_DATA_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_DATA_ENTRY, GtkExtraDataEntryClass))
DECLARE FUNCTION gtk_data_entry_new() AS GtkDataEntry PTR
DECLARE FUNCTION gtk_data_entry_get_data_format() AS const gchar PTR
DECLARE FUNCTION gtk_data_entry_get_data_type() AS const gchar PTR
DECLARE FUNCTION gtk_data_entry_get_description() AS const gchar PTR
DECLARE FUNCTION gtk_data_entry_get_max_length_bytes() AS gint
DECLARE FUNCTION gtk_data_entry_get_text() AS const gchar PTR
DECLARE SUB gtk_data_entry_set_data_format(BYVAL AS const gchar PTR)
DECLARE SUB gtk_data_entry_set_data_type(BYVAL AS const gchar PTR)
DECLARE SUB gtk_data_entry_set_description(BYVAL AS const gchar PTR)
DECLARE SUB gtk_data_entry_set_max_length_bytes(BYVAL AS gint)
DECLARE SUB gtk_data_entry_set_text(BYVAL AS const gchar PTR)
TYPE _GtkDataEntryClass
  AS GtkEntryClass parent_class
END TYPE
TYPE _GtkDataTextView
  AS GtkTextView textview
  AS gchar PTR description
  AS gint max_length
  AS gint max_length_bytes
END TYPE
DECLARE FUNCTION gtk_data_text_view_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_DATA_TEXT_VIEW (gtk_data_text_view_get_type())
#DEFINE GTKEXTRA_DATA_TEXT_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_DATA_TEXT_VIEW, GtkDataTextView))
#DEFINE GTKEXTRA_DATA_TEXT_VIEW_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_DATA_TEXT_VIEW, GtkExtraDataTextViewClass))
#DEFINE GTKEXTRA_IS_DATA_TEXT_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_DATA_TEXT_VIEW))
#DEFINE GTKEXTRA_IS_CLASS_DATA_TEXT_VIEW(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_DATA_TEXT_VIEW))
#DEFINE GTKEXTRA_DATA_TEXT_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_DATA_TEXT_VIEW, GtkExtraDataTextViewClass))
DECLARE FUNCTION gtk_data_text_view_new() AS GtkDataTextView PTR
DECLARE FUNCTION gtk_data_text_view_get_description() AS const gchar PTR
DECLARE FUNCTION gtk_data_text_view_get_max_length() AS gint
DECLARE FUNCTION gtk_data_text_view_get_max_length_bytes() AS gint
DECLARE SUB gtk_data_text_view_set_description(BYVAL AS const gchar PTR)
DECLARE SUB gtk_data_text_view_set_max_length(BYVAL AS gint)
DECLARE SUB gtk_data_text_view_set_max_length_bytes(BYVAL AS gint)
TYPE _GtkDataTextViewClass
  AS GtkTextViewClass parent_class
END TYPE
TYPE _GtkDirTree
  AS GtkCTree ctree
  AS gchar PTR local_hostname
  AS gboolean show_hidden
  AS GdkPixmap PTR my_pc
  AS GdkPixmap PTR folder
  AS GdkPixmap PTR ofolder
  AS GdkPixmap PTR dennied
  AS GdkBitmap PTR my_pc_mask
  AS GdkBitmap PTR folder_mask
  AS GdkBitmap PTR ofolder_mask
  AS GdkBitmap PTR dennied_mask
END TYPE
DECLARE FUNCTION gtk_dir_tree_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_DIR_TREE (gtk_dir_tree_get_type())
#DEFINE GTKEXTRA_DIR_TREE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_DIR_TREE, GtkDirTree))
#DEFINE GTKEXTRA_DIR_TREE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_DIR_TREE, GtkExtraDirTreeClass))
#DEFINE GTKEXTRA_IS_DIR_TREE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_DIR_TREE))
#DEFINE GTKEXTRA_IS_CLASS_DIR_TREE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_DIR_TREE))
#DEFINE GTKEXTRA_DIR_TREE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_DIR_TREE, GtkExtraDirTreeClass))
DECLARE FUNCTION gtk_dir_tree_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_dir_tree_open_dir(BYVAL AS const gchar PTR) AS gint
TYPE _GtkDirTreeClass
  AS GtkCTreeClass parent_class
END TYPE
TYPE _GtkDirTreeNode
  AS gboolean scanned
  AS gchar PTR path
END TYPE
TYPE _GtkFileList
  AS GtkIconList iconlist
  AS gint sort_mode
  AS gchar PTR filter
  AS gboolean show_folders
  AS gboolean show_hidden
  AS gchar PTR path
  AS GList PTR pixmaps
  AS GList PTR types
  AS gint ntypes
END TYPE
DECLARE FUNCTION gtk_file_list_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_FILE_LIST (gtk_file_list_get_type())
#DEFINE GTKEXTRA_FILE_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_FILE_LIST, GtkFileList))
#DEFINE GTKEXTRA_FILE_LIST_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_FILE_LIST, GtkExtraFileListClass))
#DEFINE GTKEXTRA_IS_FILE_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_FILE_LIST))
#DEFINE GTKEXTRA_IS_CLASS_FILE_LIST(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_FILE_LIST))
#DEFINE GTKEXTRA_FILE_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_FILE_LIST, GtkExtraFileListClass))
DECLARE FUNCTION gtk_file_list_new(BYVAL AS guint, BYVAL AS gint, BYVAL AS const gchar PTR) AS GtkWidget PTR
DECLARE FUNCTION gtk_file_list_add_type(BYVAL AS const gchar PTR PTR) AS gint
DECLARE SUB gtk_file_list_add_type_filter(BYVAL AS gint, BYVAL AS const gchar PTR)
DECLARE FUNCTION gtk_file_list_add_type_with_pixmap(BYVAL AS GdkPixmap PTR, BYVAL AS GdkBitmap PTR) AS gint
DECLARE SUB gtk_file_list_construct(BYVAL AS guint, BYVAL AS gint, BYVAL AS const gchar PTR)
DECLARE FUNCTION gtk_file_list_get_filename() AS const gchar PTR
DECLARE FUNCTION gtk_file_list_get_filetype() AS gint
DECLARE FUNCTION gtk_file_list_get_path() AS const gchar PTR
DECLARE FUNCTION gtk_file_list_open_dir(BYVAL AS const gchar PTR) AS gboolean
DECLARE SUB gtk_file_list_set_filter(BYVAL AS const gchar PTR)
TYPE _GtkFileListClass
  AS GtkIconListClass parent_class
END TYPE
TYPE _GtkFileListItem
  AS gchar PTR file_name
  AS gint type
  AS gint is_dir
  AS gint is_link
END TYPE
TYPE _GtkFileListType
  AS gchar PTR extension
  AS gint type
END TYPE
TYPE _GtkFontCombo
  AS GtkToolbar toolbar
  AS GtkWidget PTR name_combo
  AS GtkWidget PTR size_combo
  AS GtkWidget PTR bold_button
  AS GtkWidget PTR italic_button
END TYPE
DECLARE FUNCTION gtk_font_combo_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_FONT_COMBO (gtk_font_combo_get_type())
#DEFINE GTKEXTRA_FONT_COMBO(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_FONT_COMBO, GtkFontCombo))
#DEFINE GTKEXTRA_FONT_COMBO_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_FONT_COMBO, GtkExtraFontComboClass))
#DEFINE GTKEXTRA_IS_FONT_COMBO(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_FONT_COMBO))
#DEFINE GTKEXTRA_IS_CLASS_FONT_COMBO(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_FONT_COMBO))
#DEFINE GTKEXTRA_FONT_COMBO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_FONT_COMBO, GtkExtraFontComboClass))
DECLARE FUNCTION gtk_font_combo_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_font_combo_get_font_description() AS PangoFontDescription PTR
DECLARE FUNCTION gtk_font_combo_get_font_height() AS gint
DECLARE FUNCTION gtk_font_combo_get_gdkfont() AS GdkFont PTR
DECLARE FUNCTION gtk_font_combo_get_psfont() AS GtkPSFont PTR
DECLARE SUB gtk_font_combo_select(BYVAL AS const gchar PTR, BYVAL AS gboolean, BYVAL AS gboolean, BYVAL AS gint)
DECLARE SUB gtk_font_combo_select_nth(BYVAL AS gint, BYVAL AS gboolean, BYVAL AS gboolean, BYVAL AS gint)
TYPE _GtkFontComboClass
  AS GtkToolbarClass parent_class
  changed AS SUB CDECL(BYVAL AS GtkFontCombo PTR)
END TYPE
TYPE _GtkIconFileSel
  AS GtkWindow window
  AS gchar PTR title
  AS gboolean show_tree
  AS GtkWidget PTR path_label
  AS GtkWidget PTR tree_window
  AS GtkWidget PTR dir_tree
  AS GtkWidget PTR list_window
  AS GtkWidget PTR file_list
  AS GtkWidget PTR history_combo
  AS GtkWidget PTR up_button
  AS GtkWidget PTR refresh_button
  AS GtkWidget PTR home_button
  AS guint tree_signal_id
  AS GtkWidget PTR file_entry
  AS GtkWidget PTR filter_entry
  AS GtkWidget PTR ok_button
  AS GtkWidget PTR cancel_button
  AS GtkWidget PTR action_area
  AS gchar PTR selection
END TYPE
DECLARE FUNCTION gtk_icon_file_selection_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_ICON_FILE_SELECTION (gtk_icon_file_selection_get_type())
#DEFINE GTKEXTRA_ICON_FILE_SELECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_ICON_FILE_SELECTION, GtkIconFileSel))
#DEFINE GTKEXTRA_ICON_FILE_SELECTION_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_ICON_FILE_SELECTION, GtkExtraIconFileSelClass))
#DEFINE GTKEXTRA_IS_ICON_FILE_SELECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_ICON_FILE_SELECTION))
#DEFINE GTKEXTRA_IS_CLASS_ICON_FILE_SELECTION(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_ICON_FILE_SELECTION))
#DEFINE GTKEXTRA_ICON_FILE_SELECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_ICON_FILE_SELECTION, GtkExtraIconFileSelClass))
DECLARE FUNCTION gtk_icon_file_selection_new(BYVAL AS const gchar PTR) AS GtkWidget PTR
DECLARE SUB gtk_icon_file_selection_construct(BYVAL AS const gchar PTR)
DECLARE FUNCTION gtk_icon_file_selection_get_selection() AS const gchar PTR
DECLARE FUNCTION gtk_icon_file_selection_open_dir(BYVAL AS const gchar PTR) AS gint
DECLARE SUB gtk_icon_file_selection_set_filter(BYVAL AS const gchar PTR)
DECLARE SUB gtk_icon_file_selection_show_hidden(BYVAL AS gboolean)
DECLARE SUB gtk_icon_file_selection_show_tree(BYVAL AS gboolean)
TYPE _GtkIconFileSelClass
  AS GtkWindowClass parent_class
END TYPE
TYPE _GtkIconListItem
  AS guint x
  AS guint y
  AS gint state
  AS gchar PTR entry_label
  AS gchar PTR label
  AS GtkWidget PTR pixmap
  AS GtkWidget PTR entry
  AS gpointer link
END TYPE
TYPE _GtkItemEntry
  AS GtkEntry parent
  AS gint text_max_size
  AS gint16 item_text_size
  AS gint16 item_n_bytes
  AS gint max_length_bytes
  AS GtkJustification justification
END TYPE
DECLARE FUNCTION gtk_item_entry_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_ITEM_ENTRY (gtk_item_entry_get_type())
#DEFINE GTKEXTRA_ITEM_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_ITEM_ENTRY, GtkItemEntry))
#DEFINE GTKEXTRA_ITEM_ENTRY_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_ITEM_ENTRY, GtkExtraItemEntryClass))
#DEFINE GTKEXTRA_IS_ITEM_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_ITEM_ENTRY))
#DEFINE GTKEXTRA_IS_CLASS_ITEM_ENTRY(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_ITEM_ENTRY))
#DEFINE GTKEXTRA_ITEM_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_ITEM_ENTRY, GtkExtraItemEntryClass))
DECLARE FUNCTION gtk_item_entry_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_item_entry_new_with_max_length(BYVAL AS gint) AS GtkWidget PTR
DECLARE FUNCTION gtk_item_entry_get_cursor_visible() AS gboolean
DECLARE FUNCTION gtk_item_entry_get_max_length_bytes() AS gint
DECLARE SUB gtk_item_entry_set_cursor_visible(BYVAL AS gboolean)
DECLARE SUB gtk_item_entry_set_justification(BYVAL AS GtkJustification)
DECLARE SUB gtk_item_entry_set_max_length_bytes(BYVAL AS gint)
DECLARE SUB gtk_item_entry_set_text(BYVAL AS const gchar PTR, BYVAL AS GtkJustification)
TYPE _GtkItemEntryClass
  AS GtkEntryClass parent_class
END TYPE
TYPE _GtkPSFont
  AS gchar PTR fontname
  AS gchar PTR psname
  AS gchar PTR family
  AS gchar PTR pango_description
  AS gchar PTR i18n_latinfamily
  AS gboolean italic
  AS gboolean bold
  AS gboolean vertical
END TYPE
TYPE _GtkPlot
  AS GtkWidget widget
  AS GtkAllocation internal_allocation
  AS GdkDrawable PTR drawable
  AS GdkPixmap PTR bg_pixmap
  AS gboolean use_pixmap
  AS gboolean transparent
  AS gdouble magnification
  AS gboolean clip_data
  AS GdkColor background
  AS gboolean grids_on_top
  AS gboolean show_x0
  AS gboolean show_y0
  AS gdouble x
  AS gdouble y
  AS gdouble width
  AS gdouble height
  AS gdouble xmin
  AS gdouble xmax
  AS gdouble ymin
  AS gdouble ymax
  AS GtkPlotScale xscale
  AS GtkPlotScale yscale
  AS GtkPlotAxis PTR bottom
  AS GtkPlotAxis PTR top
  AS GtkPlotAxis PTR left
  AS GtkPlotAxis PTR right
  AS gboolean reflect_x
  AS gboolean reflect_y
  AS gfloat bottom_align
  AS gfloat top_align
  AS gfloat left_align
  AS gfloat right_align
  AS GtkPlotLine x0_line
  AS GtkPlotLine y0_line
  AS gdouble legends_x
  AS gdouble legends_y
  AS gint legends_width
  AS gint legends_height
  AS GtkPlotBorderStyle legends_border
  AS gint legends_line_width
  AS gint legends_border_width
  AS gint legends_shadow_width
  AS gboolean show_legends
  AS GtkPlotText legends_attr
  AS GList PTR data_sets
  AS GList PTR text
  AS GtkPlotPC PTR pc
END TYPE
DECLARE FUNCTION gtk_plot_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT (gtk_plot_get_type())
#DEFINE GTKEXTRA_PLOT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT, GtkPlot))
#DEFINE GTKEXTRA_PLOT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT, GtkExtraPlotClass))
#DEFINE GTKEXTRA_IS_PLOT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT))
#DEFINE GTKEXTRA_IS_CLASS_PLOT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT))
#DEFINE GTKEXTRA_PLOT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT, GtkExtraPlotClass))
DECLARE FUNCTION gtk_plot_new(BYVAL AS GdkDrawable PTR) AS GtkWidget PTR
DECLARE FUNCTION gtk_plot_new_with_size(BYVAL AS GdkDrawable PTR, BYVAL AS gdouble, BYVAL AS gdouble) AS GtkWidget PTR
DECLARE SUB gtk_plot_add_data(BYVAL AS GtkPlotData PTR)
DECLARE FUNCTION gtk_plot_add_function(BYVAL AS GtkPlotFunc) AS GtkPlotData PTR
DECLARE SUB gtk_plot_autoscale()
DECLARE SUB gtk_plot_clip_data(BYVAL AS gboolean)
DECLARE SUB gtk_plot_construct(BYVAL AS GdkDrawable PTR)
DECLARE SUB gtk_plot_construct_with_size(BYVAL AS GdkDrawable PTR, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_draw_line(BYVAL AS GtkPlotLine, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_draw_text(BYVAL AS GtkPlotText)
DECLARE FUNCTION gtk_plot_export_ps(BYVAL AS char PTR, BYVAL AS GtkPlotPageOrientation, BYVAL AS gboolean, BYVAL AS GtkPlotPageSize) AS gboolean
DECLARE FUNCTION gtk_plot_export_ps_with_size(BYVAL AS char PTR, BYVAL AS GtkPlotPageOrientation, BYVAL AS gboolean, BYVAL AS GtkPlotUnits, BYVAL AS gint, BYVAL AS gint) AS gboolean
DECLARE FUNCTION gtk_plot_get_axis(BYVAL AS GtkPlotAxisPos) AS GtkPlotAxis PTR
DECLARE FUNCTION gtk_plot_get_drawable() AS GdkDrawable PTR
DECLARE FUNCTION gtk_plot_get_internal_allocation() AS GtkAllocation
DECLARE SUB gtk_plot_get_pixel(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
DECLARE SUB gtk_plot_get_point(BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
DECLARE SUB gtk_plot_get_position(BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
DECLARE SUB gtk_plot_get_size(BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
DECLARE SUB gtk_plot_get_xrange(BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
DECLARE FUNCTION gtk_plot_get_xscale() AS GtkPlotScale
DECLARE SUB gtk_plot_get_yrange(BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
DECLARE FUNCTION gtk_plot_get_yscale() AS GtkPlotScale
DECLARE FUNCTION gtk_plot_grids_on_top() AS gboolean
DECLARE SUB gtk_plot_grids_set_on_top(BYVAL AS gboolean)
DECLARE SUB gtk_plot_grids_set_visible(BYVAL AS gboolean, BYVAL AS gboolean, BYVAL AS gboolean, BYVAL AS gboolean)
DECLARE SUB gtk_plot_grids_visible(BYVAL AS gboolean PTR, BYVAL AS gboolean PTR, BYVAL AS gboolean PTR, BYVAL AS gboolean PTR)
DECLARE SUB gtk_plot_hide_legends()
DECLARE FUNCTION gtk_plot_is_transparent() AS gboolean
DECLARE FUNCTION gtk_plot_is_x_reflected() AS gboolean
DECLARE FUNCTION gtk_plot_is_y_reflected() AS gboolean
DECLARE FUNCTION gtk_plot_legends_get_allocation() AS GtkAllocation
DECLARE SUB gtk_plot_legends_get_position(BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
DECLARE SUB gtk_plot_legends_move(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_legends_set_attributes(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_major_hgrid_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_major_vgrid_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_minor_hgrid_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_minor_vgrid_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_move(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_move_resize(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_paint()
DECLARE FUNCTION gtk_plot_put_text(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS gboolean, BYVAL AS GtkJustification, BYVAL AS const gchar PTR) AS GtkPlotText PTR
DECLARE SUB gtk_plot_reflect_x(BYVAL AS gboolean)
DECLARE SUB gtk_plot_reflect_y(BYVAL AS gboolean)
DECLARE SUB gtk_plot_refresh(BYVAL AS GdkRectangle PTR)
DECLARE SUB gtk_plot_remove_break(BYVAL AS GtkPlotOrientation)
DECLARE FUNCTION gtk_plot_remove_data(BYVAL AS GtkPlotData PTR) AS gint
DECLARE FUNCTION gtk_plot_remove_text(BYVAL AS GtkPlotText PTR) AS gint
DECLARE SUB gtk_plot_resize(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_set_background(BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_set_background_pixmap(BYVAL AS GdkPixmap PTR)
DECLARE SUB gtk_plot_set_break(BYVAL AS GtkPlotOrientation, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gint, BYVAL AS GtkPlotScale, BYVAL AS gdouble)
DECLARE SUB gtk_plot_set_drawable(BYVAL AS GdkDrawable PTR)
DECLARE SUB gtk_plot_set_legends_border(BYVAL AS GtkPlotBorderStyle, BYVAL AS gint)
DECLARE SUB gtk_plot_set_line_attributes(BYVAL AS GtkPlotLine)
DECLARE SUB gtk_plot_set_magnification(BYVAL AS gdouble)
DECLARE SUB gtk_plot_set_major_ticks(BYVAL AS GtkPlotOrientation, BYVAL AS gdouble)
DECLARE SUB gtk_plot_set_minor_ticks(BYVAL AS GtkPlotOrientation, BYVAL AS gint)
DECLARE SUB gtk_plot_set_pc(BYVAL AS GtkPlotPC PTR)
DECLARE SUB gtk_plot_set_range(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_set_ticks(BYVAL AS GtkPlotOrientation, BYVAL AS gdouble, BYVAL AS gint)
DECLARE SUB gtk_plot_set_ticks_limits(BYVAL AS GtkPlotOrientation, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_set_transparent(BYVAL AS gboolean)
DECLARE SUB gtk_plot_set_xrange(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_set_xscale(BYVAL AS GtkPlotScale)
DECLARE SUB gtk_plot_set_yrange(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_set_yscale(BYVAL AS GtkPlotScale)
DECLARE SUB gtk_plot_show_legends()
DECLARE SUB gtk_plot_unset_ticks_limits(BYVAL AS GtkPlotOrientation)
DECLARE SUB gtk_plot_x0_set_visible(BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot_x0_visible() AS gboolean
DECLARE SUB gtk_plot_x0line_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_y0_set_visible(BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot_y0_visible() AS gboolean
DECLARE SUB gtk_plot_y0line_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
TYPE _GtkPlot3D
  AS GtkPlot plot
  AS GtkPlotVector e1
  AS GtkPlotVector e2
  AS GtkPlotVector e3
  AS GtkPlotVector center
  AS GtkPlotVector origin
  AS gdouble a1
  AS gdouble a2
  AS gdouble a3
  AS gdouble ncos(359)
  AS gdouble nsin(359)
  AS GtkPlotAxis PTR ax
  AS GtkPlotAxis PTR ay
  AS GtkPlotAxis PTR az
  AS gboolean xy_visible
  AS gboolean yz_visible
  AS gboolean zx_visible
  AS GdkColor color_xy
  AS GdkColor color_yz
  AS GdkColor color_zx
  AS GtkPlotLine frame
  AS GtkPlotLine corner
  AS gboolean corner_visible
  AS gdouble zmin
  AS gdouble zmax
  AS GtkPlotScale zscale
  AS gint titles_offset
  AS GtkPlotAxis xy
  AS GtkPlotAxis xz
  AS GtkPlotAxis yx
  AS GtkPlotAxis yz
  AS GtkPlotAxis zx
  AS GtkPlotAxis zy
  AS gdouble xfactor
  AS gdouble yfactor
  AS gdouble zfactor
END TYPE
DECLARE FUNCTION gtk_plot3d_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT3D (gtk_plot3d_get_type())
#DEFINE GTKEXTRA_PLOT3D(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT3D, GtkPlot3D))
#DEFINE GTKEXTRA_PLOT3D_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT3D, GtkExtraPlot3DClass))
#DEFINE GTKEXTRA_IS_PLOT3D(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT3D))
#DEFINE GTKEXTRA_IS_CLASS_PLOT3D(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT3D))
#DEFINE GTKEXTRA_PLOT3D_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT3D, GtkExtraPlot3DClass))
DECLARE FUNCTION gtk_plot3d_new(BYVAL AS GdkDrawable PTR) AS GtkWidget PTR
DECLARE FUNCTION gtk_plot3d_new_with_size(BYVAL AS GdkDrawable PTR, BYVAL AS gdouble, BYVAL AS gdouble) AS GtkWidget PTR
DECLARE SUB gtk_plot3d_autoscale()
DECLARE SUB gtk_plot3d_construct(BYVAL AS GdkDrawable PTR)
DECLARE SUB gtk_plot3d_construct_with_size(BYVAL AS GdkDrawable PTR, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_corner_get_attributes(BYVAL AS GtkPlotLineStyle PTR, BYVAL AS gfloat PTR, BYVAL AS GdkColor PTR)
DECLARE SUB gtk_plot3d_corner_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot3d_corner_set_visible(BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot3d_corner_visible() AS gboolean
DECLARE SUB gtk_plot3d_frame_get_attributes(BYVAL AS GtkPlotLineStyle PTR, BYVAL AS gfloat PTR, BYVAL AS GdkColor PTR)
DECLARE SUB gtk_plot3d_frame_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE FUNCTION gtk_plot3d_get_axis(BYVAL AS GtkPlotOrientation) AS GtkPlotAxis PTR
DECLARE SUB gtk_plot3d_get_pixel(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
DECLARE FUNCTION gtk_plot3d_get_scale(BYVAL AS GtkPlotOrientation) AS GtkPlotScale
DECLARE FUNCTION gtk_plot3d_get_side(BYVAL AS GtkPlotSide) AS GtkPlotAxis PTR
DECLARE FUNCTION gtk_plot3d_get_titles_offset() AS gint
DECLARE FUNCTION gtk_plot3d_get_xfactor() AS gdouble
DECLARE FUNCTION gtk_plot3d_get_yfactor() AS gdouble
DECLARE FUNCTION gtk_plot3d_get_zfactor() AS gdouble
DECLARE SUB gtk_plot3d_hide_title(BYVAL AS GtkPlotSide)
DECLARE SUB gtk_plot3d_major_grids_set_visible(BYVAL AS gboolean, BYVAL AS gboolean, BYVAL AS gboolean)
DECLARE SUB gtk_plot3d_major_grids_visible(BYVAL AS gboolean PTR, BYVAL AS gboolean PTR, BYVAL AS gboolean PTR)
DECLARE SUB gtk_plot3d_major_zgrid_get_attributes(BYVAL AS GtkPlotLineStyle PTR, BYVAL AS gfloat PTR, BYVAL AS GdkColor PTR)
DECLARE SUB gtk_plot3d_major_zgrid_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot3d_minor_grids_set_visible(BYVAL AS gboolean, BYVAL AS gboolean, BYVAL AS gboolean)
DECLARE SUB gtk_plot3d_minor_grids_visible(BYVAL AS gboolean PTR, BYVAL AS gboolean PTR, BYVAL AS gboolean PTR)
DECLARE SUB gtk_plot3d_minor_zgrid_get_attributes(BYVAL AS GtkPlotLineStyle PTR, BYVAL AS gfloat PTR, BYVAL AS GdkColor PTR)
DECLARE SUB gtk_plot3d_minor_zgrid_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot3d_plane_set_color(BYVAL AS GtkPlotPlane, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot3d_plane_set_visible(BYVAL AS GtkPlotPlane, BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot3d_plane_visible(BYVAL AS GtkPlotPlane) AS gboolean
DECLARE SUB gtk_plot3d_reset_angles()
DECLARE SUB gtk_plot3d_rotate(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_rotate_vector(BYVAL AS GtkPlotVector PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_rotate_x(BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_rotate_y(BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_rotate_z(BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_set_major_ticks(BYVAL AS GtkPlotOrientation, BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_set_minor_ticks(BYVAL AS GtkPlotOrientation, BYVAL AS gint)
DECLARE SUB gtk_plot3d_set_scale(BYVAL AS GtkPlotOrientation, BYVAL AS GtkPlotScale)
DECLARE SUB gtk_plot3d_set_ticks(BYVAL AS GtkPlotOrientation, BYVAL AS gdouble, BYVAL AS gint)
DECLARE SUB gtk_plot3d_set_ticks_length(BYVAL AS GtkPlotOrientation, BYVAL AS gint)
DECLARE SUB gtk_plot3d_set_ticks_width(BYVAL AS GtkPlotOrientation, BYVAL AS gfloat)
DECLARE SUB gtk_plot3d_set_titles_offset(BYVAL AS gint)
DECLARE SUB gtk_plot3d_set_xfactor(BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_set_xrange(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_set_yfactor(BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_set_yrange(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_set_zfactor(BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_set_zrange(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot3d_show_labels(BYVAL AS GtkPlotSide, BYVAL AS gint)
DECLARE SUB gtk_plot3d_show_major_ticks(BYVAL AS GtkPlotSide, BYVAL AS gint)
DECLARE SUB gtk_plot3d_show_minor_ticks(BYVAL AS GtkPlotSide, BYVAL AS gint)
DECLARE SUB gtk_plot3d_show_ticks(BYVAL AS GtkPlotSide, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_plot3d_show_title(BYVAL AS GtkPlotSide)
TYPE _GtkPlot3DClass
  AS GtkPlotClass parent_class
  get_pixel AS SUB CDECL(BYVAL AS GtkWidget PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
END TYPE
TYPE _GtkPlotArray
  AS GObject object
  AS gchar PTR name
  AS gchar PTR label
  AS gchar PTR description
  AS GtkPlotArrayArg data
  AS GType type
  AS gboolean own_data
  AS gint size
  AS gboolean required
  AS gboolean independent
  AS gdouble scale
END TYPE
DECLARE FUNCTION gtk_plot_array_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_ARRAY (gtk_plot_array_get_type())
#DEFINE GTKEXTRA_PLOT_ARRAY(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_ARRAY, GtkPlotArray))
#DEFINE GTKEXTRA_PLOT_ARRAY_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_ARRAY, GtkExtraPlotArrayClass))
#DEFINE GTKEXTRA_IS_PLOT_ARRAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_ARRAY))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_ARRAY(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_ARRAY))
#DEFINE GTKEXTRA_PLOT_ARRAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_ARRAY, GtkExtraPlotArrayClass))
DECLARE FUNCTION gtk_plot_array_new(BYVAL AS const gchar PTR, BYVAL AS gpointer, BYVAL AS gint, BYVAL AS GType, BYVAL AS gboolean) AS GObject PTR
DECLARE SUB gtk_plot_array_free()
DECLARE FUNCTION gtk_plot_array_get_bool() AS gboolean PTR
DECLARE FUNCTION gtk_plot_array_get_data_type() AS GType
DECLARE FUNCTION gtk_plot_array_get_description() AS const gchar PTR
DECLARE FUNCTION gtk_plot_array_get_double() AS gdouble PTR
DECLARE FUNCTION gtk_plot_array_get_float() AS gfloat PTR
DECLARE FUNCTION gtk_plot_array_get_int() AS gint PTR
DECLARE FUNCTION gtk_plot_array_get_label() AS const gchar PTR
DECLARE FUNCTION gtk_plot_array_get_name() AS const gchar PTR
DECLARE FUNCTION gtk_plot_array_get_pointer() AS gpointer PTR
DECLARE FUNCTION gtk_plot_array_get_scale() AS gdouble
DECLARE FUNCTION gtk_plot_array_get_size() AS gint
DECLARE FUNCTION gtk_plot_array_get_string() AS gchar PTR PTR
DECLARE FUNCTION gtk_plot_array_independent() AS gboolean
DECLARE FUNCTION gtk_plot_array_required() AS gboolean
DECLARE SUB gtk_plot_array_set(BYVAL AS gpointer, BYVAL AS gint, BYVAL AS GType)
DECLARE SUB gtk_plot_array_set_description(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_array_set_independent(BYVAL AS gboolean)
DECLARE SUB gtk_plot_array_set_label(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_array_set_required(BYVAL AS gboolean)
DECLARE SUB gtk_plot_array_set_scale(BYVAL AS gdouble)
TYPE _GtkPlotArrayClass
  AS GObjectClass parent_class
END TYPE
TYPE _GtkPlotArrayList
  AS GObject object
  AS GList PTR arrays
END TYPE
DECLARE FUNCTION gtk_plot_array_list_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_ARRAY_LIST (gtk_plot_array_list_get_type())
#DEFINE GTKEXTRA_PLOT_ARRAY_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_ARRAY_LIST, GtkPlotArrayList))
#DEFINE GTKEXTRA_PLOT_ARRAY_LIST_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_ARRAY_LIST, GtkExtraPlotArrayListClass))
#DEFINE GTKEXTRA_IS_PLOT_ARRAY_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_ARRAY_LIST))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_ARRAY_LIST(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_ARRAY_LIST))
#DEFINE GTKEXTRA_PLOT_ARRAY_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_ARRAY_LIST, GtkExtraPlotArrayListClass))
DECLARE FUNCTION gtk_plot_array_list_new() AS GObject PTR
DECLARE SUB gtk_plot_array_list_add(BYVAL AS GtkPlotArray PTR)
DECLARE SUB gtk_plot_array_list_clear()
DECLARE FUNCTION gtk_plot_array_list_get(BYVAL AS const gchar PTR) AS GtkPlotArray PTR
DECLARE SUB gtk_plot_array_list_remove(BYVAL AS GtkPlotArray PTR)
TYPE _GtkPlotArrayListClass
  AS GObjectClass parent_class
END TYPE
TYPE _GtkPlotAxisClass
  AS GtkObjectClass parent_class
  tick_label AS FUNCTION CDECL(BYVAL AS GtkPlotAxis PTR, BYVAL AS gdouble PTR, BYVAL AS gchar PTR) AS gboolean
  changed AS FUNCTION CDECL(BYVAL AS GtkPlotAxis PTR) AS gboolean
END TYPE
TYPE _GtkPlotBar
  AS GtkPlotData data
  AS GtkOrientation orientation
  AS gdouble width
END TYPE
DECLARE FUNCTION gtk_plot_bar_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_BAR (gtk_plot_bar_get_type())
#DEFINE GTKEXTRA_PLOT_BAR(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_BAR, GtkPlotBar))
#DEFINE GTKEXTRA_PLOT_BAR_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_BAR, GtkExtraPlotBarClass))
#DEFINE GTKEXTRA_IS_PLOT_BAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_BAR))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_BAR(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_BAR))
#DEFINE GTKEXTRA_PLOT_BAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_BAR, GtkExtraPlotBarClass))
DECLARE FUNCTION gtk_plot_bar_new(BYVAL AS GtkOrientation) AS GtkWidget PTR
DECLARE SUB gtk_plot_bar_construct(BYVAL AS GtkOrientation)
DECLARE FUNCTION gtk_plot_bar_get_width() AS gdouble
DECLARE SUB gtk_plot_bar_set_width(BYVAL AS gdouble)
TYPE _GtkPlotBarClass
  AS GtkPlotDataClass parent_class
END TYPE
TYPE _GtkPlotBox
  AS GtkPlotData data
  AS GtkOrientation orientation
END TYPE
DECLARE FUNCTION gtk_plot_box_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_BOX (gtk_plot_box_get_type())
#DEFINE GTKEXTRA_PLOT_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_BOX, GtkPlotBox))
#DEFINE GTKEXTRA_PLOT_BOX_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_BOX, GtkExtraPlotBoxClass))
#DEFINE GTKEXTRA_IS_PLOT_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_BOX))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_BOX(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_BOX))
#DEFINE GTKEXTRA_PLOT_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_BOX, GtkExtraPlotBoxClass))
DECLARE FUNCTION gtk_plot_box_new(BYVAL AS GtkOrientation) AS GtkWidget PTR
DECLARE SUB gtk_plot_box_construct(BYVAL AS GtkOrientation)
TYPE _GtkPlotBoxClass
  AS GtkPlotDataClass parent_class
END TYPE
TYPE _GtkPlotBubble
  AS GtkPlotData data
  AS gdouble scale_max
  AS guint size_max
  AS gboolean show_scale
  AS gint labels_precision
  AS gint labels_style
  AS gchar PTR labels_prefix
  AS gchar PTR labels_suffix
END TYPE
DECLARE FUNCTION gtk_plot_bubble_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_BUBBLE (gtk_plot_bubble_get_type())
#DEFINE GTKEXTRA_PLOT_BUBBLE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_BUBBLE, GtkPlotBubble))
#DEFINE GTKEXTRA_PLOT_BUBBLE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_BUBBLE, GtkExtraPlotBubbleClass))
#DEFINE GTKEXTRA_IS_PLOT_BUBBLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_BUBBLE))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_BUBBLE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_BUBBLE))
#DEFINE GTKEXTRA_PLOT_BUBBLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_BUBBLE, GtkExtraPlotBubbleClass))
DECLARE FUNCTION gtk_plot_bubble_new() AS GtkWidget PTR
DECLARE SUB gtk_plot_bubble_set_labels_precision(BYVAL AS gint)
DECLARE SUB gtk_plot_bubble_set_labels_prefix(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_bubble_set_labels_style(BYVAL AS GtkPlotLabelStyle)
DECLARE SUB gtk_plot_bubble_set_labels_suffix(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_bubble_set_scale_max(BYVAL AS gdouble)
DECLARE SUB gtk_plot_bubble_set_size_max(BYVAL AS guint)
DECLARE SUB gtk_plot_bubble_show_scale(BYVAL AS gboolean)
TYPE _GtkPlotBubbleClass
  AS GtkPlotDataClass parent_class
END TYPE
TYPE _GtkPlotCSurface
  AS GtkPlotSurface surface
  AS gboolean lines_visible
  AS GtkPlotProjection projection
  AS GList PTR levels
  AS GList PTR bg_triangles
  AS GtkPlotLine levels_line
  AS GtkPlotLine sublevels_line
END TYPE
DECLARE FUNCTION gtk_plot_csurface_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CSURFACE (gtk_plot_csurface_get_type())
#DEFINE GTKEXTRA_PLOT_CSURFACE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CSURFACE, GtkPlotCSurface))
#DEFINE GTKEXTRA_PLOT_CSURFACE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CSURFACE, GtkExtraPlotCSurfaceClass))
#DEFINE GTKEXTRA_IS_PLOT_CSURFACE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CSURFACE))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CSURFACE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CSURFACE))
#DEFINE GTKEXTRA_PLOT_CSURFACE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CSURFACE, GtkExtraPlotCSurfaceClass))
DECLARE FUNCTION gtk_plot_csurface_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_plot_csurface_new_function(BYVAL AS GtkPlotFunc3D) AS GtkWidget PTR
DECLARE SUB gtk_plot_csurface_construct_function(BYVAL AS GtkPlotFunc3D)
DECLARE SUB gtk_plot_csurface_get_levels_attributes(BYVAL AS GtkPlotLineStyle PTR, BYVAL AS gfloat PTR, BYVAL AS GdkColor PTR)
DECLARE FUNCTION gtk_plot_csurface_get_lines_visible() AS gboolean
DECLARE SUB gtk_plot_csurface_get_sublevels_attributes(BYVAL AS GtkPlotLineStyle PTR, BYVAL AS gfloat PTR, BYVAL AS GdkColor PTR)
DECLARE FUNCTION gtk_plot_csurface_projection() AS GtkPlotProjection
DECLARE SUB gtk_plot_csurface_set_levels_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_csurface_set_lines_visible(BYVAL AS gboolean)
DECLARE SUB gtk_plot_csurface_set_projection(BYVAL AS GtkPlotProjection)
DECLARE SUB gtk_plot_csurface_set_sublevels_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
TYPE _GtkPlotCSurfaceClass
  AS GtkPlotSurfaceClass parent_class
END TYPE
TYPE _GtkPlotCairo
  AS GtkPlotPC pc
  AS cairo_t PTR cairo
  AS PangoContext PTR context
  AS PangoLayout PTR layout
  AS gboolean destroy_cairo
  AS gint ref_count
END TYPE
DECLARE FUNCTION gtk_plot_cairo_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CAIRO (gtk_plot_cairo_get_type())
#DEFINE GTKEXTRA_PLOT_CAIRO(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CAIRO, GtkPlotCairo))
#DEFINE GTKEXTRA_PLOT_CAIRO_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CAIRO, GtkExtraPlotCairoClass))
#DEFINE GTKEXTRA_IS_PLOT_CAIRO(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CAIRO))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CAIRO(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CAIRO))
#DEFINE GTKEXTRA_PLOT_CAIRO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CAIRO, GtkExtraPlotCairoClass))
DECLARE FUNCTION gtk_plot_cairo_new(BYVAL AS cairo_t PTR) AS GtkObject PTR
DECLARE FUNCTION gtk_plot_cairo_new_with_drawable(BYVAL AS GdkDrawable PTR) AS GtkObject PTR
DECLARE SUB gtk_plot_cairo_construct(BYVAL AS cairo_t PTR, BYVAL AS PangoContext PTR)
DECLARE SUB gtk_plot_cairo_set_cairo(BYVAL AS cairo_t PTR)
TYPE _GtkPlotCairoClass
  AS GtkPlotPCClass parent_class
END TYPE
TYPE _GtkPlotCandle
  AS GtkPlotData data
END TYPE
DECLARE FUNCTION gtk_plot_candle_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CANDLE (gtk_plot_candle_get_type())
#DEFINE GTKEXTRA_PLOT_CANDLE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CANDLE, GtkPlotCandle))
#DEFINE GTKEXTRA_PLOT_CANDLE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CANDLE, GtkExtraPlotCandleClass))
#DEFINE GTKEXTRA_IS_PLOT_CANDLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANDLE))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CANDLE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANDLE))
#DEFINE GTKEXTRA_PLOT_CANDLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CANDLE, GtkExtraPlotCandleClass))
DECLARE FUNCTION gtk_plot_candle_new() AS GtkWidget PTR
TYPE _GtkPlotCandleClass
  AS GtkPlotDataClass parent_class
END TYPE
TYPE _GtkPlotCanvas
  AS GtkFixed fixed
  AS GtkPlotCanvasFlags flags
  AS guint state
  AS guint freeze_count
  AS gint pixmap_width
  AS gint pixmap_height
  AS gint width
  AS gint height
  AS gdouble magnification
  AS gboolean show_grid
  AS gdouble grid_step
  AS GtkPlotLine grid
  AS GtkPlotCanvasAction action
  AS GdkPixmap PTR pixmap
  AS GdkColor background
  AS gboolean transparent
  AS gdouble active_x
  AS gdouble active_y
  AS GtkPlotCanvasChild PTR active_item
  AS GtkPlotCanvasPos drag_point
  AS gint drag_x
  AS gint drag_y
  AS gint pointer_x
  AS gint pointer_y
  AS GtkAllocation drag_area
  AS GList PTR childs
  AS GdkCursor PTR cursor
  AS GtkPlotPC PTR pc
END TYPE
DECLARE FUNCTION gtk_plot_canvas_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CANVAS (gtk_plot_canvas_get_type())
#DEFINE GTKEXTRA_PLOT_CANVAS(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS, GtkPlotCanvas))
#DEFINE GTKEXTRA_PLOT_CANVAS_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS, GtkExtraPlotCanvasClass))
#DEFINE GTKEXTRA_IS_PLOT_CANVAS(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CANVAS(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS))
#DEFINE GTKEXTRA_PLOT_CANVAS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CANVAS, GtkExtraPlotCanvasClass))
DECLARE FUNCTION gtk_plot_canvas_new(BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble) AS GtkWidget PTR
DECLARE SUB gtk_plot_canvas_cancel_action()
DECLARE FUNCTION gtk_plot_canvas_child_get_position(BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS double PTR, BYVAL AS double PTR, BYVAL AS double PTR, BYVAL AS double PTR) AS gboolean
DECLARE SUB gtk_plot_canvas_child_move(BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_canvas_child_move_resize(BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_canvas_construct(BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble)
DECLARE FUNCTION gtk_plot_canvas_export_cairo(BYVAL AS cairo_t PTR) AS gboolean
DECLARE FUNCTION gtk_plot_canvas_export_ps(BYVAL AS char PTR, BYVAL AS GtkPlotPageOrientation, BYVAL AS gboolean, BYVAL AS GtkPlotPageSize) AS gboolean
DECLARE FUNCTION gtk_plot_canvas_export_ps_with_size(BYVAL AS char PTR, BYVAL AS GtkPlotPageOrientation, BYVAL AS gboolean, BYVAL AS GtkPlotUnits, BYVAL AS gint, BYVAL AS gint) AS gboolean
DECLARE FUNCTION gtk_plot_canvas_flags() AS GtkPlotCanvasFlags
DECLARE SUB gtk_plot_canvas_freeze()
DECLARE FUNCTION gtk_plot_canvas_get_active_item() AS GtkPlotCanvasChild PTR
DECLARE SUB gtk_plot_canvas_get_pixel(BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE SUB gtk_plot_canvas_get_position(BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble PTR, BYVAL AS gdouble PTR)
DECLARE SUB gtk_plot_canvas_grid_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gint, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_canvas_grid_set_step(BYVAL AS gdouble)
DECLARE SUB gtk_plot_canvas_grid_set_visible(BYVAL AS gboolean)
DECLARE SUB gtk_plot_canvas_paint()
DECLARE SUB gtk_plot_canvas_put_child(BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_canvas_refresh()
DECLARE SUB gtk_plot_canvas_remove_child(BYVAL AS GtkPlotCanvasChild PTR)
DECLARE SUB gtk_plot_canvas_set_background(BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_plot_canvas_set_flags(BYVAL AS GtkPlotCanvasFlags)
DECLARE SUB gtk_plot_canvas_set_line_attributes(BYVAL AS GtkPlotLine)
DECLARE SUB gtk_plot_canvas_set_magnification(BYVAL AS gdouble)
DECLARE SUB gtk_plot_canvas_set_pc(BYVAL AS GtkPlotPC PTR)
DECLARE SUB gtk_plot_canvas_set_size(BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_plot_canvas_set_transparent(BYVAL AS gboolean)
DECLARE SUB gtk_plot_canvas_thaw()
DECLARE FUNCTION gtk_plot_canvas_transparent() AS gboolean
DECLARE SUB gtk_plot_canvas_unselect()
DECLARE SUB gtk_plot_canvas_unset_flags(BYVAL AS GtkPlotCanvasFlags)
TYPE _GtkPlotCanvasChild
  AS GtkObject object
  AS GtkPlotCanvas PTR parent
  AS gdouble rx1
  AS gdouble rx2
  AS gdouble ry1
  AS gdouble ry2
  AS gint min_width
  AS gint min_height
  AS GtkAllocation allocation
  AS GtkAllocation drag_area
  AS guint state
  AS GtkPlotCanvasChildFlags flags
  AS GtkPlotCanvasSelection selection
  AS GtkPlotCanvasSelectionMode mode
END TYPE
DECLARE FUNCTION gtk_plot_canvas_child_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CANVAS_CHILD (gtk_plot_canvas_child_get_type())
#DEFINE GTKEXTRA_PLOT_CANVAS_CHILD(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_CHILD, GtkPlotCanvasChild))
#DEFINE GTKEXTRA_PLOT_CANVAS_CHILD_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_CHILD, GtkExtraPlotCanvasChildClass))
#DEFINE GTKEXTRA_IS_PLOT_CANVAS_CHILD(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_CHILD))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CANVAS_CHILD(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_CHILD))
#DEFINE GTKEXTRA_PLOT_CANVAS_CHILD_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CANVAS_CHILD, GtkExtraPlotCanvasChildClass))
DECLARE SUB gtk_plot_canvas_child_set_selection(BYVAL AS GtkPlotCanvasSelection)
DECLARE SUB gtk_plot_canvas_child_set_selection_mode(BYVAL AS GtkPlotCanvasSelectionMode)
TYPE _GtkPlotCanvasChildClass
  AS GtkObjectClass parent_class
  draw AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR)
  draw_selection AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS GtkAllocation)
  size_allocate AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR)
  move AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS gdouble, BYVAL AS gdouble)
  move_resize AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
  button_press AS FUNCTION CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS gint, BYVAL AS gint) AS GtkPlotCanvasPos
  button_release AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR)
  unselect AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR)
  set_magnification AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS gdouble)
END TYPE
TYPE _GtkPlotCanvasClass
  AS GtkLayoutClass parent_class
  select_item AS FUNCTION CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GdkEventButton PTR, BYVAL AS GtkPlotCanvasChild PTR) AS gboolean
  move_item AS FUNCTION CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS gdouble, BYVAL AS gdouble) AS gboolean
  resize_item AS FUNCTION CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR, BYVAL AS gdouble, BYVAL AS gdouble) AS gboolean
  add_item AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR)
  delete_item AS FUNCTION CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS GtkPlotCanvasChild PTR) AS gboolean
  select_region AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
  changed AS SUB CDECL(BYVAL AS GtkPlotCanvas PTR)
END TYPE
TYPE _GtkPlotCanvasEllipse
  AS GtkPlotCanvasChild parent
  AS GtkPlotLine line
  AS gboolean filled
  AS GdkColor bg
END TYPE
DECLARE FUNCTION gtk_plot_canvas_ellipse_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CANVAS_ELLIPSE (gtk_plot_canvas_ellipse_get_type())
#DEFINE GTKEXTRA_PLOT_CANVAS_ELLIPSE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_ELLIPSE, GtkPlotCanvasEllipse))
#DEFINE GTKEXTRA_PLOT_CANVAS_ELLIPSE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_ELLIPSE, GtkExtraPlotCanvasEllipseClass))
#DEFINE GTKEXTRA_IS_PLOT_CANVAS_ELLIPSE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_ELLIPSE))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CANVAS_ELLIPSE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_ELLIPSE))
#DEFINE GTKEXTRA_PLOT_CANVAS_ELLIPSE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CANVAS_ELLIPSE, GtkExtraPlotCanvasEllipseClass))
DECLARE FUNCTION gtk_plot_canvas_ellipse_new(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS gboolean) AS GtkPlotCanvasChild PTR
DECLARE SUB gtk_plot_canvas_ellipse_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gdouble, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS gboolean)
TYPE _GtkPlotCanvasEllipseClass
  AS GtkPlotCanvasChildClass parent_class
END TYPE
TYPE _GtkPlotCanvasLine
  AS GtkPlotCanvasChild parent
  AS GtkPlotLine line
  AS gdouble x1
  AS gdouble y1
  AS gdouble x2
  AS gdouble y2
  AS GtkPlotCanvasPos pos
  AS GtkPlotCanvasArrow arrow_mask
  AS gint arrow_length
  AS gint arrow_width
  AS GtkPlotSymbolStyle arrow_style
END TYPE
DECLARE FUNCTION gtk_plot_canvas_line_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CANVAS_LINE (gtk_plot_canvas_line_get_type())
#DEFINE GTKEXTRA_PLOT_CANVAS_LINE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_LINE, GtkPlotCanvasLine))
#DEFINE GTKEXTRA_PLOT_CANVAS_LINE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_LINE, GtkExtraPlotCanvasLineClass))
#DEFINE GTKEXTRA_IS_PLOT_CANVAS_LINE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_LINE))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CANVAS_LINE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_LINE))
#DEFINE GTKEXTRA_PLOT_CANVAS_LINE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CANVAS_LINE, GtkExtraPlotCanvasLineClass))
DECLARE FUNCTION gtk_plot_canvas_line_new(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR, BYVAL AS GtkPlotCanvasArrow) AS GtkPlotCanvasChild PTR
DECLARE SUB gtk_plot_canvas_line_set_arrow(BYVAL AS GtkPlotSymbolStyle, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS GtkPlotCanvasArrow)
DECLARE SUB gtk_plot_canvas_line_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR)
TYPE _GtkPlotCanvasLineClass
  AS GtkPlotCanvasChildClass parent_class
END TYPE
TYPE _GtkPlotCanvasPixmap
  AS GtkPlotCanvasChild parent
  AS GdkPixmap PTR pixmap
  AS GdkBitmap PTR mask
END TYPE
DECLARE FUNCTION gtk_plot_canvas_pixmap_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CANVAS_PIXMAP (gtk_plot_canvas_pixmap_get_type())
#DEFINE GTKEXTRA_PLOT_CANVAS_PIXMAP(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_PIXMAP, GtkPlotCanvasPixmap))
#DEFINE GTKEXTRA_PLOT_CANVAS_PIXMAP_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_PIXMAP, GtkExtraPlotCanvasPixmapClass))
#DEFINE GTKEXTRA_IS_PLOT_CANVAS_PIXMAP(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_PIXMAP))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CANVAS_PIXMAP(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_PIXMAP))
#DEFINE GTKEXTRA_PLOT_CANVAS_PIXMAP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CANVAS_PIXMAP, GtkExtraPlotCanvasPixmapClass))
DECLARE FUNCTION gtk_plot_canvas_pixmap_new(BYVAL AS GdkPixmap PTR, BYVAL AS GdkBitmap PTR) AS GtkPlotCanvasChild PTR
TYPE _GtkPlotCanvasPixmapClass
  AS GtkPlotCanvasChildClass parent_class
END TYPE
TYPE _GtkPlotCanvasPlot
  AS GtkPlotCanvasChild parent
  AS GtkPlotCanvasPlotPos pos
  AS GtkPlotAxis PTR axis
  AS GtkPlotData PTR data
  AS GtkPlotMarker PTR marker
  AS gint datapoint
  AS GtkPlotCanvasPlotFlags flags
  AS GtkPlot PTR plot
END TYPE
DECLARE FUNCTION gtk_plot_canvas_plot_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CANVAS_PLOT (gtk_plot_canvas_plot_get_type())
#DEFINE GTKEXTRA_PLOT_CANVAS_PLOT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_PLOT, GtkPlotCanvasPlot))
#DEFINE GTKEXTRA_PLOT_CANVAS_PLOT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_PLOT, GtkExtraPlotCanvasPlotClass))
#DEFINE GTKEXTRA_IS_PLOT_CANVAS_PLOT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_PLOT))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CANVAS_PLOT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_PLOT))
#DEFINE GTKEXTRA_PLOT_CANVAS_PLOT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CANVAS_PLOT, GtkExtraPlotCanvasPlotClass))
DECLARE FUNCTION gtk_plot_canvas_plot_new(BYVAL AS GtkPlot PTR) AS GtkPlotCanvasChild PTR
DECLARE FUNCTION gtk_plot_canvas_plot_flags() AS GtkPlotCanvasPlotFlags
DECLARE SUB gtk_plot_canvas_plot_set_flags(BYVAL AS GtkPlotCanvasPlotFlags)
DECLARE SUB gtk_plot_canvas_plot_unset_flags(BYVAL AS GtkPlotCanvasPlotFlags)
TYPE _GtkPlotCanvasPlotClass
  AS GtkPlotCanvasChildClass parent_class
END TYPE
TYPE _GtkPlotCanvasRectangle
  AS GtkPlotCanvasChild parent
  AS GtkPlotLine line
  AS gboolean filled
  AS GtkPlotBorderStyle border
  AS gint shadow_width
  AS GdkColor bg
END TYPE
DECLARE FUNCTION gtk_plot_canvas_rectangle_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CANVAS_RECTANGLE (gtk_plot_canvas_rectangle_get_type())
#DEFINE GTKEXTRA_PLOT_CANVAS_RECTANGLE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_RECTANGLE, GtkPlotCanvasRectangle))
#DEFINE GTKEXTRA_PLOT_CANVAS_RECTANGLE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_RECTANGLE, GtkExtraPlotCanvasRectangleClass))
#DEFINE GTKEXTRA_IS_PLOT_CANVAS_RECTANGLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_RECTANGLE))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CANVAS_RECTANGLE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_RECTANGLE))
#DEFINE GTKEXTRA_PLOT_CANVAS_RECTANGLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CANVAS_RECTANGLE, GtkExtraPlotCanvasRectangleClass))
DECLARE FUNCTION gtk_plot_canvas_rectangle_new(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS GtkPlotBorderStyle, BYVAL AS gboolean) AS GtkPlotCanvasChild PTR
DECLARE SUB gtk_plot_canvas_rectangle_set_attributes(BYVAL AS GtkPlotLineStyle, BYVAL AS gfloat, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS GtkPlotBorderStyle, BYVAL AS gboolean)
TYPE _GtkPlotCanvasRectangleClass
  AS GtkPlotCanvasChildClass parent_class
END TYPE
TYPE _GtkPlotCanvasText
  AS GtkPlotCanvasChild parent
  AS GtkPlotText text
END TYPE
DECLARE FUNCTION gtk_plot_canvas_text_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_CANVAS_TEXT (gtk_plot_canvas_text_get_type())
#DEFINE GTKEXTRA_PLOT_CANVAS_TEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_TEXT, GtkPlotCanvasText))
#DEFINE GTKEXTRA_PLOT_CANVAS_TEXT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_CANVAS_TEXT, GtkExtraPlotCanvasTextClass))
#DEFINE GTKEXTRA_IS_PLOT_CANVAS_TEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_TEXT))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_CANVAS_TEXT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_CANVAS_TEXT))
#DEFINE GTKEXTRA_PLOT_CANVAS_TEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_CANVAS_TEXT, GtkExtraPlotCanvasTextClass))
DECLARE FUNCTION gtk_plot_canvas_text_new(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS gboolean, BYVAL AS GtkJustification, BYVAL AS const gchar PTR) AS GtkPlotCanvasChild PTR
DECLARE SUB gtk_plot_canvas_text_set_attributes(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS const GdkColor PTR, BYVAL AS const GdkColor PTR, BYVAL AS gboolean, BYVAL AS GtkJustification, BYVAL AS const gchar PTR)
TYPE _GtkPlotCanvasTextClass
  AS GtkPlotCanvasChildClass parent_class
END TYPE
TYPE _GtkPlotDT
  AS GtkObject object
  AS gboolean quadrilateral
  AS gboolean subsampling
  AS gint node_0
  AS gint node_cnt
  AS gint node_max
  AS GtkPlotDTnode PTR nodes
  AS GtkPlotDTnode PTR tmp_nodes
  AS GList PTR triangles
  AS GCompareFunc compare_func
  AS GtkPlotDTprogressbarFunc pbar
END TYPE
DECLARE FUNCTION gtk_plot_dt_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_DT (gtk_plot_dt_get_type())
#DEFINE GTKEXTRA_PLOT_DT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_DT, GtkPlotDT))
#DEFINE GTKEXTRA_PLOT_DT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_DT, GtkExtraPlotDTClass))
#DEFINE GTKEXTRA_IS_PLOT_DT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_DT))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_DT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_DT))
#DEFINE GTKEXTRA_PLOT_DT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_DT, GtkExtraPlotDTClass))
DECLARE FUNCTION gtk_plot_dt_new(BYVAL AS gint) AS GtkObject PTR
DECLARE FUNCTION gtk_plot_dt_add_node(BYVAL AS GtkPlotDTnode) AS gboolean
DECLARE SUB gtk_plot_dt_clear()
DECLARE FUNCTION gtk_plot_dt_get_node(BYVAL AS gint) AS GtkPlotDTnode PTR
DECLARE SUB gtk_plot_dt_set_quadrilateral(BYVAL AS gboolean)
DECLARE SUB gtk_plot_dt_set_subsampling(BYVAL AS gboolean)
DECLARE FUNCTION gtk_plot_dt_triangulate() AS gboolean
TYPE _GtkPlotDTClass
  AS GtkObjectClass parent_class
  add_node AS FUNCTION CDECL(BYVAL AS GtkPlotDT PTR, BYVAL AS GtkPlotDTnode) AS gboolean
  get_node AS FUNCTION CDECL(BYVAL AS GtkPlotDT PTR, BYVAL AS gint) AS GtkPlotDTnode PTR
  triangulate AS FUNCTION CDECL(BYVAL AS GtkPlotDT PTR) AS gboolean
  clear AS SUB CDECL(BYVAL AS GtkPlotDT PTR)
END TYPE
TYPE _GtkPlotDTtriangle
  AS gint a
  AS gint b
  AS gint c
  AS GtkPlotDTnode PTR na
  AS GtkPlotDTnode PTR nb
  AS GtkPlotDTnode PTR nc
  AS double radius
  AS GtkPlotDTnode ccenter
  AS double area
  AS GtkPlotDTnode min
  AS GtkPlotDTnode max
  AS GtkPlotDTtriangle PTR nn(2)
  AS gboolean visited
END TYPE
TYPE _GtkPlotFlux
  AS GtkPlotData data
  AS gboolean centered
  AS gint arrow_length
  AS gint arrow_width
  AS GtkPlotSymbolStyle arrow_style
  AS gdouble scale_max
  AS guint size_max
  AS gboolean show_scale
  AS gint labels_precision
  AS gint labels_style
  AS gchar PTR labels_prefix
  AS gchar PTR labels_suffix
END TYPE
DECLARE FUNCTION gtk_plot_flux_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_FLUX (gtk_plot_flux_get_type())
#DEFINE GTKEXTRA_PLOT_FLUX(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_FLUX, GtkPlotFlux))
#DEFINE GTKEXTRA_PLOT_FLUX_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_FLUX, GtkExtraPlotFluxClass))
#DEFINE GTKEXTRA_IS_PLOT_FLUX(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_FLUX))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_FLUX(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_FLUX))
#DEFINE GTKEXTRA_PLOT_FLUX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_FLUX, GtkExtraPlotFluxClass))
DECLARE FUNCTION gtk_plot_flux_new() AS GtkWidget PTR
DECLARE SUB gtk_plot_flux_center(BYVAL AS gboolean)
DECLARE SUB gtk_plot_flux_get_arrow(BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS GtkPlotSymbolStyle PTR)
DECLARE FUNCTION gtk_plot_flux_is_centered() AS gboolean
DECLARE SUB gtk_plot_flux_set_arrow(BYVAL AS gint, BYVAL AS gint, BYVAL AS GtkPlotSymbolStyle)
DECLARE SUB gtk_plot_flux_set_labels_precision(BYVAL AS gint)
DECLARE SUB gtk_plot_flux_set_labels_prefix(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_flux_set_labels_style(BYVAL AS GtkPlotLabelStyle)
DECLARE SUB gtk_plot_flux_set_labels_suffix(BYVAL AS const gchar PTR)
DECLARE SUB gtk_plot_flux_set_scale_max(BYVAL AS gdouble)
DECLARE SUB gtk_plot_flux_set_size_max(BYVAL AS guint)
DECLARE SUB gtk_plot_flux_show_scale(BYVAL AS gboolean)
TYPE _GtkPlotFluxClass
  AS GtkPlotDataClass parent_class
END TYPE
TYPE _GtkPlotGdk
  AS GtkPlotPC pc
  AS GdkGC PTR gc
  AS GdkDrawable PTR drawable
  AS GtkTextDirection text_direction
  AS PangoContext PTR context
  AS PangoLayout PTR layout
  AS GdkWindow PTR window
  AS gint ref_count
END TYPE
DECLARE FUNCTION gtk_plot_gdk_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_GDK (gtk_plot_gdk_get_type())
#DEFINE GTKEXTRA_PLOT_GDK(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_GDK, GtkPlotGdk))
#DEFINE GTKEXTRA_PLOT_GDK_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_GDK, GtkExtraPlotGdkClass))
#DEFINE GTKEXTRA_IS_PLOT_GDK(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_GDK))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_GDK(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_GDK))
#DEFINE GTKEXTRA_PLOT_GDK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_GDK, GtkExtraPlotGdkClass))
DECLARE FUNCTION gtk_plot_gdk_new(BYVAL AS GtkWidget PTR) AS GtkObject PTR
DECLARE SUB gtk_plot_gdk_construct(BYVAL AS GtkWidget PTR)
DECLARE SUB gtk_plot_gdk_set_drawable(BYVAL AS GdkDrawable PTR)
TYPE _GtkPlotGdkClass
  AS GtkPlotPCClass parent_class
  set_drawable AS SUB CDECL(BYVAL AS GtkPlotGdk PTR, BYVAL AS GdkDrawable PTR)
END TYPE
TYPE _GtkPlotMarker
  AS GtkPlotData PTR data
  AS gint point
END TYPE
TYPE _GtkPlotPS
  AS GtkPlotPC pc
  AS FILE PTR psfile
  AS gchar PTR psname
  AS gint orientation
  AS gint epsflag
  AS gint units
  AS gint page_size
  AS gint width
  AS gint height
  AS gint page_width
  AS gint page_height
  AS gdouble scalex
  AS gdouble scaley
  AS gboolean gsaved
END TYPE
DECLARE FUNCTION gtk_plot_ps_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_PS (gtk_plot_ps_get_type())
#DEFINE GTKEXTRA_PLOT_PS(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_PS, GtkPlotPS))
#DEFINE GTKEXTRA_PLOT_PS_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_PS, GtkExtraPlotPSClass))
#DEFINE GTKEXTRA_IS_PLOT_PS(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_PS))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_PS(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_PS))
#DEFINE GTKEXTRA_PLOT_PS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_PS, GtkExtraPlotPSClass))
DECLARE FUNCTION gtk_plot_ps_new(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble, BYVAL AS gdouble) AS GtkObject PTR
DECLARE FUNCTION gtk_plot_ps_new_with_size(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble) AS GtkObject PTR
DECLARE SUB gtk_plot_ps_construct(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_ps_construct_with_size(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_ps_set_scale(BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE SUB gtk_plot_ps_set_size(BYVAL AS gint, BYVAL AS gdouble, BYVAL AS gdouble)
TYPE _GtkPlotPSClass
  AS GtkPlotPCClass parent_class
END TYPE
TYPE _GtkPlotPixmap
  AS GtkPlotData data
  AS GdkPixmap PTR pixmap
  AS GdkBitmap PTR mask
END TYPE
DECLARE FUNCTION gtk_plot_pixmap_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_PIXMAP (gtk_plot_pixmap_get_type())
#DEFINE GTKEXTRA_PLOT_PIXMAP(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_PIXMAP, GtkPlotPixmap))
#DEFINE GTKEXTRA_PLOT_PIXMAP_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_PIXMAP, GtkExtraPlotPixmapClass))
#DEFINE GTKEXTRA_IS_PLOT_PIXMAP(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_PIXMAP))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_PIXMAP(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_PIXMAP))
#DEFINE GTKEXTRA_PLOT_PIXMAP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_PIXMAP, GtkExtraPlotPixmapClass))
DECLARE FUNCTION gtk_plot_pixmap_new(BYVAL AS GdkPixmap PTR, BYVAL AS GdkBitmap PTR) AS GtkWidget PTR
DECLARE SUB gtk_plot_pixmap_construct(BYVAL AS GdkPixmap PTR, BYVAL AS GdkBitmap PTR)
DECLARE FUNCTION gtk_plot_pixmap_get_mask() AS GdkBitmap PTR
DECLARE FUNCTION gtk_plot_pixmap_get_pixmap() AS GdkPixmap PTR
TYPE _GtkPlotPixmapClass
  AS GtkPlotDataClass parent_class
END TYPE
TYPE _GtkPlotPoint
  AS gdouble x
  AS gdouble y
END TYPE
TYPE _GtkPlotPolar
  AS GtkPlot plot
  AS GtkPlotAxis PTR r
  AS GtkPlotAxis PTR angle
  AS gdouble rotation
END TYPE
DECLARE FUNCTION gtk_plot_polar_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_POLAR (gtk_plot_polar_get_type())
#DEFINE GTKEXTRA_PLOT_POLAR(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_POLAR, GtkPlotPolar))
#DEFINE GTKEXTRA_PLOT_POLAR_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_POLAR, GtkExtraPlotPolarClass))
#DEFINE GTKEXTRA_IS_PLOT_POLAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_POLAR))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_POLAR(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_POLAR))
#DEFINE GTKEXTRA_PLOT_POLAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_POLAR, GtkExtraPlotPolarClass))
DECLARE FUNCTION gtk_plot_polar_new(BYVAL AS GdkDrawable PTR) AS GtkWidget PTR
DECLARE FUNCTION gtk_plot_polar_new_with_size(BYVAL AS GdkDrawable PTR, BYVAL AS gdouble, BYVAL AS gdouble) AS GtkWidget PTR
DECLARE SUB gtk_plot_polar_construct(BYVAL AS GdkDrawable PTR)
DECLARE SUB gtk_plot_polar_construct_with_size(BYVAL AS GdkDrawable PTR, BYVAL AS gdouble, BYVAL AS gdouble)
DECLARE FUNCTION gtk_plot_polar_get_angle() AS gdouble
DECLARE SUB gtk_plot_polar_rotate(BYVAL AS gdouble)
TYPE _GtkPlotPolarClass
  AS GtkPlotClass parent_class
END TYPE
TYPE _GtkPlotPolygon
  AS GtkPlotDTtriangle PTR t
  AS GtkPlotVector xyz(3)
  AS GtkPlotVector p(3)
  AS gint n
  AS gdouble level
  AS gboolean cut_level
  AS gboolean sublevel
END TYPE
TYPE _GtkPlotSegment
  AS GtkPlotData data
  AS gboolean relative
  AS gboolean centered
  AS GtkPlotArrow arrow_mask
  AS gint arrow_length
  AS gint arrow_width
  AS GtkPlotSymbolStyle arrow_style
END TYPE
DECLARE FUNCTION gtk_plot_segment_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_PLOT_SEGMENT (gtk_plot_segment_get_type())
#DEFINE GTKEXTRA_PLOT_SEGMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_PLOT_SEGMENT, GtkPlotSegment))
#DEFINE GTKEXTRA_PLOT_SEGMENT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_PLOT_SEGMENT, GtkExtraPlotSegmentClass))
#DEFINE GTKEXTRA_IS_PLOT_SEGMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_PLOT_SEGMENT))
#DEFINE GTKEXTRA_IS_CLASS_PLOT_SEGMENT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_PLOT_SEGMENT))
#DEFINE GTKEXTRA_PLOT_SEGMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_PLOT_SEGMENT, GtkExtraPlotSegmentClass))
DECLARE FUNCTION gtk_plot_segment_new() AS GtkWidget PTR
DECLARE SUB gtk_plot_segment_center(BYVAL AS gboolean)
DECLARE SUB gtk_plot_segment_get_arrow(BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS GtkPlotSymbolStyle PTR)
DECLARE FUNCTION gtk_plot_segment_get_arrow_mask() AS guint
DECLARE FUNCTION gtk_plot_segment_is_centered() AS gboolean
DECLARE FUNCTION gtk_plot_segment_relative() AS gboolean
DECLARE SUB gtk_plot_segment_set_arrow(BYVAL AS gint, BYVAL AS gint, BYVAL AS GtkPlotSymbolStyle)
DECLARE SUB gtk_plot_segment_set_arrow_mask(BYVAL AS GtkPlotArrow)
DECLARE SUB gtk_plot_segment_set_relative(BYVAL AS gboolean)
TYPE _GtkPlotSegmentClass
  AS GtkPlotDataClass parent_class
END TYPE
TYPE _GtkPlotTick
  AS gdouble value
  AS gboolean minor
END TYPE
TYPE _GtkSheet
  AS GtkContainer container
  AS guint16 flags
  AS GtkSelectionMode selection_mode
  AS gboolean autoresize_columns
  AS gboolean autoresize_rows
  AS gboolean autoscroll
  AS gboolean clip_text
  AS gboolean justify_entry
  AS gboolean locked
  AS guint freeze_count
  AS GdkColor bg_color
  AS GdkColor grid_color
  AS GdkColor tm_color
  AS gboolean show_grid
  AS GList PTR children
  AS GdkRectangle internal_allocation
  AS gchar PTR title
  AS gchar PTR description
  AS GtkSheetRow PTR row
  AS GtkSheetColumn PTR PTR column
  AS gboolean rows_resizable
  AS gboolean columns_resizable
  AS gint maxrow
  AS gint maxcol
  AS GtkSheetRange view
  AS GtkSheetCell PTR PTR PTR data
  AS gint maxallocrow
  AS gint maxalloccol
  AS GtkSheetCell active_cell
  AS GtkWidget PTR sheet_entry
  AS GType entry_type
  AS GType installed_entry_type
  AS GtkSheetCell selection_cell
  AS gint32 timer
  AS gint32 clip_timer
  AS gint interval
  AS GtkWidget PTR button
  AS GtkSheetState state
  AS GtkSheetRange range
  AS GdkWindow PTR sheet_window
  AS guint sheet_window_width
  AS guint sheet_window_height
  AS GdkWindow PTR pixmap
  AS gint hoffset
  AS gint voffset
  AS gfloat old_hadjustment
  AS gfloat old_vadjustment
  AS GtkShadowType shadow_type
  AS GtkSheetVerticalJustification vjust
  AS GtkSheetTraverseType traverse_type
  AS GdkRectangle column_title_area
  AS GdkWindow PTR column_title_window
  AS gboolean column_titles_visible
  AS GdkRectangle row_title_area
  AS GdkWindow PTR row_title_window
  AS gboolean row_titles_visible
  AS GtkAdjustment PTR hadjustment
  AS GtkAdjustment PTR vadjustment
  AS GdkGC PTR xor_gc
  AS GdkGC PTR fg_gc
  AS GdkGC PTR bg_gc
  AS GdkCursor PTR cursor_drag
  AS gint x_drag
  AS gint y_drag
  AS GtkSheetCell drag_cell
  AS GtkSheetRange drag_range
  AS GtkSheetRange clip_range
END TYPE
DECLARE FUNCTION gtk_sheet_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_SHEET (gtk_sheet_get_type())
#DEFINE GTKEXTRA_SHEET(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_SHEET, GtkSheet))
#DEFINE GTKEXTRA_SHEET_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_SHEET, GtkExtraSheetClass))
#DEFINE GTKEXTRA_IS_SHEET(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_SHEET))
#DEFINE GTKEXTRA_IS_CLASS_SHEET(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_SHEET))
#DEFINE GTKEXTRA_SHEET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_SHEET, GtkExtraSheetClass))
DECLARE FUNCTION gtk_sheet_new(BYVAL AS guint, BYVAL AS guint, BYVAL AS const gchar PTR) AS GtkWidget PTR
DECLARE FUNCTION gtk_sheet_new_browser(BYVAL AS guint, BYVAL AS guint, BYVAL AS const gchar PTR) AS GtkWidget PTR
DECLARE FUNCTION gtk_sheet_new_with_custom_entry(BYVAL AS guint, BYVAL AS guint, BYVAL AS const gchar PTR, BYVAL AS GType) AS GtkWidget PTR
DECLARE SUB gtk_sheet_add_column(BYVAL AS guint)
DECLARE SUB gtk_sheet_add_row(BYVAL AS guint)
DECLARE SUB gtk_sheet_attach(BYVAL AS GtkWidget PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_sheet_attach_default(BYVAL AS GtkWidget PTR, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_sheet_attach_floating(BYVAL AS GtkWidget PTR, BYVAL AS gint, BYVAL AS gint)
DECLARE FUNCTION gtk_sheet_autoresize() AS gboolean
DECLARE FUNCTION gtk_sheet_autoresize_columns() AS gboolean
DECLARE FUNCTION gtk_sheet_autoresize_rows() AS gboolean
DECLARE FUNCTION gtk_sheet_autoscroll() AS gboolean
DECLARE SUB gtk_sheet_button_attach(BYVAL AS GtkWidget PTR, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_sheet_cell_clear(BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_sheet_cell_delete(BYVAL AS gint, BYVAL AS gint)
DECLARE FUNCTION gtk_sheet_cell_get_can_focus(BYVAL AS const gint, BYVAL AS const gint) AS gboolean
DECLARE FUNCTION gtk_sheet_cell_get_editable(BYVAL AS const gint, BYVAL AS const gint) AS gboolean
DECLARE FUNCTION gtk_sheet_cell_get_sensitive(BYVAL AS const gint, BYVAL AS const gint) AS gboolean
DECLARE FUNCTION gtk_sheet_cell_get_state(BYVAL AS gint, BYVAL AS gint) AS GtkStateType
DECLARE FUNCTION gtk_sheet_cell_get_text(BYVAL AS gint, BYVAL AS gint) AS gchar PTR
DECLARE FUNCTION gtk_sheet_cell_get_tooltip_markup(BYVAL AS const gint, BYVAL AS const gint) AS gchar PTR
DECLARE FUNCTION gtk_sheet_cell_get_tooltip_text(BYVAL AS const gint, BYVAL AS const gint) AS gchar PTR
DECLARE SUB gtk_sheet_cell_set_can_focus(BYVAL AS const gint, BYVAL AS const gint, BYVAL AS const gboolean)
DECLARE SUB gtk_sheet_cell_set_editable(BYVAL AS const gint, BYVAL AS const gint, BYVAL AS const gboolean)
DECLARE SUB gtk_sheet_cell_set_sensitive(BYVAL AS const gint, BYVAL AS const gint, BYVAL AS const gboolean)
DECLARE SUB gtk_sheet_cell_set_tooltip_markup(BYVAL AS const gint, BYVAL AS const gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_cell_set_tooltip_text(BYVAL AS const gint, BYVAL AS const gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_change_entry(BYVAL AS const GType)
DECLARE SUB gtk_sheet_clip_range(BYVAL AS const GtkSheetRange PTR)
DECLARE FUNCTION gtk_sheet_clip_text() AS gboolean
DECLARE SUB gtk_sheet_column_button_add_label(BYVAL AS gint, BYVAL AS const gchar PTR)
DECLARE FUNCTION gtk_sheet_column_button_get_label(BYVAL AS gint) AS const gchar PTR
DECLARE SUB gtk_sheet_column_button_justify(BYVAL AS gint, BYVAL AS GtkJustification)
DECLARE FUNCTION gtk_sheet_column_get(BYVAL AS gint) AS GtkSheetColumn PTR
DECLARE FUNCTION gtk_sheet_column_get_datatype(BYVAL AS const gint) AS gchar PTR
DECLARE FUNCTION gtk_sheet_column_get_description(BYVAL AS const gint) AS gchar PTR
DECLARE FUNCTION gtk_sheet_column_get_entry_type(BYVAL AS const gint) AS GType
DECLARE FUNCTION gtk_sheet_column_get_format(BYVAL AS const gint) AS gchar PTR
DECLARE FUNCTION gtk_sheet_column_get_iskey(BYVAL AS const gint) AS gboolean
DECLARE FUNCTION gtk_sheet_column_get_justification(BYVAL AS gint) AS GtkJustification
DECLARE FUNCTION gtk_sheet_column_get_readonly(BYVAL AS const gint) AS gboolean
DECLARE FUNCTION gtk_sheet_column_get_tooltip_markup(BYVAL AS const gint) AS gchar PTR
DECLARE FUNCTION gtk_sheet_column_get_tooltip_text(BYVAL AS const gint) AS gchar PTR
DECLARE FUNCTION gtk_sheet_column_get_vjustification(BYVAL AS gint) AS GtkSheetVerticalJustification
DECLARE SUB gtk_sheet_column_label_set_visibility(BYVAL AS gint, BYVAL AS gboolean)
DECLARE FUNCTION gtk_sheet_column_sensitive(BYVAL AS gint) AS gboolean
DECLARE SUB gtk_sheet_column_set_datatype(BYVAL AS const gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_column_set_description(BYVAL AS const gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_column_set_entry_type(BYVAL AS const gint, BYVAL AS const GType)
DECLARE SUB gtk_sheet_column_set_format(BYVAL AS const gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_column_set_iskey(BYVAL AS const gint, BYVAL AS const gboolean)
DECLARE SUB gtk_sheet_column_set_justification(BYVAL AS gint, BYVAL AS GtkJustification)
DECLARE SUB gtk_sheet_column_set_readonly(BYVAL AS const gint, BYVAL AS const gboolean)
DECLARE SUB gtk_sheet_column_set_sensitivity(BYVAL AS gint, BYVAL AS gboolean)
DECLARE SUB gtk_sheet_column_set_tooltip_markup(BYVAL AS const gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_column_set_tooltip_text(BYVAL AS const gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_column_set_visibility(BYVAL AS gint, BYVAL AS gboolean)
DECLARE SUB gtk_sheet_column_set_vjustification(BYVAL AS gint, BYVAL AS GtkSheetVerticalJustification)
DECLARE FUNCTION gtk_sheet_column_titles_visible() AS gboolean
DECLARE FUNCTION gtk_sheet_column_visible(BYVAL AS gint) AS gboolean
DECLARE SUB gtk_sheet_columns_labels_set_visibility(BYVAL AS gboolean)
DECLARE FUNCTION gtk_sheet_columns_resizable() AS gboolean
DECLARE SUB gtk_sheet_columns_set_resizable(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_columns_set_sensitivity(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_construct(BYVAL AS guint, BYVAL AS guint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_construct_browser(BYVAL AS guint, BYVAL AS guint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_construct_with_custom_entry(BYVAL AS guint, BYVAL AS guint, BYVAL AS const gchar PTR, BYVAL AS GType)
DECLARE SUB gtk_sheet_delete_columns(BYVAL AS guint, BYVAL AS guint)
DECLARE SUB gtk_sheet_delete_rows(BYVAL AS guint, BYVAL AS guint)
DECLARE SUB gtk_sheet_entry_select_region(BYVAL AS gint, BYVAL AS gint)
DECLARE FUNCTION gtk_sheet_entry_signal_connect_changed(BYVAL AS GCallback) AS gulong
DECLARE SUB gtk_sheet_entry_signal_disconnect_by_func(BYVAL AS GCallback)
DECLARE SUB gtk_sheet_freeze()
DECLARE SUB gtk_sheet_get_active_cell(BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE FUNCTION gtk_sheet_get_attributes(BYVAL AS gint, BYVAL AS gint, BYVAL AS GtkSheetCellAttr PTR) AS gboolean
DECLARE FUNCTION gtk_sheet_get_cell_area(BYVAL AS gint, BYVAL AS gint, BYVAL AS GdkRectangle PTR) AS gboolean
DECLARE FUNCTION gtk_sheet_get_child_at(BYVAL AS gint, BYVAL AS gint) AS const GtkSheetChild PTR
DECLARE FUNCTION gtk_sheet_get_column_title(BYVAL AS gint) AS const gchar PTR
DECLARE FUNCTION gtk_sheet_get_column_width(BYVAL AS gint) AS const gint
DECLARE FUNCTION gtk_sheet_get_columns_count() AS guint
DECLARE FUNCTION gtk_sheet_get_description(BYVAL AS const gchar PTR) AS const gchar PTR
DECLARE FUNCTION gtk_sheet_get_entry() AS GtkWidget PTR
DECLARE FUNCTION gtk_sheet_get_entry_text() AS gchar PTR
DECLARE FUNCTION gtk_sheet_get_entry_type() AS GType
DECLARE FUNCTION gtk_sheet_get_entry_widget() AS GtkWidget PTR
DECLARE FUNCTION gtk_sheet_get_hadjustment() AS GtkAdjustment PTR
DECLARE FUNCTION gtk_sheet_get_link(BYVAL AS gint, BYVAL AS gint) AS gpointer
DECLARE FUNCTION gtk_sheet_get_pixel_info(BYVAL AS GdkWindow PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint PTR, BYVAL AS gint PTR) AS gboolean
DECLARE FUNCTION gtk_sheet_get_row_title(BYVAL AS gint) AS const gchar PTR
DECLARE FUNCTION gtk_sheet_get_rows_count() AS guint
DECLARE FUNCTION gtk_sheet_get_selection(BYVAL AS GtkSheetState PTR, BYVAL AS GtkSheetRange PTR) AS gboolean
DECLARE FUNCTION gtk_sheet_get_state() AS GtkSheetState
DECLARE FUNCTION gtk_sheet_get_tooltip_markup() AS gchar PTR
DECLARE FUNCTION gtk_sheet_get_tooltip_text() AS gchar PTR
DECLARE FUNCTION gtk_sheet_get_traverse_type() AS GtkSheetTraverseType
DECLARE FUNCTION gtk_sheet_get_vadjustment() AS GtkAdjustment PTR
DECLARE SUB gtk_sheet_get_visible_range(BYVAL AS GtkSheetRange PTR)
DECLARE FUNCTION gtk_sheet_get_vjustification() AS GtkSheetVerticalJustification
DECLARE FUNCTION gtk_sheet_grid_visible() AS gboolean
DECLARE FUNCTION gtk_sheet_height() AS gint
DECLARE SUB gtk_sheet_hide_column_titles()
DECLARE SUB gtk_sheet_hide_row_titles()
DECLARE FUNCTION gtk_sheet_in_clip() AS gboolean
DECLARE SUB gtk_sheet_insert_columns(BYVAL AS guint, BYVAL AS guint)
DECLARE SUB gtk_sheet_insert_rows(BYVAL AS guint, BYVAL AS guint)
DECLARE FUNCTION gtk_sheet_is_frozen() AS gboolean
DECLARE FUNCTION gtk_sheet_justify_entry() AS gboolean
DECLARE SUB gtk_sheet_link_cell(BYVAL AS gint, BYVAL AS gint, BYVAL AS gpointer)
DECLARE FUNCTION gtk_sheet_locked() AS gboolean
DECLARE SUB gtk_sheet_move_child(BYVAL AS GtkWidget PTR, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_sheet_moveto(BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint)
DECLARE FUNCTION gtk_sheet_put(BYVAL AS GtkWidget PTR, BYVAL AS gint, BYVAL AS gint) AS GtkSheetChild PTR
DECLARE SUB gtk_sheet_range_clear(BYVAL AS const GtkSheetRange PTR)
DECLARE SUB gtk_sheet_range_delete(BYVAL AS const GtkSheetRange PTR)
DECLARE SUB gtk_sheet_range_set_background(BYVAL AS const GtkSheetRange PTR, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_sheet_range_set_border(BYVAL AS const GtkSheetRange PTR, BYVAL AS gint, BYVAL AS guint, BYVAL AS gint)
DECLARE SUB gtk_sheet_range_set_border_color(BYVAL AS const GtkSheetRange PTR, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_sheet_range_set_editable(BYVAL AS const GtkSheetRange PTR, BYVAL AS gint)
DECLARE SUB gtk_sheet_range_set_font(BYVAL AS const GtkSheetRange PTR, BYVAL AS PangoFontDescription PTR)
DECLARE SUB gtk_sheet_range_set_foreground(BYVAL AS const GtkSheetRange PTR, BYVAL AS const GdkColor PTR)
DECLARE SUB gtk_sheet_range_set_justification(BYVAL AS const GtkSheetRange PTR, BYVAL AS GtkJustification)
DECLARE SUB gtk_sheet_range_set_visible(BYVAL AS const GtkSheetRange PTR, BYVAL AS gboolean)
DECLARE SUB gtk_sheet_remove_link(BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_sheet_row_button_add_label(BYVAL AS gint, BYVAL AS const gchar PTR)
DECLARE FUNCTION gtk_sheet_row_button_get_label(BYVAL AS gint) AS const gchar PTR
DECLARE SUB gtk_sheet_row_button_justify(BYVAL AS gint, BYVAL AS GtkJustification)
DECLARE FUNCTION gtk_sheet_row_get_can_focus(BYVAL AS const gint) AS gboolean
DECLARE FUNCTION gtk_sheet_row_get_readonly(BYVAL AS const gint) AS gboolean
DECLARE FUNCTION gtk_sheet_row_get_tooltip_markup(BYVAL AS const gint) AS gchar PTR
DECLARE FUNCTION gtk_sheet_row_get_tooltip_text(BYVAL AS const gint) AS gchar PTR
DECLARE SUB gtk_sheet_row_label_set_visibility(BYVAL AS gint, BYVAL AS gboolean)
DECLARE FUNCTION gtk_sheet_row_sensitive(BYVAL AS gint) AS gboolean
DECLARE SUB gtk_sheet_row_set_can_focus(BYVAL AS const gint, BYVAL AS const gboolean)
DECLARE SUB gtk_sheet_row_set_readonly(BYVAL AS const gint, BYVAL AS const gboolean)
DECLARE SUB gtk_sheet_row_set_sensitivity(BYVAL AS gint, BYVAL AS gboolean)
DECLARE SUB gtk_sheet_row_set_tooltip_markup(BYVAL AS const gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_row_set_tooltip_text(BYVAL AS const gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_row_set_visibility(BYVAL AS gint, BYVAL AS gboolean)
DECLARE FUNCTION gtk_sheet_row_titles_visible() AS gboolean
DECLARE FUNCTION gtk_sheet_row_visible(BYVAL AS gint) AS gboolean
DECLARE SUB gtk_sheet_rows_labels_set_visibility(BYVAL AS gboolean)
DECLARE FUNCTION gtk_sheet_rows_resizable() AS gboolean
DECLARE SUB gtk_sheet_rows_set_resizable(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_rows_set_sensitivity(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_select_column(BYVAL AS gint)
DECLARE SUB gtk_sheet_select_range(BYVAL AS const GtkSheetRange PTR)
DECLARE SUB gtk_sheet_select_row(BYVAL AS gint)
DECLARE FUNCTION gtk_sheet_set_active_cell(BYVAL AS gint, BYVAL AS gint) AS gboolean
DECLARE SUB gtk_sheet_set_autoresize(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_set_autoresize_columns(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_set_autoresize_rows(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_set_autoscroll(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_set_background(BYVAL AS GdkColor PTR)
DECLARE SUB gtk_sheet_set_cell(BYVAL AS gint, BYVAL AS gint, BYVAL AS GtkJustification, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_set_cell_text(BYVAL AS gint, BYVAL AS gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_set_clip_text(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_set_column_title(BYVAL AS gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_set_column_titles_height(BYVAL AS guint)
DECLARE SUB gtk_sheet_set_column_width(BYVAL AS gint, BYVAL AS guint)
DECLARE SUB gtk_sheet_set_description(BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_set_entry_editable(BYVAL AS const gboolean)
DECLARE SUB gtk_sheet_set_entry_text(BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_set_grid(BYVAL AS GdkColor PTR)
DECLARE SUB gtk_sheet_set_hadjustment(BYVAL AS GtkAdjustment PTR)
DECLARE SUB gtk_sheet_set_justify_entry(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_set_locked(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_set_row_height(BYVAL AS gint, BYVAL AS guint)
DECLARE SUB gtk_sheet_set_row_title(BYVAL AS gint, BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_set_row_titles_width(BYVAL AS guint)
DECLARE SUB gtk_sheet_set_selection_mode(BYVAL AS GtkSelectionMode)
DECLARE SUB gtk_sheet_set_tab_direction(BYVAL AS GtkDirectionType)
DECLARE SUB gtk_sheet_set_title(BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_set_tooltip_markup(BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_set_tooltip_text(BYVAL AS const gchar PTR)
DECLARE SUB gtk_sheet_set_traverse_type(BYVAL AS GtkSheetTraverseType)
DECLARE SUB gtk_sheet_set_vadjustment(BYVAL AS GtkAdjustment PTR)
DECLARE SUB gtk_sheet_set_vjustification(BYVAL AS GtkSheetVerticalJustification)
DECLARE SUB gtk_sheet_show_column_titles()
DECLARE SUB gtk_sheet_show_grid(BYVAL AS gboolean)
DECLARE SUB gtk_sheet_show_row_titles()
DECLARE SUB gtk_sheet_thaw()
DECLARE SUB gtk_sheet_unclip_range()
DECLARE SUB gtk_sheet_unselect_range()
DECLARE FUNCTION gtk_sheet_width() AS gint
TYPE _GtkSheetButton
  AS GtkStateType state
  AS gchar PTR label
  AS gboolean label_visible
  AS GtkSheetChild PTR child
  AS GtkJustification justification
END TYPE
TYPE _GtkSheetCellAttr
  AS GtkJustification justification
  AS GdkFont PTR font
  AS PangoFontDescription PTR font_desc
  AS GdkColor foreground
  AS GdkColor background
  AS GtkSheetCellBorder border
  AS gboolean is_editable
  AS gboolean is_visible
  AS gboolean is_sensitive
  AS gboolean can_focus
  AS gboolean do_font_desc_free
END TYPE
TYPE _GtkSheetChild
  AS GtkWidget PTR widget
  AS gint x
  AS gint y
  AS gboolean attached_to_cell
  AS gboolean floating
  AS gint row
  AS gint col
  AS guint16 xpadding
  AS guint16 ypadding
  AS gboolean xexpand
  AS gboolean yexpand
  AS gboolean xshrink
  AS gboolean yshrink
  AS gboolean xfill
  AS gboolean yfill
END TYPE
TYPE _GtkSheetClass
  AS GtkContainerClass parent_class
  set_scroll_adjustments AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS GtkAdjustment PTR, BYVAL AS GtkAdjustment PTR)
  select_row AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS gint)
  select_column AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS gint)
  select_range AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS GtkSheetRange PTR)
  clip_range AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS GtkSheetRange PTR)
  resize_range AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS GtkSheetRange PTR, BYVAL AS GtkSheetRange PTR)
  move_range AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS GtkSheetRange PTR, BYVAL AS GtkSheetRange PTR)
  traverse AS FUNCTION CDECL(BYVAL AS GtkSheet PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint PTR, BYVAL AS gint PTR) AS gboolean
  deactivate AS FUNCTION CDECL(BYVAL AS GtkSheet PTR, BYVAL AS gint, BYVAL AS gint) AS gboolean
  activate AS FUNCTION CDECL(BYVAL AS GtkSheet PTR, BYVAL AS gint, BYVAL AS gint) AS gboolean
  set_cell AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS gint, BYVAL AS gint)
  clear_cell AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS gint, BYVAL AS gint)
  changed AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS gint, BYVAL AS gint)
  new_column_width AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS gint, BYVAL AS guint)
  new_row_height AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS gint, BYVAL AS guint)
  focus_in_event AS FUNCTION CDECL(BYVAL AS GtkSheet PTR, BYVAL AS GdkEventFocus PTR) AS gboolean
  focus_out_event AS FUNCTION CDECL(BYVAL AS GtkSheet PTR, BYVAL AS GdkEventFocus PTR) AS gboolean
  move_cursor AS SUB CDECL(BYVAL AS GtkSheet PTR, BYVAL AS GtkMovementStep, BYVAL AS gint, BYVAL AS gboolean)
END TYPE
TYPE _GtkSheetColumn
  AS GtkWidget parent
  AS GtkSheet PTR sheet
  AS gchar PTR title
  AS gint width
  AS guint16 requisition
  AS gint left_xpixel
  AS gint max_extent_width
  AS GtkSheetButton button
  AS GtkJustification justification
  AS GtkSheetVerticalJustification vjust
  AS gboolean is_key
  AS gboolean is_readonly
  AS gchar PTR data_type
  AS gchar PTR data_format
  AS gchar PTR description
  AS GType entry_type
  AS gint max_length
  AS gint max_length_bytes
  AS GtkWrapMode wrap_mode
END TYPE
DECLARE FUNCTION gtk_sheet_column_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_SHEET_COLUMN (gtk_sheet_column_get_type())
#DEFINE GTKEXTRA_SHEET_COLUMN(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_SHEET_COLUMN, GtkSheetColumn))
#DEFINE GTKEXTRA_SHEET_COLUMN_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_SHEET_COLUMN, GtkExtraSheetColumnClass))
#DEFINE GTKEXTRA_IS_SHEET_COLUMN(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_SHEET_COLUMN))
#DEFINE GTKEXTRA_IS_CLASS_SHEET_COLUMN(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_SHEET_COLUMN))
#DEFINE GTKEXTRA_SHEET_COLUMN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_SHEET_COLUMN, GtkExtraSheetColumnClass))
DECLARE FUNCTION gtk_sheet_column_get_index() AS gint
TYPE _GtkSheetColumnClass
  AS GtkWidgetClass parent_class
END TYPE
TYPE _GtkSheetRow
  AS gchar PTR name
  AS gint height
  AS guint16 requisition
  AS gint top_ypixel
  AS gint max_extent_height
  AS GtkSheetButton button
  AS gboolean is_sensitive
  AS gboolean is_visible
  AS gboolean is_readonly
  AS gboolean can_focus
  AS gchar PTR tooltip_markup
  AS gchar PTR tooltip_text
END TYPE
TYPE _GtkToggleCombo
  AS GtkComboButton toggle_combo
  AS gint default_flag : 1
  AS gint nrows
  AS gint ncols
  AS gint row
  AS gint column
  AS GtkWidget PTR PTR PTR button
  AS GtkWidget PTR table
  AS GtkWidget PTR custom_button
END TYPE
DECLARE FUNCTION gtk_toggle_combo_get_type() AS GType
#DEFINE GTKEXTRA_TYPE_TOGGLE_COMBO (gtk_toggle_combo_get_type())
#DEFINE GTKEXTRA_TOGGLE_COMBO(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKEXTRA_TYPE_TOGGLE_COMBO, GtkToggleCombo))
#DEFINE GTKEXTRA_TOGGLE_COMBO_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKEXTRA_TYPE_TOGGLE_COMBO, GtkExtraToggleComboClass))
#DEFINE GTKEXTRA_IS_TOGGLE_COMBO(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKEXTRA_TYPE_TOGGLE_COMBO))
#DEFINE GTKEXTRA_IS_CLASS_TOGGLE_COMBO(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKEXTRA_TYPE_TOGGLE_COMBO))
#DEFINE GTKEXTRA_TOGGLE_COMBO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKEXTRA_TYPE_TOGGLE_COMBO, GtkExtraToggleComboClass))
DECLARE FUNCTION gtk_toggle_combo_new(BYVAL AS gint, BYVAL AS gint) AS GtkWidget PTR
DECLARE SUB gtk_toggle_combo_construct(BYVAL AS gint, BYVAL AS gint)
DECLARE FUNCTION gtk_toggle_combo_get_ncols() AS gint
DECLARE FUNCTION gtk_toggle_combo_get_nrows() AS gint
DECLARE SUB gtk_toggle_combo_get_selection(BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE SUB gtk_toggle_combo_select(BYVAL AS gint, BYVAL AS gint)
TYPE _GtkToggleComboClass
  AS GtkComboButtonClass parent_class
  changed AS SUB CDECL(BYVAL AS GtkToggleCombo PTR, BYVAL AS gint, BYVAL AS gint)
END TYPE
' P_4

DECLARE FUNCTION gtk_data_format(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR) AS gchar PTR
DECLARE FUNCTION gtk_data_format_remove(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR) AS gchar PTR
DECLARE SUB gtk_psfont_add_font(BYVAL AS const char PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS gboolean, BYVAL AS gboolean)
DECLARE SUB gtk_psfont_add_i18n_font(BYVAL AS const char PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS gboolean, BYVAL AS gboolean, BYVAL AS gboolean)
DECLARE FUNCTION gtk_psfont_get_by_family(BYVAL AS const gchar PTR, BYVAL AS gboolean, BYVAL AS gboolean) AS GtkPSFont PTR
DECLARE FUNCTION gtk_psfont_get_by_name(BYVAL AS const gchar PTR) AS GtkPSFont PTR
DECLARE SUB gtk_psfont_get_char_size(BYVAL AS GtkPSFont PTR, BYVAL AS GdkFont PTR, BYVAL AS GdkFont PTR, BYVAL AS GdkWChar, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE SUB gtk_psfont_get_families(BYVAL AS GList PTR PTR, BYVAL AS gint PTR)
DECLARE FUNCTION gtk_psfont_get_font_description(BYVAL AS GtkPSFont PTR, BYVAL AS gint) AS PangoFontDescription PTR
DECLARE FUNCTION gtk_psfont_get_gdkfont(BYVAL AS GtkPSFont PTR, BYVAL AS gint) AS GdkFont PTR
DECLARE FUNCTION gtk_psfont_get_psfontname(BYVAL AS GtkPSFont PTR) AS const gchar PTR
DECLARE FUNCTION gtk_psfont_init() AS gint
DECLARE SUB gtk_psfont_unref()
END EXTERN

