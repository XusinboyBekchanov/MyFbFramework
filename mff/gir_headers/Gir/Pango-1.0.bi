'            FreeBasic header file, auto-generated by
'                       ### girtobac ###
' LGPLv2.1 (C) 2013-2022 by Thomas{ doT ]Freiherr[ At ]gmx[ DoT }net
' Auto-translated from file /usr/share/gir-1.0/Pango-1.0.gir
#include once "_GirToBac-0.0.bi"
' Repository version 1.2
#include once "GObject-2.0.bi"
'#include once "cairo-1.0.bi"
Type As guint32 PangoGlyph
Type As gint32 PangoGlyphUnit
Type As PangoGlyphItem PangoLayoutRun
#define PANGO_ANALYSIS_FLAG_CENTERED_BASELINE 1
#define PANGO_ANALYSIS_FLAG_IS_ELLIPSIS 2
#define PANGO_ANALYSIS_FLAG_NEED_HYPHEN 4
#define PANGO_ATTR_INDEX_FROM_TEXT_BEGINNING 0
Type As Long PangoAlignment
Enum
  PANGO_ALIGN_LEFT = 0
  PANGO_ALIGN_CENTER = 1
  PANGO_ALIGN_RIGHT = 2
End Enum
Type As _PangoAnalysis PangoAnalysis
Type As _PangoAttrClass PangoAttrClass
Type As _PangoAttrColor PangoAttrColor
Type As _PangoAttrFloat PangoAttrFloat
Type As _PangoAttrFontDesc PangoAttrFontDesc
Type As _PangoAttrFontFeatures PangoAttrFontFeatures
Type As _PangoAttrInt PangoAttrInt
Type As _PangoAttrIterator PangoAttrIterator
Type As _PangoAttrLanguage PangoAttrLanguage
Type As _PangoAttrList PangoAttrList
Type As _PangoAttrShape PangoAttrShape
Type As _PangoAttrSize PangoAttrSize
Type As _PangoAttrString PangoAttrString
Type As Long PangoAttrType
Enum
  PANGO_ATTR_INVALID = 0
  PANGO_ATTR_LANGUAGE = 1
  PANGO_ATTR_FAMILY = 2
  PANGO_ATTR_STYLE = 3
  PANGO_ATTR_WEIGHT = 4
  PANGO_ATTR_VARIANT = 5
  PANGO_ATTR_STRETCH = 6
  PANGO_ATTR_SIZE = 7
  PANGO_ATTR_FONT_DESC = 8
  PANGO_ATTR_FOREGROUND = 9
  PANGO_ATTR_BACKGROUND = 10
  PANGO_ATTR_UNDERLINE = 11
  PANGO_ATTR_STRIKETHROUGH = 12
  PANGO_ATTR_RISE = 13
  PANGO_ATTR_SHAPE = 14
  PANGO_ATTR_SCALE = 15
  PANGO_ATTR_FALLBACK = 16
  PANGO_ATTR_LETTER_SPACING = 17
  PANGO_ATTR_UNDERLINE_COLOR = 18
  PANGO_ATTR_STRIKETHROUGH_COLOR = 19
  PANGO_ATTR_ABSOLUTE_SIZE = 20
  PANGO_ATTR_GRAVITY = 21
  PANGO_ATTR_GRAVITY_HINT = 22
  PANGO_ATTR_FONT_FEATURES = 23
  PANGO_ATTR_FOREGROUND_ALPHA = 24
  PANGO_ATTR_BACKGROUND_ALPHA = 25
  PANGO_ATTR_ALLOW_BREAKS = 26
  PANGO_ATTR_SHOW = 27
  PANGO_ATTR_INSERT_HYPHENS = 28
END ENUM
TYPE AS _PangoAttribute PangoAttribute
TYPE AS LONG PangoBidiType
ENUM
  PANGO_BIDI_TYPE_L = 0
  PANGO_BIDI_TYPE_LRE = 1
  PANGO_BIDI_TYPE_LRO = 2
  PANGO_BIDI_TYPE_R = 3
  PANGO_BIDI_TYPE_AL = 4
  PANGO_BIDI_TYPE_RLE = 5
  PANGO_BIDI_TYPE_RLO = 6
  PANGO_BIDI_TYPE_PDF = 7
  PANGO_BIDI_TYPE_EN = 8
  PANGO_BIDI_TYPE_ES = 9
  PANGO_BIDI_TYPE_ET = 10
  PANGO_BIDI_TYPE_AN = 11
  PANGO_BIDI_TYPE_CS = 12
  PANGO_BIDI_TYPE_NSM = 13
  PANGO_BIDI_TYPE_BN = 14
  PANGO_BIDI_TYPE_B = 15
  PANGO_BIDI_TYPE_S = 16
  PANGO_BIDI_TYPE_WS = 17
  PANGO_BIDI_TYPE_ON = 18
END ENUM
TYPE AS _PangoColor PangoColor
TYPE AS _PangoContext PangoContext
TYPE AS _PangoContextClass PangoContextClass
TYPE AS _PangoCoverage PangoCoverage
TYPE AS LONG PangoCoverageLevel
ENUM
  PANGO_COVERAGE_NONE = 0
  PANGO_COVERAGE_FALLBACK = 1
  PANGO_COVERAGE_APPROXIMATE = 2
  PANGO_COVERAGE_EXACT = 3
END ENUM
TYPE AS LONG PangoDirection
ENUM
  PANGO_DIRECTION_LTR = 0
  PANGO_DIRECTION_RTL = 1
  PANGO_DIRECTION_TTB_LTR = 2
  PANGO_DIRECTION_TTB_RTL = 3
  PANGO_DIRECTION_WEAK_LTR = 4
  PANGO_DIRECTION_WEAK_RTL = 5
  PANGO_DIRECTION_NEUTRAL = 6
END ENUM
#DEFINE PANGO_ENGINE_TYPE_LANG @!"PangoEngineLang"
#DEFINE PANGO_ENGINE_TYPE_SHAPE @!"PangoEngineShape"
TYPE AS LONG PangoEllipsizeMode
ENUM
  PANGO_ELLIPSIZE_NONE = 0
  PANGO_ELLIPSIZE_START = 1
  PANGO_ELLIPSIZE_MIDDLE = 2
  PANGO_ELLIPSIZE_END = 3
END ENUM
TYPE AS _PangoEngine PangoEngine
TYPE AS _PangoEngineClass PangoEngineClass
TYPE AS _PangoEngineInfo PangoEngineInfo
TYPE AS _PangoEngineLang PangoEngineLang
TYPE AS _PangoEngineLangClass PangoEngineLangClass
TYPE AS _PangoEngineScriptInfo PangoEngineScriptInfo
TYPE AS _PangoEngineShape PangoEngineShape
TYPE AS _PangoEngineShapeClass PangoEngineShapeClass
TYPE AS _PangoFont PangoFont
TYPE AS _PangoFontClass PangoFontClass
TYPE AS _PangoFontDescription PangoFontDescription
TYPE AS _PangoFontFace PangoFontFace
TYPE AS _PangoFontFaceClass PangoFontFaceClass
TYPE AS _PangoFontFamily PangoFontFamily
TYPE AS _PangoFontFamilyClass PangoFontFamilyClass
TYPE AS _PangoFontMap PangoFontMap
TYPE AS _PangoFontMapClass PangoFontMapClass
TYPE AS LONG PangoFontMask
ENUM
  PANGO_FONT_MASK_FAMILY = 1
  PANGO_FONT_MASK_STYLE = 2
  PANGO_FONT_MASK_VARIANT = 4
  PANGO_FONT_MASK_WEIGHT = 8
  PANGO_FONT_MASK_STRETCH = 16
  PANGO_FONT_MASK_SIZE = 32
  PANGO_FONT_MASK_GRAVITY = 64
  PANGO_FONT_MASK_VARIATIONS = 128
END ENUM
TYPE AS _PangoFontMetrics PangoFontMetrics
TYPE AS _PangoFontset PangoFontset
TYPE AS _PangoFontsetClass PangoFontsetClass
TYPE AS _PangoFontsetSimple PangoFontsetSimple
TYPE AS _PangoFontsetSimpleClass PangoFontsetSimpleClass
#DEFINE PANGO_GLYPH_EMPTY 268435455
#DEFINE PANGO_GLYPH_INVALID_INPUT 4294967295
#DEFINE PANGO_GLYPH_UNKNOWN_FLAG 268435456
TYPE AS _PangoGlyphGeometry PangoGlyphGeometry
TYPE AS _PangoGlyphInfo PangoGlyphInfo
TYPE AS _PangoGlyphItem PangoGlyphItem
TYPE AS _PangoGlyphItemIter PangoGlyphItemIter
TYPE AS _PangoGlyphString PangoGlyphString
TYPE AS _PangoGlyphVisAttr PangoGlyphVisAttr
TYPE AS LONG PangoGravity
ENUM
  PANGO_GRAVITY_SOUTH = 0
  PANGO_GRAVITY_EAST = 1
  PANGO_GRAVITY_NORTH = 2
  PANGO_GRAVITY_WEST = 3
  PANGO_GRAVITY_AUTO = 4
END ENUM
TYPE AS LONG PangoGravityHint
ENUM
  PANGO_GRAVITY_HINT_NATURAL = 0
  PANGO_GRAVITY_HINT_STRONG = 1
  PANGO_GRAVITY_HINT_LINE = 2
END ENUM
TYPE AS _PangoIncludedModule PangoIncludedModule
TYPE AS _PangoItem PangoItem
TYPE AS _PangoLanguage PangoLanguage
TYPE AS _PangoLayout PangoLayout
TYPE AS _PangoLayoutClass PangoLayoutClass
TYPE AS _PangoLayoutIter PangoLayoutIter
TYPE AS _PangoLayoutLine PangoLayoutLine
TYPE AS _PangoLogAttr PangoLogAttr
TYPE AS _PangoMap PangoMap
TYPE AS _PangoMapEntry PangoMapEntry
TYPE AS _PangoMatrix PangoMatrix
#DEFINE PANGO_RENDER_TYPE_NONE @!"PangoRenderNone"
TYPE AS _PangoRectangle PangoRectangle
TYPE AS LONG PangoRenderPart
ENUM
  PANGO_RENDER_PART_FOREGROUND = 0
  PANGO_RENDER_PART_BACKGROUND = 1
  PANGO_RENDER_PART_UNDERLINE = 2
  PANGO_RENDER_PART_STRIKETHROUGH = 3
END ENUM
TYPE AS _PangoRenderer PangoRenderer
TYPE AS _PangoRendererClass PangoRendererClass
TYPE AS _PangoRendererPrivate PangoRendererPrivate
#DEFINE PANGO_SCALE 1024
TYPE AS LONG PangoScript
ENUM
  PANGO_SCRIPT_INVALID_CODE = -1
  PANGO_SCRIPT_COMMON = 0
  PANGO_SCRIPT_INHERITED = 1
  PANGO_SCRIPT_ARABIC = 2
  PANGO_SCRIPT_ARMENIAN = 3
  PANGO_SCRIPT_BENGALI = 4
  PANGO_SCRIPT_BOPOMOFO = 5
  PANGO_SCRIPT_CHEROKEE = 6
  PANGO_SCRIPT_COPTIC = 7
  PANGO_SCRIPT_CYRILLIC = 8
  PANGO_SCRIPT_DESERET = 9
  PANGO_SCRIPT_DEVANAGARI = 10
  PANGO_SCRIPT_ETHIOPIC = 11
  PANGO_SCRIPT_GEORGIAN = 12
  PANGO_SCRIPT_GOTHIC = 13
  PANGO_SCRIPT_GREEK = 14
  PANGO_SCRIPT_GUJARATI = 15
  PANGO_SCRIPT_GURMUKHI = 16
  PANGO_SCRIPT_HAN = 17
  PANGO_SCRIPT_HANGUL = 18
  PANGO_SCRIPT_HEBREW = 19
  PANGO_SCRIPT_HIRAGANA = 20
  PANGO_SCRIPT_KANNADA = 21
  PANGO_SCRIPT_KATAKANA = 22
  PANGO_SCRIPT_KHMER = 23
  PANGO_SCRIPT_LAO = 24
  PANGO_SCRIPT_LATIN = 25
  PANGO_SCRIPT_MALAYALAM = 26
  PANGO_SCRIPT_MONGOLIAN = 27
  PANGO_SCRIPT_MYANMAR = 28
  PANGO_SCRIPT_OGHAM = 29
  PANGO_SCRIPT_OLD_ITALIC = 30
  PANGO_SCRIPT_ORIYA = 31
  PANGO_SCRIPT_RUNIC = 32
  PANGO_SCRIPT_SINHALA = 33
  PANGO_SCRIPT_SYRIAC = 34
  PANGO_SCRIPT_TAMIL = 35
  PANGO_SCRIPT_TELUGU = 36
  PANGO_SCRIPT_THAANA = 37
  PANGO_SCRIPT_THAI = 38
  PANGO_SCRIPT_TIBETAN = 39
  PANGO_SCRIPT_CANADIAN_ABORIGINAL = 40
  PANGO_SCRIPT_YI = 41
  PANGO_SCRIPT_TAGALOG = 42
  PANGO_SCRIPT_HANUNOO = 43
  PANGO_SCRIPT_BUHID = 44
  PANGO_SCRIPT_TAGBANWA = 45
  PANGO_SCRIPT_BRAILLE = 46
  PANGO_SCRIPT_CYPRIOT = 47
  PANGO_SCRIPT_LIMBU = 48
  PANGO_SCRIPT_OSMANYA = 49
  PANGO_SCRIPT_SHAVIAN = 50
  PANGO_SCRIPT_LINEAR_B = 51
  PANGO_SCRIPT_TAI_LE = 52
  PANGO_SCRIPT_UGARITIC = 53
  PANGO_SCRIPT_NEW_TAI_LUE = 54
  PANGO_SCRIPT_BUGINESE = 55
  PANGO_SCRIPT_GLAGOLITIC = 56
  PANGO_SCRIPT_TIFINAGH = 57
  PANGO_SCRIPT_SYLOTI_NAGRI = 58
  PANGO_SCRIPT_OLD_PERSIAN = 59
  PANGO_SCRIPT_KHAROSHTHI = 60
  PANGO_SCRIPT_UNKNOWN = 61
  PANGO_SCRIPT_BALINESE = 62
  PANGO_SCRIPT_CUNEIFORM = 63
  PANGO_SCRIPT_PHOENICIAN = 64
  PANGO_SCRIPT_PHAGS_PA = 65
  PANGO_SCRIPT_NKO = 66
  PANGO_SCRIPT_KAYAH_LI = 67
  PANGO_SCRIPT_LEPCHA = 68
  PANGO_SCRIPT_REJANG = 69
  PANGO_SCRIPT_SUNDANESE = 70
  PANGO_SCRIPT_SAURASHTRA = 71
  PANGO_SCRIPT_CHAM = 72
  PANGO_SCRIPT_OL_CHIKI = 73
  PANGO_SCRIPT_VAI = 74
  PANGO_SCRIPT_CARIAN = 75
  PANGO_SCRIPT_LYCIAN = 76
  PANGO_SCRIPT_LYDIAN = 77
  PANGO_SCRIPT_BATAK = 78
  PANGO_SCRIPT_BRAHMI = 79
  PANGO_SCRIPT_MANDAIC = 80
  PANGO_SCRIPT_CHAKMA = 81
  PANGO_SCRIPT_MEROITIC_CURSIVE = 82
  PANGO_SCRIPT_MEROITIC_HIEROGLYPHS = 83
  PANGO_SCRIPT_MIAO = 84
  PANGO_SCRIPT_SHARADA = 85
  PANGO_SCRIPT_SORA_SOMPENG = 86
  PANGO_SCRIPT_TAKRI = 87
  PANGO_SCRIPT_BASSA_VAH = 88
  PANGO_SCRIPT_CAUCASIAN_ALBANIAN = 89
  PANGO_SCRIPT_DUPLOYAN = 90
  PANGO_SCRIPT_ELBASAN = 91
  PANGO_SCRIPT_GRANTHA = 92
  PANGO_SCRIPT_KHOJKI = 93
  PANGO_SCRIPT_KHUDAWADI = 94
  PANGO_SCRIPT_LINEAR_A = 95
  PANGO_SCRIPT_MAHAJANI = 96
  PANGO_SCRIPT_MANICHAEAN = 97
  PANGO_SCRIPT_MENDE_KIKAKUI = 98
  PANGO_SCRIPT_MODI = 99
  PANGO_SCRIPT_MRO = 100
  PANGO_SCRIPT_NABATAEAN = 101
  PANGO_SCRIPT_OLD_NORTH_ARABIAN = 102
  PANGO_SCRIPT_OLD_PERMIC = 103
  PANGO_SCRIPT_PAHAWH_HMONG = 104
  PANGO_SCRIPT_PALMYRENE = 105
  PANGO_SCRIPT_PAU_CIN_HAU = 106
  PANGO_SCRIPT_PSALTER_PAHLAVI = 107
  PANGO_SCRIPT_SIDDHAM = 108
  PANGO_SCRIPT_TIRHUTA = 109
  PANGO_SCRIPT_WARANG_CITI = 110
  PANGO_SCRIPT_AHOM = 111
  PANGO_SCRIPT_ANATOLIAN_HIEROGLYPHS = 112
  PANGO_SCRIPT_HATRAN = 113
  PANGO_SCRIPT_MULTANI = 114
  PANGO_SCRIPT_OLD_HUNGARIAN = 115
  PANGO_SCRIPT_SIGNWRITING = 116
END ENUM
TYPE AS _PangoScriptIter PangoScriptIter
TYPE AS LONG PangoShapeFlags
ENUM
  PANGO_SHAPE_NONE = 0
  PANGO_SHAPE_ROUND_POSITIONS = 1
END ENUM
TYPE AS LONG PangoShowFlags
ENUM
  PANGO_SHOW_NONE = 0
  PANGO_SHOW_SPACES = 1
  PANGO_SHOW_LINE_BREAKS = 2
  PANGO_SHOW_IGNORABLES = 4
END ENUM
TYPE AS LONG PangoStretch
ENUM
  PANGO_STRETCH_ULTRA_CONDENSED = 0
  PANGO_STRETCH_EXTRA_CONDENSED = 1
  PANGO_STRETCH_CONDENSED = 2
  PANGO_STRETCH_SEMI_CONDENSED = 3
  PANGO_STRETCH_NORMAL = 4
  PANGO_STRETCH_SEMI_EXPANDED = 5
  PANGO_STRETCH_EXPANDED = 6
  PANGO_STRETCH_EXTRA_EXPANDED = 7
  PANGO_STRETCH_ULTRA_EXPANDED = 8
END ENUM
TYPE AS LONG PangoStyle
ENUM
  PANGO_STYLE_NORMAL = 0
  PANGO_STYLE_OBLIQUE = 1
  PANGO_STYLE_ITALIC = 2
END ENUM
TYPE AS LONG PangoTabAlign
ENUM
  PANGO_TAB_LEFT = 0
END ENUM
TYPE AS _PangoTabArray PangoTabArray
#DEFINE PANGO_UNKNOWN_GLYPH_HEIGHT 14
#DEFINE PANGO_UNKNOWN_GLYPH_WIDTH 10
TYPE AS LONG PangoUnderline
ENUM
  PANGO_UNDERLINE_NONE = 0
  PANGO_UNDERLINE_SINGLE = 1
  PANGO_UNDERLINE_DOUBLE = 2
  PANGO_UNDERLINE_LOW = 3
  PANGO_UNDERLINE_ERROR = 4
END ENUM
#DEFINE PANGO_VERSION_MIN_REQUIRED 2
TYPE AS LONG PangoVariant
ENUM
  PANGO_VARIANT_NORMAL = 0
  PANGO_VARIANT_SMALL_CAPS = 1
END ENUM
TYPE AS LONG PangoWeight
ENUM
  PANGO_WEIGHT_THIN = 100
  PANGO_WEIGHT_ULTRALIGHT = 200
  PANGO_WEIGHT_LIGHT = 300
  PANGO_WEIGHT_SEMILIGHT = 350
  PANGO_WEIGHT_BOOK = 380
  PANGO_WEIGHT_NORMAL = 400
  PANGO_WEIGHT_MEDIUM = 500
  PANGO_WEIGHT_SEMIBOLD = 600
  PANGO_WEIGHT_BOLD = 700
  PANGO_WEIGHT_ULTRABOLD = 800
  PANGO_WEIGHT_HEAVY = 900
  PANGO_WEIGHT_ULTRAHEAVY = 1000
END ENUM
TYPE AS LONG PangoWrapMode
ENUM
  PANGO_WRAP_WORD = 0
  PANGO_WRAP_CHAR = 1
  PANGO_WRAP_WORD_CHAR = 2
END ENUM
EXTERN "C" LIB "pango-1.0"
' P_X

TYPE _PangoAttribute
  AS const PangoAttrClass PTR klass
  AS guint start_index
  AS guint end_index
END TYPE
DECLARE FUNCTION pango_attribute_copy(BYVAL AS const PangoAttribute PTR) AS PangoAttribute PTR
DECLARE SUB pango_attribute_destroy(BYVAL AS PangoAttribute PTR)
DECLARE FUNCTION pango_attribute_equal(BYVAL AS const PangoAttribute PTR, BYVAL AS const PangoAttribute PTR) AS gboolean
DECLARE SUB pango_attribute_init(BYVAL AS PangoAttribute PTR, BYVAL AS const PangoAttrClass PTR)
TYPE _PangoColor
  AS guint16 red
  AS guint16 green
  AS guint16 blue
END TYPE
DECLARE FUNCTION pango_color_copy(BYVAL AS const PangoColor PTR) AS PangoColor PTR
DECLARE SUB pango_color_free(BYVAL AS PangoColor PTR)
DECLARE FUNCTION pango_color_parse(BYVAL AS PangoColor PTR, BYVAL AS const char PTR) AS gboolean
DECLARE FUNCTION pango_color_to_string(BYVAL AS const PangoColor PTR) AS gchar PTR
TYPE _PangoRectangle
  AS gint /'int'/ x
  AS gint /'int'/ y
  AS gint /'int'/ width
  AS gint /'int'/ height
END TYPE
TYPE PangoFontsetForeachFunc AS FUNCTION CDECL(BYVAL AS PangoFontset PTR, BYVAL AS PangoFont PTR, BYVAL AS gpointer) AS gboolean
TYPE _PangoGlyphVisAttr
  AS guint is_cluster_start : 1
END TYPE
' P_3

TYPE _PangoAnalysis
  AS PangoEngineShape PTR shape_engine
  AS PangoEngineLang PTR lang_engine
  AS PangoFont PTR font
  AS guint8 level
  AS guint8 gravity
  AS guint8 flags
  AS guint8 script
  AS PangoLanguage PTR language
  AS GSList PTR extra_attrs
END TYPE
DECLARE FUNCTION pango_alignment_get_type() AS GType
#DEFINE PANGO_TYPE_ALIGNMENT (pango_alignment_get_type())
TYPE _PangoAttrClass
  AS PangoAttrType type
  copy AS FUNCTION CDECL(BYVAL AS const PangoAttribute PTR) AS PangoAttribute PTR
  destroy AS SUB CDECL(BYVAL AS PangoAttribute PTR)
  equal AS FUNCTION CDECL(BYVAL AS const PangoAttribute PTR, BYVAL AS const PangoAttribute PTR) AS gboolean
END TYPE
TYPE _PangoAttrColor
  AS PangoAttribute attr
  AS PangoColor color
END TYPE
TYPE PangoAttrDataCopyFunc AS FUNCTION CDECL(BYVAL AS gconstpointer) AS gpointer
TYPE PangoAttrFilterFunc AS FUNCTION CDECL(BYVAL AS PangoAttribute PTR, BYVAL AS gpointer) AS gboolean
TYPE _PangoAttrFloat
  AS PangoAttribute attr
  AS double value
END TYPE
TYPE _PangoAttrFontDesc
  AS PangoAttribute attr
  AS PangoFontDescription PTR desc
END TYPE
DECLARE FUNCTION pango_attr_font_desc_new(BYVAL AS const PangoFontDescription PTR) AS PangoAttribute PTR
TYPE _PangoAttrFontFeatures
  AS PangoAttribute attr
  AS gchar PTR features
END TYPE
DECLARE FUNCTION pango_attr_font_features_new(BYVAL AS const gchar PTR) AS PangoAttribute PTR
TYPE _PangoAttrInt
  AS PangoAttribute attr
  AS gint /'int'/ value
END TYPE
DECLARE FUNCTION pango_attr_iterator_copy(BYVAL AS PangoAttrIterator PTR) AS PangoAttrIterator PTR
DECLARE SUB pango_attr_iterator_destroy(BYVAL AS PangoAttrIterator PTR)
DECLARE FUNCTION pango_attr_iterator_get(BYVAL AS PangoAttrIterator PTR, BYVAL AS PangoAttrType) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_iterator_get_attrs(BYVAL AS PangoAttrIterator PTR) AS GSList PTR
DECLARE SUB pango_attr_iterator_get_font(BYVAL AS PangoAttrIterator PTR, BYVAL AS PangoFontDescription PTR, BYVAL AS PangoLanguage PTR PTR, BYVAL AS GSList PTR PTR)
DECLARE FUNCTION pango_attr_iterator_next(BYVAL AS PangoAttrIterator PTR) AS gboolean
DECLARE SUB pango_attr_iterator_range(BYVAL AS PangoAttrIterator PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
TYPE _PangoAttrLanguage
  AS PangoAttribute attr
  AS PangoLanguage PTR value
END TYPE
DECLARE FUNCTION pango_attr_language_new(BYVAL AS PangoLanguage PTR) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_list_new() AS PangoAttrList PTR
DECLARE SUB pango_attr_list_change(BYVAL AS PangoAttrList PTR, BYVAL AS PangoAttribute PTR)
DECLARE FUNCTION pango_attr_list_copy(BYVAL AS PangoAttrList PTR) AS PangoAttrList PTR
DECLARE FUNCTION pango_attr_list_filter(BYVAL AS PangoAttrList PTR, BYVAL AS PangoAttrFilterFunc, BYVAL AS gpointer) AS PangoAttrList PTR
DECLARE FUNCTION pango_attr_list_get_attributes(BYVAL AS PangoAttrList PTR) AS GSList PTR
DECLARE FUNCTION pango_attr_list_get_iterator(BYVAL AS PangoAttrList PTR) AS PangoAttrIterator PTR
DECLARE SUB pango_attr_list_insert(BYVAL AS PangoAttrList PTR, BYVAL AS PangoAttribute PTR)
DECLARE SUB pango_attr_list_insert_before(BYVAL AS PangoAttrList PTR, BYVAL AS PangoAttribute PTR)
DECLARE FUNCTION pango_attr_list_ref(BYVAL AS PangoAttrList PTR) AS PangoAttrList PTR
DECLARE SUB pango_attr_list_splice(BYVAL AS PangoAttrList PTR, BYVAL AS PangoAttrList PTR, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB pango_attr_list_unref(BYVAL AS PangoAttrList PTR)
DECLARE SUB pango_attr_list_update(BYVAL AS PangoAttrList PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
TYPE _PangoAttrShape
  AS PangoAttribute attr
  AS PangoRectangle ink_rect
  AS PangoRectangle logical_rect
  AS gpointer data
  AS PangoAttrDataCopyFunc copy_func
  AS GDestroyNotify destroy_func
END TYPE
DECLARE FUNCTION pango_attr_shape_new(BYVAL AS const PangoRectangle PTR, BYVAL AS const PangoRectangle PTR) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_shape_new_with_data(BYVAL AS const PangoRectangle PTR, BYVAL AS const PangoRectangle PTR, BYVAL AS gpointer, BYVAL AS PangoAttrDataCopyFunc, BYVAL AS GDestroyNotify) AS PangoAttribute PTR
TYPE _PangoAttrSize
  AS PangoAttribute attr
  AS gint /'int'/ size
  AS guint absolute : 1
END TYPE
DECLARE FUNCTION pango_attr_size_new(BYVAL AS gint /'int'/) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_size_new_absolute(BYVAL AS gint /'int'/) AS PangoAttribute PTR
TYPE _PangoAttrString
  AS PangoAttribute attr
  AS char PTR value
END TYPE
DECLARE FUNCTION pango_attr_type_get_type() AS GType
#DEFINE PANGO_TYPE_ATTR_TYPE (pango_attr_type_get_type())
DECLARE FUNCTION pango_bidi_type_get_type() AS GType
#DEFINE PANGO_TYPE_BIDI_TYPE (pango_bidi_type_get_type())
DECLARE FUNCTION pango_context_get_type() AS GType
#DEFINE PANGO_TYPE_CONTEXT (pango_context_get_type())
#DEFINE PANGO_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_CONTEXT, PangoContext))
#DEFINE PANGO_CONTEXT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_CONTEXT, PangoContextClass))
#DEFINE PANGO_IS_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_CONTEXT))
#DEFINE PANGO_IS_CLASS_CONTEXT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_CONTEXT))
#DEFINE PANGO_CONTEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_CONTEXT, PangoContextClass))
DECLARE FUNCTION pango_context_new() AS PangoContext PTR
DECLARE SUB pango_context_changed(BYVAL AS PangoContext PTR)
DECLARE FUNCTION pango_context_get_base_dir(BYVAL AS PangoContext PTR) AS PangoDirection
DECLARE FUNCTION pango_context_get_base_gravity(BYVAL AS PangoContext PTR) AS PangoGravity
DECLARE FUNCTION pango_context_get_font_description(BYVAL AS PangoContext PTR) AS PangoFontDescription PTR
DECLARE FUNCTION pango_context_get_font_map(BYVAL AS PangoContext PTR) AS PangoFontMap PTR
DECLARE FUNCTION pango_context_get_gravity(BYVAL AS PangoContext PTR) AS PangoGravity
DECLARE FUNCTION pango_context_get_gravity_hint(BYVAL AS PangoContext PTR) AS PangoGravityHint
DECLARE FUNCTION pango_context_get_language(BYVAL AS PangoContext PTR) AS PangoLanguage PTR
DECLARE FUNCTION pango_context_get_matrix(BYVAL AS PangoContext PTR) AS const PangoMatrix PTR
DECLARE FUNCTION pango_context_get_metrics(BYVAL AS PangoContext PTR, BYVAL AS const PangoFontDescription PTR, BYVAL AS PangoLanguage PTR) AS PangoFontMetrics PTR
DECLARE FUNCTION pango_context_get_round_glyph_positions(BYVAL AS PangoContext PTR) AS gboolean
DECLARE FUNCTION pango_context_get_serial(BYVAL AS PangoContext PTR) AS guint
DECLARE SUB pango_context_list_families(BYVAL AS PangoContext PTR, BYVAL AS PangoFontFamily PTR PTR PTR, BYVAL AS gint /'int'/ PTR)
DECLARE FUNCTION pango_context_load_font(BYVAL AS PangoContext PTR, BYVAL AS const PangoFontDescription PTR) AS PangoFont PTR
DECLARE FUNCTION pango_context_load_fontset(BYVAL AS PangoContext PTR, BYVAL AS const PangoFontDescription PTR, BYVAL AS PangoLanguage PTR) AS PangoFontset PTR
DECLARE SUB pango_context_set_base_dir(BYVAL AS PangoContext PTR, BYVAL AS PangoDirection)
DECLARE SUB pango_context_set_base_gravity(BYVAL AS PangoContext PTR, BYVAL AS PangoGravity)
DECLARE SUB pango_context_set_font_description(BYVAL AS PangoContext PTR, BYVAL AS const PangoFontDescription PTR)
DECLARE SUB pango_context_set_font_map(BYVAL AS PangoContext PTR, BYVAL AS PangoFontMap PTR)
DECLARE SUB pango_context_set_gravity_hint(BYVAL AS PangoContext PTR, BYVAL AS PangoGravityHint)
DECLARE SUB pango_context_set_language(BYVAL AS PangoContext PTR, BYVAL AS PangoLanguage PTR)
DECLARE SUB pango_context_set_matrix(BYVAL AS PangoContext PTR, BYVAL AS const PangoMatrix PTR)
DECLARE SUB pango_context_set_round_glyph_positions(BYVAL AS PangoContext PTR, BYVAL AS gboolean)
DECLARE FUNCTION pango_coverage_get_type() AS GType
#DEFINE PANGO_TYPE_COVERAGE (pango_coverage_get_type())
#DEFINE PANGO_COVERAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_COVERAGE, PangoCoverage))
#DEFINE PANGO_COVERAGE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_COVERAGE, Pango))
#DEFINE PANGO_IS_COVERAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_COVERAGE))
#DEFINE PANGO_IS_CLASS_COVERAGE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_COVERAGE))
#DEFINE PANGO_COVERAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_COVERAGE, Pango))
DECLARE FUNCTION pango_coverage_new() AS PangoCoverage PTR
DECLARE FUNCTION pango_coverage_from_bytes(BYVAL AS guchar PTR, BYVAL AS gint /'int'/) AS PangoCoverage PTR
DECLARE FUNCTION pango_coverage_copy(BYVAL AS PangoCoverage PTR) AS PangoCoverage PTR
DECLARE FUNCTION pango_coverage_get(BYVAL AS PangoCoverage PTR, BYVAL AS gint /'int'/) AS PangoCoverageLevel
DECLARE SUB pango_coverage_max(BYVAL AS PangoCoverage PTR, BYVAL AS PangoCoverage PTR)
DECLARE FUNCTION pango_coverage_ref(BYVAL AS PangoCoverage PTR) AS PangoCoverage PTR
DECLARE SUB pango_coverage_set(BYVAL AS PangoCoverage PTR, BYVAL AS gint /'int'/, BYVAL AS PangoCoverageLevel)
DECLARE SUB pango_coverage_to_bytes(BYVAL AS PangoCoverage PTR, BYVAL AS guchar PTR PTR, BYVAL AS gint /'int'/ PTR)
DECLARE SUB pango_coverage_unref(BYVAL AS PangoCoverage PTR)
TYPE _PangoEngine
  AS GObject parent_instance
END TYPE
DECLARE FUNCTION pango_coverage_level_get_type() AS GType
#DEFINE PANGO_TYPE_COVERAGE_LEVEL (pango_coverage_level_get_type())
DECLARE FUNCTION pango_direction_get_type() AS GType
#DEFINE PANGO_TYPE_DIRECTION (pango_direction_get_type())
DECLARE FUNCTION pango_ellipsize_mode_get_type() AS GType
#DEFINE PANGO_TYPE_ELLIPSIZE_MODE (pango_ellipsize_mode_get_type())
DECLARE FUNCTION pango_engine_get_type() AS GType
#DEFINE PANGO_TYPE_ENGINE (pango_engine_get_type())
#DEFINE PANGO_ENGINE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_ENGINE, PangoEngine))
#DEFINE PANGO_ENGINE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_ENGINE, PangoEngineClass))
#DEFINE PANGO_IS_ENGINE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_ENGINE))
#DEFINE PANGO_IS_CLASS_ENGINE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_ENGINE))
#DEFINE PANGO_ENGINE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_ENGINE, PangoEngineClass))
TYPE _PangoEngineClass
  AS GObjectClass parent_class
END TYPE
TYPE _PangoEngineInfo
  AS const gchar PTR id
  AS const gchar PTR engine_type
  AS const gchar PTR render_type
  AS PangoEngineScriptInfo PTR scripts
  AS gint n_scripts
END TYPE
TYPE _PangoEngineLang
  AS PangoEngine parent_instance
END TYPE
DECLARE FUNCTION pango_engine_lang_get_type() AS GType
#DEFINE PANGO_TYPE_ENGINE_LANG (pango_engine_lang_get_type())
#DEFINE PANGO_ENGINE_LANG(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_ENGINE_LANG, PangoEngineLang))
#DEFINE PANGO_ENGINE_LANG_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_ENGINE_LANG, PangoEngineLangClass))
#DEFINE PANGO_IS_ENGINE_LANG(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_ENGINE_LANG))
#DEFINE PANGO_IS_CLASS_ENGINE_LANG(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_ENGINE_LANG))
#DEFINE PANGO_ENGINE_LANG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_ENGINE_LANG, PangoEngineLangClass))
TYPE _PangoEngineLangClass
  AS PangoEngineClass parent_class
  script_break AS SUB CDECL(BYVAL AS PangoEngineLang PTR, BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS PangoAnalysis PTR, BYVAL AS PangoLogAttr PTR, BYVAL AS gint /'int'/)
END TYPE
TYPE _PangoEngineScriptInfo
  AS PangoScript script
  AS const gchar PTR langs
END TYPE
TYPE _PangoEngineShape
  AS PangoEngine parent_instance
END TYPE
DECLARE FUNCTION pango_engine_shape_get_type() AS GType
#DEFINE PANGO_TYPE_ENGINE_SHAPE (pango_engine_shape_get_type())
#DEFINE PANGO_ENGINE_SHAPE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_ENGINE_SHAPE, PangoEngineShape))
#DEFINE PANGO_ENGINE_SHAPE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_ENGINE_SHAPE, PangoEngineShapeClass))
#DEFINE PANGO_IS_ENGINE_SHAPE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_ENGINE_SHAPE))
#DEFINE PANGO_IS_CLASS_ENGINE_SHAPE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_ENGINE_SHAPE))
#DEFINE PANGO_ENGINE_SHAPE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_ENGINE_SHAPE, PangoEngineShapeClass))
TYPE _PangoEngineShapeClass
  AS PangoEngineClass parent_class
  script_shape AS SUB CDECL(BYVAL AS PangoEngineShape PTR, BYVAL AS PangoFont PTR, BYVAL AS const char PTR, BYVAL AS guint32 /'unsigned int'/, BYVAL AS const PangoAnalysis PTR, BYVAL AS PangoGlyphString PTR, BYVAL AS const char PTR, BYVAL AS guint32 /'unsigned int'/)
  covers AS FUNCTION CDECL(BYVAL AS PangoEngineShape PTR, BYVAL AS PangoFont PTR, BYVAL AS PangoLanguage PTR, BYVAL AS gunichar /'?'/) AS PangoCoverageLevel
END TYPE
TYPE _PangoFont
  AS GObject parent_instance
END TYPE
DECLARE FUNCTION pango_font_get_type() AS GType
#DEFINE PANGO_TYPE_FONT (pango_font_get_type())
#DEFINE PANGO_FONT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_FONT, PangoFont))
#DEFINE PANGO_FONT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_FONT, PangoFontClass))
#DEFINE PANGO_IS_FONT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_FONT))
#DEFINE PANGO_IS_CLASS_FONT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_FONT))
#DEFINE PANGO_FONT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_FONT, PangoFontClass))
DECLARE SUB pango_font_descriptions_free(BYVAL AS PangoFontDescription PTR PTR, BYVAL AS gint /'int'/)
DECLARE FUNCTION pango_font_describe(BYVAL AS PangoFont PTR) AS PangoFontDescription PTR
DECLARE FUNCTION pango_font_describe_with_absolute_size(BYVAL AS PangoFont PTR) AS PangoFontDescription PTR
DECLARE FUNCTION pango_font_find_shaper(BYVAL AS PangoFont PTR, BYVAL AS PangoLanguage PTR, BYVAL AS guint32) AS PangoEngineShape PTR
DECLARE FUNCTION pango_font_get_coverage(BYVAL AS PangoFont PTR, BYVAL AS PangoLanguage PTR) AS PangoCoverage PTR
DECLARE SUB pango_font_get_features(BYVAL AS PangoFont PTR, BYVAL AS any /'hb_feature_t'/ PTR, BYVAL AS guint, BYVAL AS guint PTR)
DECLARE FUNCTION pango_font_get_font_map(BYVAL AS PangoFont PTR) AS PangoFontMap PTR
DECLARE SUB pango_font_get_glyph_extents(BYVAL AS PangoFont PTR, BYVAL AS PangoGlyph, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE FUNCTION pango_font_get_hb_font(BYVAL AS PangoFont PTR) AS any /'hb_font_t'/ PTR
DECLARE FUNCTION pango_font_get_metrics(BYVAL AS PangoFont PTR, BYVAL AS PangoLanguage PTR) AS PangoFontMetrics PTR
DECLARE FUNCTION pango_font_has_char(BYVAL AS PangoFont PTR, BYVAL AS gunichar /'?'/) AS gboolean
TYPE _PangoFontClass
  AS GObjectClass parent_class
  describe AS FUNCTION CDECL(BYVAL AS PangoFont PTR) AS PangoFontDescription PTR
  get_coverage AS FUNCTION CDECL(BYVAL AS PangoFont PTR, BYVAL AS PangoLanguage PTR) AS PangoCoverage PTR
  get_glyph_extents AS SUB CDECL(BYVAL AS PangoFont PTR, BYVAL AS PangoGlyph, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
  get_metrics AS FUNCTION CDECL(BYVAL AS PangoFont PTR, BYVAL AS PangoLanguage PTR) AS PangoFontMetrics PTR
  get_font_map AS FUNCTION CDECL(BYVAL AS PangoFont PTR) AS PangoFontMap PTR
  describe_absolute AS FUNCTION CDECL(BYVAL AS PangoFont PTR) AS PangoFontDescription PTR
  get_features AS SUB CDECL(BYVAL AS PangoFont PTR, BYVAL AS any /'hb_feature_t'/ PTR, BYVAL AS guint, BYVAL AS guint PTR)
  create_hb_font AS FUNCTION CDECL(BYVAL AS PangoFont PTR) AS any /'hb_font_t'/ PTR
END TYPE
DECLARE FUNCTION pango_font_description_new() AS PangoFontDescription PTR
DECLARE FUNCTION pango_font_description_better_match(BYVAL AS const PangoFontDescription PTR, BYVAL AS const PangoFontDescription PTR, BYVAL AS const PangoFontDescription PTR) AS gboolean
DECLARE FUNCTION pango_font_description_copy(BYVAL AS const PangoFontDescription PTR) AS PangoFontDescription PTR
DECLARE FUNCTION pango_font_description_copy_static(BYVAL AS const PangoFontDescription PTR) AS PangoFontDescription PTR
DECLARE FUNCTION pango_font_description_equal(BYVAL AS const PangoFontDescription PTR, BYVAL AS const PangoFontDescription PTR) AS gboolean
DECLARE SUB pango_font_description_free(BYVAL AS PangoFontDescription PTR)
DECLARE FUNCTION pango_font_description_get_family(BYVAL AS const PangoFontDescription PTR) AS const char PTR
DECLARE FUNCTION pango_font_description_get_gravity(BYVAL AS const PangoFontDescription PTR) AS PangoGravity
DECLARE FUNCTION pango_font_description_get_set_fields(BYVAL AS const PangoFontDescription PTR) AS PangoFontMask
DECLARE FUNCTION pango_font_description_get_size(BYVAL AS const PangoFontDescription PTR) AS gint
DECLARE FUNCTION pango_font_description_get_size_is_absolute(BYVAL AS const PangoFontDescription PTR) AS gboolean
DECLARE FUNCTION pango_font_description_get_stretch(BYVAL AS const PangoFontDescription PTR) AS PangoStretch
DECLARE FUNCTION pango_font_description_get_style(BYVAL AS const PangoFontDescription PTR) AS PangoStyle
DECLARE FUNCTION pango_font_description_get_variant(BYVAL AS const PangoFontDescription PTR) AS PangoVariant
DECLARE FUNCTION pango_font_description_get_variations(BYVAL AS const PangoFontDescription PTR) AS const char PTR
DECLARE FUNCTION pango_font_description_get_weight(BYVAL AS const PangoFontDescription PTR) AS PangoWeight
DECLARE FUNCTION pango_font_description_hash(BYVAL AS const PangoFontDescription PTR) AS guint
DECLARE SUB pango_font_description_merge(BYVAL AS PangoFontDescription PTR, BYVAL AS const PangoFontDescription PTR, BYVAL AS gboolean)
DECLARE SUB pango_font_description_merge_static(BYVAL AS PangoFontDescription PTR, BYVAL AS const PangoFontDescription PTR, BYVAL AS gboolean)
DECLARE SUB pango_font_description_set_absolute_size(BYVAL AS PangoFontDescription PTR, BYVAL AS double)
DECLARE SUB pango_font_description_set_family(BYVAL AS PangoFontDescription PTR, BYVAL AS const char PTR)
DECLARE SUB pango_font_description_set_family_static(BYVAL AS PangoFontDescription PTR, BYVAL AS const char PTR)
DECLARE SUB pango_font_description_set_gravity(BYVAL AS PangoFontDescription PTR, BYVAL AS PangoGravity)
DECLARE SUB pango_font_description_set_size(BYVAL AS PangoFontDescription PTR, BYVAL AS gint)
DECLARE SUB pango_font_description_set_stretch(BYVAL AS PangoFontDescription PTR, BYVAL AS PangoStretch)
DECLARE SUB pango_font_description_set_style(BYVAL AS PangoFontDescription PTR, BYVAL AS PangoStyle)
DECLARE SUB pango_font_description_set_variant(BYVAL AS PangoFontDescription PTR, BYVAL AS PangoVariant)
DECLARE SUB pango_font_description_set_variations(BYVAL AS PangoFontDescription PTR, BYVAL AS const char PTR)
DECLARE SUB pango_font_description_set_variations_static(BYVAL AS PangoFontDescription PTR, BYVAL AS const char PTR)
DECLARE SUB pango_font_description_set_weight(BYVAL AS PangoFontDescription PTR, BYVAL AS PangoWeight)
DECLARE FUNCTION pango_font_description_to_filename(BYVAL AS const PangoFontDescription PTR) AS char PTR
DECLARE FUNCTION pango_font_description_to_string(BYVAL AS const PangoFontDescription PTR) AS char PTR
DECLARE SUB pango_font_description_unset_fields(BYVAL AS PangoFontDescription PTR, BYVAL AS PangoFontMask)
DECLARE FUNCTION pango_font_description_from_string(BYVAL AS const char PTR) AS PangoFontDescription PTR
TYPE _PangoFontFace
  AS GObject parent_instance
END TYPE
DECLARE FUNCTION pango_font_face_get_type() AS GType
#DEFINE PANGO_TYPE_FONT_FACE (pango_font_face_get_type())
#DEFINE PANGO_FONT_FACE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_FONT_FACE, PangoFontFace))
#DEFINE PANGO_FONT_FACE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_FONT_FACE, PangoFontFaceClass))
#DEFINE PANGO_IS_FONT_FACE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_FONT_FACE))
#DEFINE PANGO_IS_CLASS_FONT_FACE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_FONT_FACE))
#DEFINE PANGO_FONT_FACE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_FONT_FACE, PangoFontFaceClass))
DECLARE FUNCTION pango_font_face_describe(BYVAL AS PangoFontFace PTR) AS PangoFontDescription PTR
DECLARE FUNCTION pango_font_face_get_face_name(BYVAL AS PangoFontFace PTR) AS const char PTR
DECLARE FUNCTION pango_font_face_is_synthesized(BYVAL AS PangoFontFace PTR) AS gboolean
DECLARE SUB pango_font_face_list_sizes(BYVAL AS PangoFontFace PTR, BYVAL AS gint /'int'/ PTR PTR, BYVAL AS gint /'int'/ PTR)
TYPE _PangoFontFaceClass
  AS GObjectClass parent_class
  get_face_name AS FUNCTION CDECL(BYVAL AS PangoFontFace PTR) AS const char PTR
  describe AS FUNCTION CDECL(BYVAL AS PangoFontFace PTR) AS PangoFontDescription PTR
  list_sizes AS SUB CDECL(BYVAL AS PangoFontFace PTR, BYVAL AS gint /'int'/ PTR PTR, BYVAL AS gint /'int'/ PTR)
  is_synthesized AS FUNCTION CDECL(BYVAL AS PangoFontFace PTR) AS gboolean
  _pango_reserved3 AS SUB CDECL()
  _pango_reserved4 AS SUB CDECL()
END TYPE
TYPE _PangoFontFamily
  AS GObject parent_instance
END TYPE
DECLARE FUNCTION pango_font_family_get_type() AS GType
#DEFINE PANGO_TYPE_FONT_FAMILY (pango_font_family_get_type())
#DEFINE PANGO_FONT_FAMILY(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_FONT_FAMILY, PangoFontFamily))
#DEFINE PANGO_FONT_FAMILY_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_FONT_FAMILY, PangoFontFamilyClass))
#DEFINE PANGO_IS_FONT_FAMILY(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_FONT_FAMILY))
#DEFINE PANGO_IS_CLASS_FONT_FAMILY(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_FONT_FAMILY))
#DEFINE PANGO_FONT_FAMILY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_FONT_FAMILY, PangoFontFamilyClass))
DECLARE FUNCTION pango_font_family_get_name(BYVAL AS PangoFontFamily PTR) AS const char PTR
DECLARE FUNCTION pango_font_family_is_monospace(BYVAL AS PangoFontFamily PTR) AS gboolean
DECLARE FUNCTION pango_font_family_is_variable(BYVAL AS PangoFontFamily PTR) AS gboolean
DECLARE SUB pango_font_family_list_faces(BYVAL AS PangoFontFamily PTR, BYVAL AS PangoFontFace PTR PTR PTR, BYVAL AS gint /'int'/ PTR)
TYPE _PangoFontFamilyClass
  AS GObjectClass parent_class
  list_faces AS SUB CDECL(BYVAL AS PangoFontFamily PTR, BYVAL AS PangoFontFace PTR PTR PTR, BYVAL AS gint /'int'/ PTR)
  get_name AS FUNCTION CDECL(BYVAL AS PangoFontFamily PTR) AS const char PTR
  is_monospace AS FUNCTION CDECL(BYVAL AS PangoFontFamily PTR) AS gboolean
  is_variable AS FUNCTION CDECL(BYVAL AS PangoFontFamily PTR) AS gboolean
  _pango_reserved2 AS SUB CDECL()
  _pango_reserved3 AS SUB CDECL()
END TYPE
TYPE _PangoFontMap
  AS GObject parent_instance
END TYPE
DECLARE FUNCTION pango_font_map_get_type() AS GType
#DEFINE PANGO_TYPE_FONT_MAP (pango_font_map_get_type())
#DEFINE PANGO_FONT_MAP(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_FONT_MAP, PangoFontMap))
#DEFINE PANGO_FONT_MAP_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_FONT_MAP, PangoFontMapClass))
#DEFINE PANGO_IS_FONT_MAP(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_FONT_MAP))
#DEFINE PANGO_IS_CLASS_FONT_MAP(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_FONT_MAP))
#DEFINE PANGO_FONT_MAP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_FONT_MAP, PangoFontMapClass))
DECLARE SUB pango_font_map_changed(BYVAL AS PangoFontMap PTR)
DECLARE FUNCTION pango_font_map_create_context(BYVAL AS PangoFontMap PTR) AS PangoContext PTR
DECLARE FUNCTION pango_font_map_get_serial(BYVAL AS PangoFontMap PTR) AS guint
DECLARE SUB pango_font_map_list_families(BYVAL AS PangoFontMap PTR, BYVAL AS PangoFontFamily PTR PTR PTR, BYVAL AS gint /'int'/ PTR)
DECLARE FUNCTION pango_font_map_load_font(BYVAL AS PangoFontMap PTR, BYVAL AS PangoContext PTR, BYVAL AS const PangoFontDescription PTR) AS PangoFont PTR
DECLARE FUNCTION pango_font_map_load_fontset(BYVAL AS PangoFontMap PTR, BYVAL AS PangoContext PTR, BYVAL AS const PangoFontDescription PTR, BYVAL AS PangoLanguage PTR) AS PangoFontset PTR
TYPE _PangoFontMapClass
  AS GObjectClass parent_class
  load_font AS FUNCTION CDECL(BYVAL AS PangoFontMap PTR, BYVAL AS PangoContext PTR, BYVAL AS const PangoFontDescription PTR) AS PangoFont PTR
  list_families AS SUB CDECL(BYVAL AS PangoFontMap PTR, BYVAL AS PangoFontFamily PTR PTR PTR, BYVAL AS gint /'int'/ PTR)
  load_fontset AS FUNCTION CDECL(BYVAL AS PangoFontMap PTR, BYVAL AS PangoContext PTR, BYVAL AS const PangoFontDescription PTR, BYVAL AS PangoLanguage PTR) AS PangoFontset PTR
  AS const char PTR shape_engine_type
  get_serial AS FUNCTION CDECL(BYVAL AS PangoFontMap PTR) AS guint
  changed AS SUB CDECL(BYVAL AS PangoFontMap PTR)
  _pango_reserved1 AS SUB CDECL()
  _pango_reserved2 AS SUB CDECL()
END TYPE
TYPE _PangoFontMetrics
  AS guint ref_count
  AS gint /'int'/ ascent
  AS gint /'int'/ descent
  AS gint /'int'/ height
  AS gint /'int'/ approximate_char_width
  AS gint /'int'/ approximate_digit_width
  AS gint /'int'/ underline_position
  AS gint /'int'/ underline_thickness
  AS gint /'int'/ strikethrough_position
  AS gint /'int'/ strikethrough_thickness
END TYPE
DECLARE FUNCTION pango_font_metrics_get_approximate_char_width(BYVAL AS PangoFontMetrics PTR) AS gint /'int'/
DECLARE FUNCTION pango_font_metrics_get_approximate_digit_width(BYVAL AS PangoFontMetrics PTR) AS gint /'int'/
DECLARE FUNCTION pango_font_metrics_get_ascent(BYVAL AS PangoFontMetrics PTR) AS gint /'int'/
DECLARE FUNCTION pango_font_metrics_get_descent(BYVAL AS PangoFontMetrics PTR) AS gint /'int'/
DECLARE FUNCTION pango_font_metrics_get_height(BYVAL AS PangoFontMetrics PTR) AS gint /'int'/
DECLARE FUNCTION pango_font_metrics_get_strikethrough_position(BYVAL AS PangoFontMetrics PTR) AS gint /'int'/
DECLARE FUNCTION pango_font_metrics_get_strikethrough_thickness(BYVAL AS PangoFontMetrics PTR) AS gint /'int'/
DECLARE FUNCTION pango_font_metrics_get_underline_position(BYVAL AS PangoFontMetrics PTR) AS gint /'int'/
DECLARE FUNCTION pango_font_metrics_get_underline_thickness(BYVAL AS PangoFontMetrics PTR) AS gint /'int'/
DECLARE FUNCTION pango_font_metrics_ref(BYVAL AS PangoFontMetrics PTR) AS PangoFontMetrics PTR
DECLARE SUB pango_font_metrics_unref(BYVAL AS PangoFontMetrics PTR)
TYPE _PangoFontset
  AS GObject parent_instance
END TYPE
DECLARE FUNCTION pango_fontset_get_type() AS GType
#DEFINE PANGO_TYPE_FONTSET (pango_fontset_get_type())
#DEFINE PANGO_FONTSET(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_FONTSET, PangoFontset))
#DEFINE PANGO_FONTSET_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_FONTSET, PangoFontsetClass))
#DEFINE PANGO_IS_FONTSET(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_FONTSET))
#DEFINE PANGO_IS_CLASS_FONTSET(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_FONTSET))
#DEFINE PANGO_FONTSET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_FONTSET, PangoFontsetClass))
DECLARE SUB pango_fontset_foreach(BYVAL AS PangoFontset PTR, BYVAL AS PangoFontsetForeachFunc, BYVAL AS gpointer)
DECLARE FUNCTION pango_fontset_get_font(BYVAL AS PangoFontset PTR, BYVAL AS guint) AS PangoFont PTR
DECLARE FUNCTION pango_fontset_get_metrics(BYVAL AS PangoFontset PTR) AS PangoFontMetrics PTR
TYPE _PangoFontsetClass
  AS GObjectClass parent_class
  get_font AS FUNCTION CDECL(BYVAL AS PangoFontset PTR, BYVAL AS guint) AS PangoFont PTR
  get_metrics AS FUNCTION CDECL(BYVAL AS PangoFontset PTR) AS PangoFontMetrics PTR
  get_language AS FUNCTION CDECL(BYVAL AS PangoFontset PTR) AS PangoLanguage PTR
  foreach AS SUB CDECL(BYVAL AS PangoFontset PTR, BYVAL AS PangoFontsetForeachFunc, BYVAL AS gpointer)
  _pango_reserved1 AS SUB CDECL()
  _pango_reserved2 AS SUB CDECL()
  _pango_reserved3 AS SUB CDECL()
  _pango_reserved4 AS SUB CDECL()
END TYPE
DECLARE FUNCTION pango_fontset_simple_get_type() AS GType
#DEFINE PANGO_TYPE_FONTSET_SIMPLE (pango_fontset_simple_get_type())
#DEFINE PANGO_FONTSET_SIMPLE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_FONTSET_SIMPLE, PangoFontsetSimple))
#DEFINE PANGO_FONTSET_SIMPLE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_FONTSET_SIMPLE, PangoFontsetSimpleClass))
#DEFINE PANGO_IS_FONTSET_SIMPLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_FONTSET_SIMPLE))
#DEFINE PANGO_IS_CLASS_FONTSET_SIMPLE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_FONTSET_SIMPLE))
#DEFINE PANGO_FONTSET_SIMPLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_FONTSET_SIMPLE, PangoFontsetSimpleClass))
DECLARE FUNCTION pango_fontset_simple_new(BYVAL AS PangoLanguage PTR) AS PangoFontsetSimple PTR
DECLARE SUB pango_fontset_simple_append(BYVAL AS PangoFontsetSimple PTR, BYVAL AS PangoFont PTR)
DECLARE FUNCTION pango_fontset_simple_size(BYVAL AS PangoFontsetSimple PTR) AS gint /'int'/
TYPE _PangoGlyphGeometry
  AS PangoGlyphUnit width
  AS PangoGlyphUnit x_offset
  AS PangoGlyphUnit y_offset
END TYPE
TYPE _PangoGlyphInfo
  AS PangoGlyph glyph
  AS PangoGlyphGeometry geometry
  AS PangoGlyphVisAttr attr
END TYPE
TYPE _PangoGlyphItem
  AS PangoItem PTR item
  AS PangoGlyphString PTR glyphs
END TYPE
DECLARE FUNCTION pango_glyph_item_apply_attrs(BYVAL AS PangoGlyphItem PTR, BYVAL AS const char PTR, BYVAL AS PangoAttrList PTR) AS GSList PTR
DECLARE FUNCTION pango_glyph_item_copy(BYVAL AS PangoGlyphItem PTR) AS PangoGlyphItem PTR
DECLARE SUB pango_glyph_item_free(BYVAL AS PangoGlyphItem PTR)
DECLARE SUB pango_glyph_item_get_logical_widths(BYVAL AS PangoGlyphItem PTR, BYVAL AS const char PTR, BYVAL AS gint /'int'/ PTR)
DECLARE SUB pango_glyph_item_letter_space(BYVAL AS PangoGlyphItem PTR, BYVAL AS const char PTR, BYVAL AS PangoLogAttr PTR, BYVAL AS gint /'int'/)
DECLARE FUNCTION pango_glyph_item_split(BYVAL AS PangoGlyphItem PTR, BYVAL AS const char PTR, BYVAL AS gint /'int'/) AS PangoGlyphItem PTR
TYPE _PangoGlyphItemIter
  AS PangoGlyphItem PTR glyph_item
  AS const gchar PTR text
  AS gint /'int'/ start_glyph
  AS gint /'int'/ start_index
  AS gint /'int'/ start_char
  AS gint /'int'/ end_glyph
  AS gint /'int'/ end_index
  AS gint /'int'/ end_char
END TYPE
DECLARE FUNCTION pango_glyph_item_iter_copy(BYVAL AS PangoGlyphItemIter PTR) AS PangoGlyphItemIter PTR
DECLARE SUB pango_glyph_item_iter_free(BYVAL AS PangoGlyphItemIter PTR)
DECLARE FUNCTION pango_glyph_item_iter_init_end(BYVAL AS PangoGlyphItemIter PTR, BYVAL AS PangoGlyphItem PTR, BYVAL AS const char PTR) AS gboolean
DECLARE FUNCTION pango_glyph_item_iter_init_start(BYVAL AS PangoGlyphItemIter PTR, BYVAL AS PangoGlyphItem PTR, BYVAL AS const char PTR) AS gboolean
DECLARE FUNCTION pango_glyph_item_iter_next_cluster(BYVAL AS PangoGlyphItemIter PTR) AS gboolean
DECLARE FUNCTION pango_glyph_item_iter_prev_cluster(BYVAL AS PangoGlyphItemIter PTR) AS gboolean
TYPE _PangoGlyphString
  AS gint num_glyphs
  AS PangoGlyphInfo glyphs
  AS gint PTR log_clusters
  AS gint space
END TYPE
DECLARE FUNCTION pango_glyph_string_new() AS PangoGlyphString PTR
DECLARE FUNCTION pango_glyph_string_copy(BYVAL AS PangoGlyphString PTR) AS PangoGlyphString PTR
DECLARE SUB pango_glyph_string_extents(BYVAL AS PangoGlyphString PTR, BYVAL AS PangoFont PTR, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE SUB pango_glyph_string_extents_range(BYVAL AS PangoGlyphString PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS PangoFont PTR, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE SUB pango_glyph_string_free(BYVAL AS PangoGlyphString PTR)
DECLARE SUB pango_glyph_string_get_logical_widths(BYVAL AS PangoGlyphString PTR, BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/ PTR)
DECLARE FUNCTION pango_glyph_string_get_width(BYVAL AS PangoGlyphString PTR) AS gint /'int'/
DECLARE SUB pango_glyph_string_index_to_x(BYVAL AS PangoGlyphString PTR, BYVAL AS char PTR, BYVAL AS gint /'int'/, BYVAL AS PangoAnalysis PTR, BYVAL AS gint /'int'/, BYVAL AS gboolean, BYVAL AS gint /'int'/ PTR)
DECLARE SUB pango_glyph_string_set_size(BYVAL AS PangoGlyphString PTR, BYVAL AS gint)
DECLARE SUB pango_glyph_string_x_to_index(BYVAL AS PangoGlyphString PTR, BYVAL AS char PTR, BYVAL AS gint /'int'/, BYVAL AS PangoAnalysis PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/ PTR, BYVAL AS gint /'int'/ PTR)
TYPE _PangoIncludedModule
  list AS SUB CDECL(BYVAL AS PangoEngineInfo PTR PTR, BYVAL AS gint /'int'/ PTR)
  init AS SUB CDECL(BYVAL AS GTypeModule PTR)
  exit AS SUB CDECL()
  create AS FUNCTION CDECL(BYVAL AS const char PTR) AS PangoEngine PTR
END TYPE
DECLARE FUNCTION pango_gravity_get_type() AS GType
#DEFINE PANGO_TYPE_GRAVITY (pango_gravity_get_type())
DECLARE FUNCTION pango_gravity_hint_get_type() AS GType
#DEFINE PANGO_TYPE_GRAVITY_HINT (pango_gravity_hint_get_type())
TYPE _PangoItem
  AS gint offset
  AS gint length
  AS gint num_chars
  AS PangoAnalysis analysis
END TYPE
DECLARE FUNCTION pango_item_new() AS PangoItem PTR
DECLARE SUB pango_item_apply_attrs(BYVAL AS PangoItem PTR, BYVAL AS PangoAttrIterator PTR)
DECLARE FUNCTION pango_item_copy(BYVAL AS PangoItem PTR) AS PangoItem PTR
DECLARE SUB pango_item_free(BYVAL AS PangoItem PTR)
DECLARE FUNCTION pango_item_split(BYVAL AS PangoItem PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/) AS PangoItem PTR
DECLARE FUNCTION pango_language_get_sample_string(BYVAL AS PangoLanguage PTR) AS const char PTR
DECLARE FUNCTION pango_language_get_scripts(BYVAL AS PangoLanguage PTR, BYVAL AS gint /'int'/ PTR) AS const PangoScript PTR
DECLARE FUNCTION pango_language_includes_script(BYVAL AS PangoLanguage PTR, BYVAL AS PangoScript) AS gboolean
DECLARE FUNCTION pango_language_matches(BYVAL AS PangoLanguage PTR, BYVAL AS const char PTR) AS gboolean
DECLARE FUNCTION pango_language_to_string(BYVAL AS PangoLanguage PTR) AS const char PTR
DECLARE FUNCTION pango_language_from_string(BYVAL AS const char PTR) AS PangoLanguage PTR
DECLARE FUNCTION pango_language_get_default() AS PangoLanguage PTR
DECLARE FUNCTION pango_layout_get_type() AS GType
#DEFINE PANGO_TYPE_LAYOUT (pango_layout_get_type())
#DEFINE PANGO_LAYOUT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_LAYOUT, PangoLayout))
#DEFINE PANGO_LAYOUT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_LAYOUT, PangoLayoutClass))
#DEFINE PANGO_IS_LAYOUT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_LAYOUT))
#DEFINE PANGO_IS_CLASS_LAYOUT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_LAYOUT))
#DEFINE PANGO_LAYOUT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_LAYOUT, PangoLayoutClass))
DECLARE FUNCTION pango_layout_new(BYVAL AS PangoContext PTR) AS PangoLayout PTR
DECLARE SUB pango_layout_context_changed(BYVAL AS PangoLayout PTR)
DECLARE FUNCTION pango_layout_copy(BYVAL AS PangoLayout PTR) AS PangoLayout PTR
DECLARE FUNCTION pango_layout_get_alignment(BYVAL AS PangoLayout PTR) AS PangoAlignment
DECLARE FUNCTION pango_layout_get_attributes(BYVAL AS PangoLayout PTR) AS PangoAttrList PTR
DECLARE FUNCTION pango_layout_get_auto_dir(BYVAL AS PangoLayout PTR) AS gboolean
DECLARE FUNCTION pango_layout_get_baseline(BYVAL AS PangoLayout PTR) AS gint /'int'/
DECLARE FUNCTION pango_layout_get_character_count(BYVAL AS PangoLayout PTR) AS gint
DECLARE FUNCTION pango_layout_get_context(BYVAL AS PangoLayout PTR) AS PangoContext PTR
DECLARE SUB pango_layout_get_cursor_pos(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE FUNCTION pango_layout_get_ellipsize(BYVAL AS PangoLayout PTR) AS PangoEllipsizeMode
DECLARE SUB pango_layout_get_extents(BYVAL AS PangoLayout PTR, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE FUNCTION pango_layout_get_font_description(BYVAL AS PangoLayout PTR) AS const PangoFontDescription PTR
DECLARE FUNCTION pango_layout_get_height(BYVAL AS PangoLayout PTR) AS gint /'int'/
DECLARE FUNCTION pango_layout_get_indent(BYVAL AS PangoLayout PTR) AS gint /'int'/
DECLARE FUNCTION pango_layout_get_iter(BYVAL AS PangoLayout PTR) AS PangoLayoutIter PTR
DECLARE FUNCTION pango_layout_get_justify(BYVAL AS PangoLayout PTR) AS gboolean
DECLARE FUNCTION pango_layout_get_line(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/) AS PangoLayoutLine PTR
DECLARE FUNCTION pango_layout_get_line_count(BYVAL AS PangoLayout PTR) AS gint /'int'/
DECLARE FUNCTION pango_layout_get_line_readonly(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/) AS PangoLayoutLine PTR
DECLARE FUNCTION pango_layout_get_line_spacing(BYVAL AS PangoLayout PTR) AS gfloat /'float'/
DECLARE FUNCTION pango_layout_get_lines(BYVAL AS PangoLayout PTR) AS GSList PTR
DECLARE FUNCTION pango_layout_get_lines_readonly(BYVAL AS PangoLayout PTR) AS GSList PTR
DECLARE SUB pango_layout_get_log_attrs(BYVAL AS PangoLayout PTR, BYVAL AS PangoLogAttr PTR PTR, BYVAL AS gint PTR)
DECLARE FUNCTION pango_layout_get_log_attrs_readonly(BYVAL AS PangoLayout PTR, BYVAL AS gint PTR) AS const PangoLogAttr PTR
DECLARE SUB pango_layout_get_pixel_extents(BYVAL AS PangoLayout PTR, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE SUB pango_layout_get_pixel_size(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/ PTR, BYVAL AS gint /'int'/ PTR)
DECLARE FUNCTION pango_layout_get_serial(BYVAL AS PangoLayout PTR) AS guint
DECLARE FUNCTION pango_layout_get_single_paragraph_mode(BYVAL AS PangoLayout PTR) AS gboolean
DECLARE SUB pango_layout_get_size(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/ PTR, BYVAL AS gint /'int'/ PTR)
DECLARE FUNCTION pango_layout_get_spacing(BYVAL AS PangoLayout PTR) AS gint /'int'/
DECLARE FUNCTION pango_layout_get_tabs(BYVAL AS PangoLayout PTR) AS PangoTabArray PTR
DECLARE FUNCTION pango_layout_get_text(BYVAL AS PangoLayout PTR) AS const char PTR
DECLARE FUNCTION pango_layout_get_unknown_glyphs_count(BYVAL AS PangoLayout PTR) AS gint /'int'/
DECLARE FUNCTION pango_layout_get_width(BYVAL AS PangoLayout PTR) AS gint /'int'/
DECLARE FUNCTION pango_layout_get_wrap(BYVAL AS PangoLayout PTR) AS PangoWrapMode
DECLARE SUB pango_layout_index_to_line_x(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/, BYVAL AS gboolean, BYVAL AS gint /'int'/ PTR, BYVAL AS gint /'int'/ PTR)
DECLARE SUB pango_layout_index_to_pos(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/, BYVAL AS PangoRectangle PTR)
DECLARE FUNCTION pango_layout_is_ellipsized(BYVAL AS PangoLayout PTR) AS gboolean
DECLARE FUNCTION pango_layout_is_wrapped(BYVAL AS PangoLayout PTR) AS gboolean
DECLARE SUB pango_layout_move_cursor_visually(BYVAL AS PangoLayout PTR, BYVAL AS gboolean, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/ PTR, BYVAL AS gint /'int'/ PTR)
DECLARE SUB pango_layout_set_alignment(BYVAL AS PangoLayout PTR, BYVAL AS PangoAlignment)
DECLARE SUB pango_layout_set_attributes(BYVAL AS PangoLayout PTR, BYVAL AS PangoAttrList PTR)
DECLARE SUB pango_layout_set_auto_dir(BYVAL AS PangoLayout PTR, BYVAL AS gboolean)
DECLARE SUB pango_layout_set_ellipsize(BYVAL AS PangoLayout PTR, BYVAL AS PangoEllipsizeMode)
DECLARE SUB pango_layout_set_font_description(BYVAL AS PangoLayout PTR, BYVAL AS const PangoFontDescription PTR)
DECLARE SUB pango_layout_set_height(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/)
DECLARE SUB pango_layout_set_indent(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/)
DECLARE SUB pango_layout_set_justify(BYVAL AS PangoLayout PTR, BYVAL AS gboolean)
DECLARE SUB pango_layout_set_line_spacing(BYVAL AS PangoLayout PTR, BYVAL AS gfloat /'float'/)
DECLARE SUB pango_layout_set_markup(BYVAL AS PangoLayout PTR, BYVAL AS const char PTR, BYVAL AS gint /'int'/)
DECLARE SUB pango_layout_set_markup_with_accel(BYVAL AS PangoLayout PTR, BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS gunichar /'?'/, BYVAL AS gunichar PTR)
DECLARE SUB pango_layout_set_single_paragraph_mode(BYVAL AS PangoLayout PTR, BYVAL AS gboolean)
DECLARE SUB pango_layout_set_spacing(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/)
DECLARE SUB pango_layout_set_tabs(BYVAL AS PangoLayout PTR, BYVAL AS PangoTabArray PTR)
DECLARE SUB pango_layout_set_text(BYVAL AS PangoLayout PTR, BYVAL AS const char PTR, BYVAL AS gint /'int'/)
DECLARE SUB pango_layout_set_width(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/)
DECLARE SUB pango_layout_set_wrap(BYVAL AS PangoLayout PTR, BYVAL AS PangoWrapMode)
DECLARE FUNCTION pango_layout_xy_to_index(BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/ PTR, BYVAL AS gint /'int'/ PTR) AS gboolean
DECLARE FUNCTION pango_layout_iter_at_last_line(BYVAL AS PangoLayoutIter PTR) AS gboolean
DECLARE FUNCTION pango_layout_iter_copy(BYVAL AS PangoLayoutIter PTR) AS PangoLayoutIter PTR
DECLARE SUB pango_layout_iter_free(BYVAL AS PangoLayoutIter PTR)
DECLARE FUNCTION pango_layout_iter_get_baseline(BYVAL AS PangoLayoutIter PTR) AS gint /'int'/
DECLARE SUB pango_layout_iter_get_char_extents(BYVAL AS PangoLayoutIter PTR, BYVAL AS PangoRectangle PTR)
DECLARE SUB pango_layout_iter_get_cluster_extents(BYVAL AS PangoLayoutIter PTR, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE FUNCTION pango_layout_iter_get_index(BYVAL AS PangoLayoutIter PTR) AS gint /'int'/
DECLARE FUNCTION pango_layout_iter_get_layout(BYVAL AS PangoLayoutIter PTR) AS PangoLayout PTR
DECLARE SUB pango_layout_iter_get_layout_extents(BYVAL AS PangoLayoutIter PTR, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE FUNCTION pango_layout_iter_get_line(BYVAL AS PangoLayoutIter PTR) AS PangoLayoutLine PTR
DECLARE SUB pango_layout_iter_get_line_extents(BYVAL AS PangoLayoutIter PTR, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE FUNCTION pango_layout_iter_get_line_readonly(BYVAL AS PangoLayoutIter PTR) AS PangoLayoutLine PTR
DECLARE SUB pango_layout_iter_get_line_yrange(BYVAL AS PangoLayoutIter PTR, BYVAL AS gint /'int'/ PTR, BYVAL AS gint /'int'/ PTR)
DECLARE FUNCTION pango_layout_iter_get_run(BYVAL AS PangoLayoutIter PTR) AS PangoLayoutRun PTR
DECLARE SUB pango_layout_iter_get_run_extents(BYVAL AS PangoLayoutIter PTR, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE FUNCTION pango_layout_iter_get_run_readonly(BYVAL AS PangoLayoutIter PTR) AS PangoLayoutRun PTR
DECLARE FUNCTION pango_layout_iter_next_char(BYVAL AS PangoLayoutIter PTR) AS gboolean
DECLARE FUNCTION pango_layout_iter_next_cluster(BYVAL AS PangoLayoutIter PTR) AS gboolean
DECLARE FUNCTION pango_layout_iter_next_line(BYVAL AS PangoLayoutIter PTR) AS gboolean
DECLARE FUNCTION pango_layout_iter_next_run(BYVAL AS PangoLayoutIter PTR) AS gboolean
TYPE _PangoLayoutLine
  AS PangoLayout PTR layout
  AS gint start_index
  AS gint length
  AS GSList PTR runs
  AS guint is_paragraph_start : 1
  AS guint resolved_dir : 3
END TYPE
DECLARE SUB pango_layout_line_get_extents(BYVAL AS PangoLayoutLine PTR, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE SUB pango_layout_line_get_height(BYVAL AS PangoLayoutLine PTR, BYVAL AS gint /'int'/ PTR)
DECLARE SUB pango_layout_line_get_pixel_extents(BYVAL AS PangoLayoutLine PTR, BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE SUB pango_layout_line_get_x_ranges(BYVAL AS PangoLayoutLine PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/ PTR PTR, BYVAL AS gint /'int'/ PTR)
DECLARE SUB pango_layout_line_index_to_x(BYVAL AS PangoLayoutLine PTR, BYVAL AS gint /'int'/, BYVAL AS gboolean, BYVAL AS gint /'int'/ PTR)
DECLARE FUNCTION pango_layout_line_ref(BYVAL AS PangoLayoutLine PTR) AS PangoLayoutLine PTR
DECLARE SUB pango_layout_line_unref(BYVAL AS PangoLayoutLine PTR)
DECLARE FUNCTION pango_layout_line_x_to_index(BYVAL AS PangoLayoutLine PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/ PTR, BYVAL AS gint /'int'/ PTR) AS gboolean
TYPE _PangoLogAttr
  AS guint is_line_break : 1
  AS guint is_mandatory_break : 1
  AS guint is_char_break : 1
  AS guint is_white : 1
  AS guint is_cursor_position : 1
  AS guint is_word_start : 1
  AS guint is_word_end : 1
  AS guint is_sentence_boundary : 1
  AS guint is_sentence_start : 1
  AS guint is_sentence_end : 1
  AS guint backspace_deletes_character : 1
  AS guint is_expandable_space : 1
  AS guint is_word_boundary : 1
END TYPE
DECLARE FUNCTION pango_map_get_engine(BYVAL AS PangoMap PTR, BYVAL AS PangoScript) AS PangoEngine PTR
DECLARE SUB pango_map_get_engines(BYVAL AS PangoMap PTR, BYVAL AS PangoScript, BYVAL AS GSList PTR PTR, BYVAL AS GSList PTR PTR)
TYPE _PangoMatrix
  AS double xx
  AS double xy
  AS double yx
  AS double yy
  AS double x0
  AS double y0
END TYPE
DECLARE SUB pango_matrix_concat(BYVAL AS PangoMatrix PTR, BYVAL AS const PangoMatrix PTR)
DECLARE FUNCTION pango_matrix_copy(BYVAL AS const PangoMatrix PTR) AS PangoMatrix PTR
DECLARE SUB pango_matrix_free(BYVAL AS PangoMatrix PTR)
DECLARE FUNCTION pango_matrix_get_font_scale_factor(BYVAL AS const PangoMatrix PTR) AS double
DECLARE SUB pango_matrix_get_font_scale_factors(BYVAL AS const PangoMatrix PTR, BYVAL AS double PTR, BYVAL AS double PTR)
DECLARE SUB pango_matrix_rotate(BYVAL AS PangoMatrix PTR, BYVAL AS double)
DECLARE SUB pango_matrix_scale(BYVAL AS PangoMatrix PTR, BYVAL AS double, BYVAL AS double)
DECLARE SUB pango_matrix_transform_distance(BYVAL AS const PangoMatrix PTR, BYVAL AS double PTR, BYVAL AS double PTR)
DECLARE SUB pango_matrix_transform_pixel_rectangle(BYVAL AS const PangoMatrix PTR, BYVAL AS PangoRectangle PTR)
DECLARE SUB pango_matrix_transform_point(BYVAL AS const PangoMatrix PTR, BYVAL AS double PTR, BYVAL AS double PTR)
DECLARE SUB pango_matrix_transform_rectangle(BYVAL AS const PangoMatrix PTR, BYVAL AS PangoRectangle PTR)
DECLARE SUB pango_matrix_translate(BYVAL AS PangoMatrix PTR, BYVAL AS double, BYVAL AS double)
TYPE _PangoRenderer
  AS GObject parent_instance
  AS PangoUnderline underline
  AS gboolean strikethrough
  AS gint /'int'/ active_count
  AS PangoMatrix PTR matrix
  AS PangoRendererPrivate PTR priv
END TYPE
DECLARE FUNCTION pango_render_part_get_type() AS GType
#DEFINE PANGO_TYPE_RENDER_PART (pango_render_part_get_type())
DECLARE FUNCTION pango_renderer_get_type() AS GType
#DEFINE PANGO_TYPE_RENDERER (pango_renderer_get_type())
#DEFINE PANGO_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), PANGO_TYPE_RENDERER, PangoRenderer))
#DEFINE PANGO_RENDERER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), PANGO_TYPE_RENDERER, PangoRendererClass))
#DEFINE PANGO_IS_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), PANGO_TYPE_RENDERER))
#DEFINE PANGO_IS_CLASS_RENDERER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), PANGO_TYPE_RENDERER))
#DEFINE PANGO_RENDERER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), PANGO_TYPE_RENDERER, PangoRendererClass))
DECLARE SUB pango_renderer_activate(BYVAL AS PangoRenderer PTR)
DECLARE SUB pango_renderer_deactivate(BYVAL AS PangoRenderer PTR)
DECLARE SUB pango_renderer_draw_error_underline(BYVAL AS PangoRenderer PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
DECLARE SUB pango_renderer_draw_glyph(BYVAL AS PangoRenderer PTR, BYVAL AS PangoFont PTR, BYVAL AS PangoGlyph, BYVAL AS double, BYVAL AS double)
DECLARE SUB pango_renderer_draw_glyph_item(BYVAL AS PangoRenderer PTR, BYVAL AS const char PTR, BYVAL AS PangoGlyphItem PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
DECLARE SUB pango_renderer_draw_glyphs(BYVAL AS PangoRenderer PTR, BYVAL AS PangoFont PTR, BYVAL AS PangoGlyphString PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
DECLARE SUB pango_renderer_draw_layout(BYVAL AS PangoRenderer PTR, BYVAL AS PangoLayout PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
DECLARE SUB pango_renderer_draw_layout_line(BYVAL AS PangoRenderer PTR, BYVAL AS PangoLayoutLine PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
DECLARE SUB pango_renderer_draw_rectangle(BYVAL AS PangoRenderer PTR, BYVAL AS PangoRenderPart, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
DECLARE SUB pango_renderer_draw_trapezoid(BYVAL AS PangoRenderer PTR, BYVAL AS PangoRenderPart, BYVAL AS double, BYVAL AS double, BYVAL AS double, BYVAL AS double, BYVAL AS double, BYVAL AS double)
DECLARE FUNCTION pango_renderer_get_alpha(BYVAL AS PangoRenderer PTR, BYVAL AS PangoRenderPart) AS guint16
DECLARE FUNCTION pango_renderer_get_color(BYVAL AS PangoRenderer PTR, BYVAL AS PangoRenderPart) AS PangoColor PTR
DECLARE FUNCTION pango_renderer_get_layout(BYVAL AS PangoRenderer PTR) AS PangoLayout PTR
DECLARE FUNCTION pango_renderer_get_layout_line(BYVAL AS PangoRenderer PTR) AS PangoLayoutLine PTR
DECLARE FUNCTION pango_renderer_get_matrix(BYVAL AS PangoRenderer PTR) AS const PangoMatrix PTR
DECLARE SUB pango_renderer_part_changed(BYVAL AS PangoRenderer PTR, BYVAL AS PangoRenderPart)
DECLARE SUB pango_renderer_set_alpha(BYVAL AS PangoRenderer PTR, BYVAL AS PangoRenderPart, BYVAL AS guint16)
DECLARE SUB pango_renderer_set_color(BYVAL AS PangoRenderer PTR, BYVAL AS PangoRenderPart, BYVAL AS const PangoColor PTR)
DECLARE SUB pango_renderer_set_matrix(BYVAL AS PangoRenderer PTR, BYVAL AS const PangoMatrix PTR)
TYPE _PangoRendererClass
  AS GObjectClass parent_class
  draw_glyphs AS SUB CDECL(BYVAL AS PangoRenderer PTR, BYVAL AS PangoFont PTR, BYVAL AS PangoGlyphString PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
  draw_rectangle AS SUB CDECL(BYVAL AS PangoRenderer PTR, BYVAL AS PangoRenderPart, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
  draw_error_underline AS SUB CDECL(BYVAL AS PangoRenderer PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
  draw_shape AS SUB CDECL(BYVAL AS PangoRenderer PTR, BYVAL AS PangoAttrShape PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
  draw_trapezoid AS SUB CDECL(BYVAL AS PangoRenderer PTR, BYVAL AS PangoRenderPart, BYVAL AS double, BYVAL AS double, BYVAL AS double, BYVAL AS double, BYVAL AS double, BYVAL AS double)
  draw_glyph AS SUB CDECL(BYVAL AS PangoRenderer PTR, BYVAL AS PangoFont PTR, BYVAL AS PangoGlyph, BYVAL AS double, BYVAL AS double)
  part_changed AS SUB CDECL(BYVAL AS PangoRenderer PTR, BYVAL AS PangoRenderPart)
  begin AS SUB CDECL(BYVAL AS PangoRenderer PTR)
  end AS SUB CDECL(BYVAL AS PangoRenderer PTR)
  prepare_run AS SUB CDECL(BYVAL AS PangoRenderer PTR, BYVAL AS PangoLayoutRun PTR)
  draw_glyph_item AS SUB CDECL(BYVAL AS PangoRenderer PTR, BYVAL AS const char PTR, BYVAL AS PangoGlyphItem PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/)
  _pango_reserved2 AS SUB CDECL()
  _pango_reserved3 AS SUB CDECL()
  _pango_reserved4 AS SUB CDECL()
END TYPE
DECLARE FUNCTION pango_script_get_type() AS GType
#DEFINE PANGO_TYPE_SCRIPT (pango_script_get_type())
DECLARE FUNCTION pango_script_iter_new(BYVAL AS const char PTR, BYVAL AS gint /'int'/) AS PangoScriptIter PTR
DECLARE SUB pango_script_iter_free(BYVAL AS PangoScriptIter PTR)
DECLARE SUB pango_script_iter_get_range(BYVAL AS PangoScriptIter PTR, BYVAL AS const char PTR PTR, BYVAL AS const char PTR PTR, BYVAL AS PangoScript PTR)
DECLARE FUNCTION pango_script_iter_next(BYVAL AS PangoScriptIter PTR) AS gboolean
DECLARE FUNCTION pango_stretch_get_type() AS GType
#DEFINE PANGO_TYPE_STRETCH (pango_stretch_get_type())
DECLARE FUNCTION pango_style_get_type() AS GType
#DEFINE PANGO_TYPE_STYLE (pango_style_get_type())
DECLARE FUNCTION pango_tab_align_get_type() AS GType
#DEFINE PANGO_TYPE_TAB_ALIGN (pango_tab_align_get_type())
DECLARE FUNCTION pango_tab_array_new(BYVAL AS gint, BYVAL AS gboolean) AS PangoTabArray PTR
DECLARE FUNCTION pango_tab_array_new_with_positions(BYVAL AS gint, BYVAL AS gboolean, BYVAL AS PangoTabAlign, BYVAL AS gint, ...) AS PangoTabArray PTR
DECLARE FUNCTION pango_tab_array_copy(BYVAL AS PangoTabArray PTR) AS PangoTabArray PTR
DECLARE SUB pango_tab_array_free(BYVAL AS PangoTabArray PTR)
DECLARE FUNCTION pango_tab_array_get_positions_in_pixels(BYVAL AS PangoTabArray PTR) AS gboolean
DECLARE FUNCTION pango_tab_array_get_size(BYVAL AS PangoTabArray PTR) AS gint
DECLARE SUB pango_tab_array_get_tab(BYVAL AS PangoTabArray PTR, BYVAL AS gint, BYVAL AS PangoTabAlign PTR, BYVAL AS gint PTR)
DECLARE SUB pango_tab_array_get_tabs(BYVAL AS PangoTabArray PTR, BYVAL AS PangoTabAlign PTR PTR, BYVAL AS gint PTR PTR)
DECLARE SUB pango_tab_array_resize(BYVAL AS PangoTabArray PTR, BYVAL AS gint)
DECLARE SUB pango_tab_array_set_tab(BYVAL AS PangoTabArray PTR, BYVAL AS gint, BYVAL AS PangoTabAlign, BYVAL AS gint)
' P_4

DECLARE FUNCTION pango_attr_allow_breaks_new(BYVAL AS gboolean) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_background_alpha_new(BYVAL AS guint16) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_background_new(BYVAL AS guint16, BYVAL AS guint16, BYVAL AS guint16) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_fallback_new(BYVAL AS gboolean) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_family_new(BYVAL AS const char PTR) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_foreground_alpha_new(BYVAL AS guint16) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_foreground_new(BYVAL AS guint16, BYVAL AS guint16, BYVAL AS guint16) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_gravity_hint_new(BYVAL AS PangoGravityHint) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_gravity_new(BYVAL AS PangoGravity) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_insert_hyphens_new(BYVAL AS gboolean) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_letter_spacing_new(BYVAL AS gint /'int'/) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_rise_new(BYVAL AS gint /'int'/) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_scale_new(BYVAL AS double) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_show_new(BYVAL AS PangoShowFlags) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_stretch_new(BYVAL AS PangoStretch) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_strikethrough_color_new(BYVAL AS guint16, BYVAL AS guint16, BYVAL AS guint16) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_strikethrough_new(BYVAL AS gboolean) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_style_new(BYVAL AS PangoStyle) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_underline_color_new(BYVAL AS guint16, BYVAL AS guint16, BYVAL AS guint16) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_underline_new(BYVAL AS PangoUnderline) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_variant_new(BYVAL AS PangoVariant) AS PangoAttribute PTR
DECLARE FUNCTION pango_attr_weight_new(BYVAL AS PangoWeight) AS PangoAttribute PTR
DECLARE SUB pango_break(BYVAL AS const gchar PTR, BYVAL AS gint /'int'/, BYVAL AS PangoAnalysis PTR, BYVAL AS PangoLogAttr PTR, BYVAL AS gint /'int'/)
DECLARE SUB pango_default_break(BYVAL AS const gchar PTR, BYVAL AS gint /'int'/, BYVAL AS PangoAnalysis PTR, BYVAL AS PangoLogAttr PTR, BYVAL AS gint /'int'/)
DECLARE SUB pango_extents_to_pixels(BYVAL AS PangoRectangle PTR, BYVAL AS PangoRectangle PTR)
DECLARE FUNCTION pango_find_base_dir(BYVAL AS const gchar PTR, BYVAL AS gint) AS PangoDirection
DECLARE FUNCTION pango_find_map(BYVAL AS PangoLanguage PTR, BYVAL AS guint, BYVAL AS guint) AS PangoMap PTR
DECLARE SUB pango_find_paragraph_boundary(BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE SUB pango_get_log_attrs(BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS PangoLanguage PTR, BYVAL AS PangoLogAttr PTR, BYVAL AS gint /'int'/)
DECLARE FUNCTION pango_get_mirror_char(BYVAL AS gunichar /'?'/, BYVAL AS gunichar PTR) AS gboolean
DECLARE FUNCTION pango_is_zero_width(BYVAL AS gunichar /'?'/) AS gboolean
DECLARE FUNCTION pango_itemize(BYVAL AS PangoContext PTR, BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS PangoAttrList PTR, BYVAL AS PangoAttrIterator PTR) AS GList PTR
DECLARE FUNCTION pango_itemize_with_base_dir(BYVAL AS PangoContext PTR, BYVAL AS PangoDirection, BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS PangoAttrList PTR, BYVAL AS PangoAttrIterator PTR) AS GList PTR
DECLARE FUNCTION pango_log2vis_get_embedding_levels(BYVAL AS const gchar PTR, BYVAL AS gint /'int'/, BYVAL AS PangoDirection PTR) AS guint8 PTR
DECLARE FUNCTION pango_markup_parser_finish(BYVAL AS GMarkupParseContext PTR, BYVAL AS PangoAttrList PTR PTR, BYVAL AS char PTR PTR, BYVAL AS gunichar PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION pango_markup_parser_new(BYVAL AS gunichar /'?'/) AS GMarkupParseContext PTR
DECLARE SUB pango_module_register(BYVAL AS PangoIncludedModule PTR)
DECLARE FUNCTION pango_parse_enum(BYVAL AS GType, BYVAL AS const char PTR, BYVAL AS gint /'int'/ PTR, BYVAL AS gboolean, BYVAL AS char PTR PTR) AS gboolean
DECLARE FUNCTION pango_parse_markup(BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS gunichar /'?'/, BYVAL AS PangoAttrList PTR PTR, BYVAL AS char PTR PTR, BYVAL AS gunichar PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION pango_parse_stretch(BYVAL AS const char PTR, BYVAL AS PangoStretch PTR, BYVAL AS gboolean) AS gboolean
DECLARE FUNCTION pango_parse_style(BYVAL AS const char PTR, BYVAL AS PangoStyle PTR, BYVAL AS gboolean) AS gboolean
DECLARE FUNCTION pango_parse_variant(BYVAL AS const char PTR, BYVAL AS PangoVariant PTR, BYVAL AS gboolean) AS gboolean
DECLARE FUNCTION pango_parse_weight(BYVAL AS const char PTR, BYVAL AS PangoWeight PTR, BYVAL AS gboolean) AS gboolean
DECLARE SUB pango_quantize_line_geometry(BYVAL AS gint /'int'/ PTR, BYVAL AS gint /'int'/ PTR)
DECLARE FUNCTION pango_read_line(BYVAL AS FILE PTR, BYVAL AS GString PTR) AS gint
DECLARE FUNCTION pango_reorder_items(BYVAL AS GList PTR) AS GList PTR
DECLARE FUNCTION pango_scan_int(BYVAL AS const char PTR PTR, BYVAL AS gint /'int'/ PTR) AS gboolean
DECLARE FUNCTION pango_scan_string(BYVAL AS const char PTR PTR, BYVAL AS GString PTR) AS gboolean
DECLARE FUNCTION pango_scan_word(BYVAL AS const char PTR PTR, BYVAL AS GString PTR) AS gboolean
DECLARE SUB pango_shape(BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS const PangoAnalysis PTR, BYVAL AS PangoGlyphString PTR)
DECLARE SUB pango_shape_full(BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS const PangoAnalysis PTR, BYVAL AS PangoGlyphString PTR)
DECLARE SUB pango_shape_with_flags(BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS const PangoAnalysis PTR, BYVAL AS PangoGlyphString PTR, BYVAL AS PangoShapeFlags)
DECLARE FUNCTION pango_skip_space(BYVAL AS const char PTR PTR) AS gboolean
DECLARE FUNCTION pango_split_file_list(BYVAL AS const char PTR) AS char PTR PTR
DECLARE SUB pango_tailor_break(BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS PangoAnalysis PTR, BYVAL AS gint /'int'/, BYVAL AS PangoLogAttr PTR, BYVAL AS gint /'int'/)
DECLARE FUNCTION pango_trim_string(BYVAL AS const char PTR) AS char PTR
DECLARE FUNCTION pango_unichar_direction(BYVAL AS gunichar /'?'/) AS PangoDirection
DECLARE FUNCTION pango_units_from_double(BYVAL AS double) AS gint /'int'/
DECLARE FUNCTION pango_units_to_double(BYVAL AS gint /'int'/) AS double
DECLARE FUNCTION pango_version() AS gint /'int'/
DECLARE FUNCTION pango_version_check(BYVAL AS gint /'int'/, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/) AS const char PTR
DECLARE FUNCTION pango_version_string() AS const char PTR
END EXTERN

