'            FreeBasic header file, auto-generated by
'                       ### girtobac ###
' LGPLv2.1 (C) 2013-2022 by Thomas{ doT ]Freiherr[ At ]gmx[ DoT }net
' Auto-translated from file /usr/share/gir-1.0/Poppler-0.18.gir
#INCLUDE ONCE "_GirToBac-0.0.bi"
' Repository version 1.2
#INCLUDE ONCE "GObject-2.0.bi"
#INCLUDE ONCE "Gio-2.0.bi"
#INCLUDE ONCE "cairo-1.0.bi"
#DEFINE POPPLER_ANNOT_TEXT_ICON_CIRCLE @!"Circle"
#DEFINE POPPLER_ANNOT_TEXT_ICON_COMMENT @!"Comment"
#DEFINE POPPLER_ANNOT_TEXT_ICON_CROSS @!"Cross"
#DEFINE POPPLER_ANNOT_TEXT_ICON_HELP @!"Help"
#DEFINE POPPLER_ANNOT_TEXT_ICON_INSERT @!"Insert"
#DEFINE POPPLER_ANNOT_TEXT_ICON_KEY @!"Key"
#DEFINE POPPLER_ANNOT_TEXT_ICON_NEW_PARAGRAPH @!"NewParagraph"
#DEFINE POPPLER_ANNOT_TEXT_ICON_NOTE @!"Note"
#DEFINE POPPLER_ANNOT_TEXT_ICON_PARAGRAPH @!"Paragraph"
TYPE AS _PopplerActionAny PopplerActionAny
TYPE AS _PopplerActionGotoDest PopplerActionGotoDest
TYPE AS _PopplerActionGotoRemote PopplerActionGotoRemote
TYPE AS _PopplerActionJavascript PopplerActionJavascript
TYPE AS _PopplerActionLaunch PopplerActionLaunch
TYPE AS _PopplerActionLayer PopplerActionLayer
TYPE AS LONG PopplerActionLayerAction
ENUM
  POPPLER_ACTION_LAYER_ON = 0
  POPPLER_ACTION_LAYER_OFF = 1
  POPPLER_ACTION_LAYER_TOGGLE = 2
END ENUM
TYPE AS _PopplerActionMovie PopplerActionMovie
TYPE AS LONG PopplerActionMovieOperation
ENUM
  POPPLER_ACTION_MOVIE_PLAY = 0
  POPPLER_ACTION_MOVIE_PAUSE = 1
  POPPLER_ACTION_MOVIE_RESUME = 2
  POPPLER_ACTION_MOVIE_STOP = 3
END ENUM
TYPE AS _PopplerActionNamed PopplerActionNamed
TYPE AS _PopplerActionOCGState PopplerActionOCGState
TYPE AS _PopplerActionRendition PopplerActionRendition
TYPE AS LONG PopplerActionType
ENUM
  POPPLER_ACTION_UNKNOWN = 0
  POPPLER_ACTION_NONE = 1
  POPPLER_ACTION_GOTO_DEST = 2
  POPPLER_ACTION_GOTO_REMOTE = 3
  POPPLER_ACTION_LAUNCH = 4
  POPPLER_ACTION_URI = 5
  POPPLER_ACTION_NAMED = 6
  POPPLER_ACTION_MOVIE = 7
  POPPLER_ACTION_RENDITION = 8
  POPPLER_ACTION_OCG_STATE = 9
  POPPLER_ACTION_JAVASCRIPT = 10
END ENUM
TYPE AS _PopplerActionUri PopplerActionUri
TYPE AS LONG PopplerAdditionalActionType
ENUM
  POPPLER_ADDITIONAL_ACTION_FIELD_MODIFIED = 0
  POPPLER_ADDITIONAL_ACTION_FORMAT_FIELD = 1
  POPPLER_ADDITIONAL_ACTION_VALIDATE_FIELD = 2
  POPPLER_ADDITIONAL_ACTION_CALCULATE_FIELD = 3
END ENUM
TYPE AS _PopplerAnnot PopplerAnnot
TYPE AS _PopplerAnnotCalloutLine PopplerAnnotCalloutLine
TYPE AS _PopplerAnnotCircle PopplerAnnotCircle
TYPE AS LONG PopplerAnnotExternalDataType
ENUM
  POPPLER_ANNOT_EXTERNAL_DATA_MARKUP_3D = 0
  POPPLER_ANNOT_EXTERNAL_DATA_MARKUP_UNKNOWN = 1
END ENUM
TYPE AS _PopplerAnnotFileAttachment PopplerAnnotFileAttachment
TYPE AS LONG PopplerAnnotFlag
ENUM
  POPPLER_ANNOT_FLAG_UNKNOWN = 0
  POPPLER_ANNOT_FLAG_INVISIBLE = 1
  POPPLER_ANNOT_FLAG_HIDDEN = 2
  POPPLER_ANNOT_FLAG_PRINT = 4
  POPPLER_ANNOT_FLAG_NO_ZOOM = 8
  POPPLER_ANNOT_FLAG_NO_ROTATE = 16
  POPPLER_ANNOT_FLAG_NO_VIEW = 32
  POPPLER_ANNOT_FLAG_READ_ONLY = 64
  POPPLER_ANNOT_FLAG_LOCKED = 128
  POPPLER_ANNOT_FLAG_TOGGLE_NO_VIEW = 256
  POPPLER_ANNOT_FLAG_LOCKED_CONTENTS = 512
END ENUM
TYPE AS _PopplerAnnotFreeText PopplerAnnotFreeText
TYPE AS LONG PopplerAnnotFreeTextQuadding
ENUM
  POPPLER_ANNOT_FREE_TEXT_QUADDING_LEFT_JUSTIFIED = 0
  POPPLER_ANNOT_FREE_TEXT_QUADDING_CENTERED = 1
  POPPLER_ANNOT_FREE_TEXT_QUADDING_RIGHT_JUSTIFIED = 2
END ENUM
TYPE AS _PopplerAnnotLine PopplerAnnotLine
TYPE AS _PopplerAnnotMapping PopplerAnnotMapping
TYPE AS _PopplerAnnotMarkup PopplerAnnotMarkup
TYPE AS LONG PopplerAnnotMarkupReplyType
ENUM
  POPPLER_ANNOT_MARKUP_REPLY_TYPE_R = 0
  POPPLER_ANNOT_MARKUP_REPLY_TYPE_GROUP = 1
END ENUM
TYPE AS _PopplerAnnotMovie PopplerAnnotMovie
TYPE AS _PopplerAnnotScreen PopplerAnnotScreen
TYPE AS _PopplerAnnotSquare PopplerAnnotSquare
TYPE AS _PopplerAnnotText PopplerAnnotText
TYPE AS _PopplerAnnotTextMarkup PopplerAnnotTextMarkup
TYPE AS LONG PopplerAnnotTextState
ENUM
  POPPLER_ANNOT_TEXT_STATE_MARKED = 0
  POPPLER_ANNOT_TEXT_STATE_UNMARKED = 1
  POPPLER_ANNOT_TEXT_STATE_ACCEPTED = 2
  POPPLER_ANNOT_TEXT_STATE_REJECTED = 3
  POPPLER_ANNOT_TEXT_STATE_CANCELLED = 4
  POPPLER_ANNOT_TEXT_STATE_COMPLETED = 5
  POPPLER_ANNOT_TEXT_STATE_NONE = 6
  POPPLER_ANNOT_TEXT_STATE_UNKNOWN = 7
END ENUM
TYPE AS LONG PopplerAnnotType
ENUM
  POPPLER_ANNOT_UNKNOWN = 0
  POPPLER_ANNOT_TEXT_ = 1
  POPPLER_ANNOT_LINK = 2
  POPPLER_ANNOT_FREE_TEXT_ = 3
  POPPLER_ANNOT_LINE_ = 4
  POPPLER_ANNOT_SQUARE_ = 5
  POPPLER_ANNOT_CIRCLE_ = 6
  POPPLER_ANNOT_POLYGON = 7
  POPPLER_ANNOT_POLY_LINE = 8
  POPPLER_ANNOT_HIGHLIGHT = 9
  POPPLER_ANNOT_UNDERLINE = 10
  POPPLER_ANNOT_SQUIGGLY = 11
  POPPLER_ANNOT_STRIKE_OUT = 12
  POPPLER_ANNOT_STAMP = 13
  POPPLER_ANNOT_CARET = 14
  POPPLER_ANNOT_INK = 15
  POPPLER_ANNOT_POPUP = 16
  POPPLER_ANNOT_FILE_ATTACHMENT_ = 17
  POPPLER_ANNOT_SOUND = 18
  POPPLER_ANNOT_MOVIE_ = 19
  POPPLER_ANNOT_WIDGET = 20
  POPPLER_ANNOT_SCREEN_ = 21
  POPPLER_ANNOT_PRINTER_MARK = 22
  POPPLER_ANNOT_TRAP_NET = 23
  POPPLER_ANNOT_WATERMARK = 24
  POPPLER_ANNOT_3D = 25
END ENUM
TYPE AS _PopplerAttachment PopplerAttachment
TYPE AS _PopplerAttachmentClass PopplerAttachmentClass
TYPE AS LONG PopplerBackend
ENUM
  POPPLER_BACKEND_UNKNOWN = 0
  POPPLER_BACKEND_SPLASH = 1
  POPPLER_BACKEND_CAIRO = 2
END ENUM
TYPE AS _PopplerColor PopplerColor
TYPE AS _PopplerDest PopplerDest
TYPE AS LONG PopplerDestType
ENUM
  POPPLER_DEST_UNKNOWN = 0
  POPPLER_DEST_XYZ = 1
  POPPLER_DEST_FIT = 2
  POPPLER_DEST_FITH = 3
  POPPLER_DEST_FITV = 4
  POPPLER_DEST_FITR = 5
  POPPLER_DEST_FITB = 6
  POPPLER_DEST_FITBH = 7
  POPPLER_DEST_FITBV = 8
  POPPLER_DEST_NAMED = 9
END ENUM
TYPE AS _PopplerDocument PopplerDocument
TYPE AS LONG PopplerError
ENUM
  POPPLER_ERROR_INVALID = 0
  POPPLER_ERROR_ENCRYPTED = 1
  POPPLER_ERROR_OPEN_FILE = 2
  POPPLER_ERROR_BAD_CATALOG = 3
  POPPLER_ERROR_DAMAGED = 4
END ENUM
TYPE AS LONG PopplerFindFlags
ENUM
  POPPLER_FIND_DEFAULT = 0
  POPPLER_FIND_CASE_SENSITIVE = 1
  POPPLER_FIND_BACKWARDS = 2
  POPPLER_FIND_WHOLE_WORDS_ONLY = 4
  POPPLER_FIND_IGNORE_DIACRITICS = 8
END ENUM
TYPE AS _PopplerFontInfo PopplerFontInfo
TYPE AS LONG PopplerFontType
ENUM
  POPPLER_FONT_TYPE_UNKNOWN = 0
  POPPLER_FONT_TYPE_TYPE1 = 1
  POPPLER_FONT_TYPE_TYPE1C = 2
  POPPLER_FONT_TYPE_TYPE1COT = 3
  POPPLER_FONT_TYPE_TYPE3 = 4
  POPPLER_FONT_TYPE_TRUETYPE = 5
  POPPLER_FONT_TYPE_TRUETYPEOT = 6
  POPPLER_FONT_TYPE_CID_TYPE0 = 7
  POPPLER_FONT_TYPE_CID_TYPE0C = 8
  POPPLER_FONT_TYPE_CID_TYPE0COT = 9
  POPPLER_FONT_TYPE_CID_TYPE2 = 10
  POPPLER_FONT_TYPE_CID_TYPE2OT = 11
END ENUM
TYPE AS _PopplerFontsIter PopplerFontsIter
TYPE AS LONG PopplerFormButtonType
ENUM
  POPPLER_FORM_BUTTON_PUSH = 0
  POPPLER_FORM_BUTTON_CHECK = 1
  POPPLER_FORM_BUTTON_RADIO = 2
END ENUM
TYPE AS LONG PopplerFormChoiceType
ENUM
  POPPLER_FORM_CHOICE_COMBO = 0
  POPPLER_FORM_CHOICE_LIST = 1
END ENUM
TYPE AS _PopplerFormField PopplerFormField
TYPE AS _PopplerFormFieldMapping PopplerFormFieldMapping
TYPE AS LONG PopplerFormFieldType
ENUM
  POPPLER_FORM_FIELD_UNKNOWN = 0
  POPPLER_FORM_FIELD_BUTTON = 1
  POPPLER_FORM_FIELD_TEXT = 2
  POPPLER_FORM_FIELD_CHOICE = 3
  POPPLER_FORM_FIELD_SIGNATURE = 4
END ENUM
TYPE AS LONG PopplerFormTextType
ENUM
  POPPLER_FORM_TEXT_NORMAL = 0
  POPPLER_FORM_TEXT_MULTILINE = 1
  POPPLER_FORM_TEXT_FILE_SELECT = 2
END ENUM
#DEFINE POPPLER_HAS_CAIRO 1
TYPE AS _PopplerImageMapping PopplerImageMapping
TYPE AS _PopplerIndexIter PopplerIndexIter
TYPE AS _PopplerLayer PopplerLayer
TYPE AS _PopplerLayersIter PopplerLayersIter
TYPE AS _PopplerLinkMapping PopplerLinkMapping
#DEFINE POPPLER_MAJOR_VERSION 0
#DEFINE POPPLER_MICRO_VERSION 1
#DEFINE POPPLER_MINOR_VERSION 86
TYPE AS _PopplerMedia PopplerMedia
TYPE AS _PopplerMovie PopplerMovie
TYPE AS LONG PopplerMoviePlayMode
ENUM
  POPPLER_MOVIE_PLAY_MODE_ONCE = 0
  POPPLER_MOVIE_PLAY_MODE_OPEN = 1
  POPPLER_MOVIE_PLAY_MODE_REPEAT = 2
  POPPLER_MOVIE_PLAY_MODE_PALINDROME = 3
END ENUM
TYPE AS LONG PopplerPDFConformance
ENUM
  POPPLER_PDF_SUBTYPE_CONF_UNSET = 0
  POPPLER_PDF_SUBTYPE_CONF_A = 1
  POPPLER_PDF_SUBTYPE_CONF_B = 2
  POPPLER_PDF_SUBTYPE_CONF_G = 3
  POPPLER_PDF_SUBTYPE_CONF_N = 4
  POPPLER_PDF_SUBTYPE_CONF_P = 5
  POPPLER_PDF_SUBTYPE_CONF_PG = 6
  POPPLER_PDF_SUBTYPE_CONF_U = 7
  POPPLER_PDF_SUBTYPE_CONF_NONE = 8
END ENUM
TYPE AS LONG PopplerPDFPart
ENUM
  POPPLER_PDF_SUBTYPE_PART_UNSET = 0
  POPPLER_PDF_SUBTYPE_PART_1 = 1
  POPPLER_PDF_SUBTYPE_PART_2 = 2
  POPPLER_PDF_SUBTYPE_PART_3 = 3
  POPPLER_PDF_SUBTYPE_PART_4 = 4
  POPPLER_PDF_SUBTYPE_PART_5 = 5
  POPPLER_PDF_SUBTYPE_PART_6 = 6
  POPPLER_PDF_SUBTYPE_PART_7 = 7
  POPPLER_PDF_SUBTYPE_PART_8 = 8
  POPPLER_PDF_SUBTYPE_PART_NONE = 9
END ENUM
TYPE AS LONG PopplerPDFSubtype
ENUM
  POPPLER_PDF_SUBTYPE_UNSET = 0
  POPPLER_PDF_SUBTYPE_PDF_A = 1
  POPPLER_PDF_SUBTYPE_PDF_E = 2
  POPPLER_PDF_SUBTYPE_PDF_UA = 3
  POPPLER_PDF_SUBTYPE_PDF_VT = 4
  POPPLER_PDF_SUBTYPE_PDF_X = 5
  POPPLER_PDF_SUBTYPE_NONE = 6
END ENUM
TYPE AS _PopplerPSFile PopplerPSFile
TYPE AS _PopplerPage PopplerPage
TYPE AS LONG PopplerPageLayout
ENUM
  POPPLER_PAGE_LAYOUT_UNSET = 0
  POPPLER_PAGE_LAYOUT_SINGLE_PAGE = 1
  POPPLER_PAGE_LAYOUT_ONE_COLUMN = 2
  POPPLER_PAGE_LAYOUT_TWO_COLUMN_LEFT = 3
  POPPLER_PAGE_LAYOUT_TWO_COLUMN_RIGHT = 4
  POPPLER_PAGE_LAYOUT_TWO_PAGE_LEFT = 5
  POPPLER_PAGE_LAYOUT_TWO_PAGE_RIGHT = 6
END ENUM
TYPE AS LONG PopplerPageMode
ENUM
  POPPLER_PAGE_MODE_UNSET = 0
  POPPLER_PAGE_MODE_NONE = 1
  POPPLER_PAGE_MODE_USE_OUTLINES = 2
  POPPLER_PAGE_MODE_USE_THUMBS = 3
  POPPLER_PAGE_MODE_FULL_SCREEN = 4
  POPPLER_PAGE_MODE_USE_OC = 5
  POPPLER_PAGE_MODE_USE_ATTACHMENTS = 6
END ENUM
TYPE AS _PopplerPageRange PopplerPageRange
TYPE AS _PopplerPageTransition PopplerPageTransition
TYPE AS LONG PopplerPageTransitionAlignment
ENUM
  POPPLER_PAGE_TRANSITION_HORIZONTAL = 0
  POPPLER_PAGE_TRANSITION_VERTICAL = 1
END ENUM
TYPE AS LONG PopplerPageTransitionDirection
ENUM
  POPPLER_PAGE_TRANSITION_INWARD = 0
  POPPLER_PAGE_TRANSITION_OUTWARD = 1
END ENUM
TYPE AS LONG PopplerPageTransitionType
ENUM
  POPPLER_PAGE_TRANSITION_REPLACE = 0
  POPPLER_PAGE_TRANSITION_SPLIT = 1
  POPPLER_PAGE_TRANSITION_BLINDS = 2
  POPPLER_PAGE_TRANSITION_BOX = 3
  POPPLER_PAGE_TRANSITION_WIPE = 4
  POPPLER_PAGE_TRANSITION_DISSOLVE = 5
  POPPLER_PAGE_TRANSITION_GLITTER = 6
  POPPLER_PAGE_TRANSITION_FLY = 7
  POPPLER_PAGE_TRANSITION_PUSH = 8
  POPPLER_PAGE_TRANSITION_COVER = 9
  POPPLER_PAGE_TRANSITION_UNCOVER = 10
  POPPLER_PAGE_TRANSITION_FADE = 11
END ENUM
TYPE AS LONG PopplerPermissions
ENUM
  POPPLER_PERMISSIONS_OK_TO_PRINT = 1
  POPPLER_PERMISSIONS_OK_TO_MODIFY = 2
  POPPLER_PERMISSIONS_OK_TO_COPY = 4
  POPPLER_PERMISSIONS_OK_TO_ADD_NOTES = 8
  POPPLER_PERMISSIONS_OK_TO_FILL_FORM = 16
  POPPLER_PERMISSIONS_OK_TO_EXTRACT_CONTENTS = 32
  POPPLER_PERMISSIONS_OK_TO_ASSEMBLE = 64
  POPPLER_PERMISSIONS_OK_TO_PRINT_HIGH_RESOLUTION = 128
  POPPLER_PERMISSIONS_FULL = 255
END ENUM
TYPE AS _PopplerPoint PopplerPoint
TYPE AS LONG PopplerPrintDuplex
ENUM
  POPPLER_PRINT_DUPLEX_NONE = 0
  POPPLER_PRINT_DUPLEX_SIMPLEX = 1
  POPPLER_PRINT_DUPLEX_DUPLEX_FLIP_SHORT_EDGE = 2
  POPPLER_PRINT_DUPLEX_DUPLEX_FLIP_LONG_EDGE = 3
END ENUM
TYPE AS LONG PopplerPrintFlags
ENUM
  POPPLER_PRINT_DOCUMENT = 0
  POPPLER_PRINT_MARKUP_ANNOTS = 1
  POPPLER_PRINT_STAMP_ANNOTS_ONLY = 2
  POPPLER_PRINT_ALL = 1
END ENUM
TYPE AS LONG PopplerPrintScaling
ENUM
  POPPLER_PRINT_SCALING_APP_DEFAULT = 0
  POPPLER_PRINT_SCALING_NONE = 1
END ENUM
TYPE AS _PopplerQuadrilateral PopplerQuadrilateral
TYPE AS _PopplerRectangle PopplerRectangle
TYPE AS LONG PopplerSelectionStyle
ENUM
  POPPLER_SELECTION_GLYPH = 0
  POPPLER_SELECTION_WORD = 1
  POPPLER_SELECTION_LINE = 2
END ENUM
TYPE AS LONG PopplerStructureBlockAlign
ENUM
  POPPLER_STRUCTURE_BLOCK_ALIGN_BEFORE = 0
  POPPLER_STRUCTURE_BLOCK_ALIGN_MIDDLE = 1
  POPPLER_STRUCTURE_BLOCK_ALIGN_AFTER = 2
  POPPLER_STRUCTURE_BLOCK_ALIGN_JUSTIFY = 3
END ENUM
TYPE AS LONG PopplerStructureBorderStyle
ENUM
  POPPLER_STRUCTURE_BORDER_STYLE_NONE = 0
  POPPLER_STRUCTURE_BORDER_STYLE_HIDDEN = 1
  POPPLER_STRUCTURE_BORDER_STYLE_DOTTED = 2
  POPPLER_STRUCTURE_BORDER_STYLE_DASHED = 3
  POPPLER_STRUCTURE_BORDER_STYLE_SOLID = 4
  POPPLER_STRUCTURE_BORDER_STYLE_DOUBLE = 5
  POPPLER_STRUCTURE_BORDER_STYLE_GROOVE = 6
  POPPLER_STRUCTURE_BORDER_STYLE_INSET = 7
  POPPLER_STRUCTURE_BORDER_STYLE_OUTSET = 8
END ENUM
TYPE AS _PopplerStructureElement PopplerStructureElement
TYPE AS _PopplerStructureElementIter PopplerStructureElementIter
TYPE AS LONG PopplerStructureElementKind
ENUM
  POPPLER_STRUCTURE_ELEMENT_CONTENT = 0
  POPPLER_STRUCTURE_ELEMENT_OBJECT_REFERENCE = 1
  POPPLER_STRUCTURE_ELEMENT_DOCUMENT = 2
  POPPLER_STRUCTURE_ELEMENT_PART = 3
  POPPLER_STRUCTURE_ELEMENT_ARTICLE = 4
  POPPLER_STRUCTURE_ELEMENT_SECTION = 5
  POPPLER_STRUCTURE_ELEMENT_DIV = 6
  POPPLER_STRUCTURE_ELEMENT_SPAN = 7
  POPPLER_STRUCTURE_ELEMENT_QUOTE = 8
  POPPLER_STRUCTURE_ELEMENT_NOTE = 9
  POPPLER_STRUCTURE_ELEMENT_REFERENCE = 10
  POPPLER_STRUCTURE_ELEMENT_BIBENTRY = 11
  POPPLER_STRUCTURE_ELEMENT_CODE = 12
  POPPLER_STRUCTURE_ELEMENT_LINK = 13
  POPPLER_STRUCTURE_ELEMENT_ANNOT = 14
  POPPLER_STRUCTURE_ELEMENT_BLOCKQUOTE = 15
  POPPLER_STRUCTURE_ELEMENT_CAPTION = 16
  POPPLER_STRUCTURE_ELEMENT_NONSTRUCT = 17
  POPPLER_STRUCTURE_ELEMENT_TOC = 18
  POPPLER_STRUCTURE_ELEMENT_TOC_ITEM = 19
  POPPLER_STRUCTURE_ELEMENT_INDEX = 20
  POPPLER_STRUCTURE_ELEMENT_PRIVATE = 21
  POPPLER_STRUCTURE_ELEMENT_PARAGRAPH = 22
  POPPLER_STRUCTURE_ELEMENT_HEADING = 23
  POPPLER_STRUCTURE_ELEMENT_HEADING_1 = 24
  POPPLER_STRUCTURE_ELEMENT_HEADING_2 = 25
  POPPLER_STRUCTURE_ELEMENT_HEADING_3 = 26
  POPPLER_STRUCTURE_ELEMENT_HEADING_4 = 27
  POPPLER_STRUCTURE_ELEMENT_HEADING_5 = 28
  POPPLER_STRUCTURE_ELEMENT_HEADING_6 = 29
  POPPLER_STRUCTURE_ELEMENT_LIST = 30
  POPPLER_STRUCTURE_ELEMENT_LIST_ITEM = 31
  POPPLER_STRUCTURE_ELEMENT_LIST_LABEL = 32
  POPPLER_STRUCTURE_ELEMENT_LIST_BODY = 33
  POPPLER_STRUCTURE_ELEMENT_TABLE = 34
  POPPLER_STRUCTURE_ELEMENT_TABLE_ROW = 35
  POPPLER_STRUCTURE_ELEMENT_TABLE_HEADING = 36
  POPPLER_STRUCTURE_ELEMENT_TABLE_DATA = 37
  POPPLER_STRUCTURE_ELEMENT_TABLE_HEADER = 38
  POPPLER_STRUCTURE_ELEMENT_TABLE_FOOTER = 39
  POPPLER_STRUCTURE_ELEMENT_TABLE_BODY = 40
  POPPLER_STRUCTURE_ELEMENT_RUBY = 41
  POPPLER_STRUCTURE_ELEMENT_RUBY_BASE_TEXT = 42
  POPPLER_STRUCTURE_ELEMENT_RUBY_ANNOT_TEXT = 43
  POPPLER_STRUCTURE_ELEMENT_RUBY_PUNCTUATION = 44
  POPPLER_STRUCTURE_ELEMENT_WARICHU = 45
  POPPLER_STRUCTURE_ELEMENT_WARICHU_TEXT = 46
  POPPLER_STRUCTURE_ELEMENT_WARICHU_PUNCTUATION = 47
  POPPLER_STRUCTURE_ELEMENT_FIGURE = 48
  POPPLER_STRUCTURE_ELEMENT_FORMULA = 49
  POPPLER_STRUCTURE_ELEMENT_FORM = 50
END ENUM
TYPE AS LONG PopplerStructureFormRole
ENUM
  POPPLER_STRUCTURE_FORM_ROLE_UNDEFINED = 0
  POPPLER_STRUCTURE_FORM_ROLE_RADIO_BUTTON = 1
  POPPLER_STRUCTURE_FORM_ROLE_PUSH_BUTTON = 2
  POPPLER_STRUCTURE_FORM_ROLE_TEXT_VALUE = 3
  POPPLER_STRUCTURE_FORM_ROLE_CHECKBOX = 4
END ENUM
TYPE AS LONG PopplerStructureFormState
ENUM
  POPPLER_STRUCTURE_FORM_STATE_ON = 0
  POPPLER_STRUCTURE_FORM_STATE_OFF = 1
  POPPLER_STRUCTURE_FORM_STATE_NEUTRAL = 2
END ENUM
TYPE AS LONG PopplerStructureGetTextFlags
ENUM
  POPPLER_STRUCTURE_GET_TEXT_NONE = 0
  POPPLER_STRUCTURE_GET_TEXT_RECURSIVE = 1
END ENUM
TYPE AS LONG PopplerStructureGlyphOrientation
ENUM
  POPPLER_STRUCTURE_GLYPH_ORIENTATION_AUTO = 0
  POPPLER_STRUCTURE_GLYPH_ORIENTATION_0 = 0
  POPPLER_STRUCTURE_GLYPH_ORIENTATION_90 = 1
  POPPLER_STRUCTURE_GLYPH_ORIENTATION_180 = 2
  POPPLER_STRUCTURE_GLYPH_ORIENTATION_270 = 3
END ENUM
TYPE AS LONG PopplerStructureInlineAlign
ENUM
  POPPLER_STRUCTURE_INLINE_ALIGN_START = 0
  POPPLER_STRUCTURE_INLINE_ALIGN_CENTER = 1
  POPPLER_STRUCTURE_INLINE_ALIGN_END = 2
END ENUM
TYPE AS LONG PopplerStructureListNumbering
ENUM
  POPPLER_STRUCTURE_LIST_NUMBERING_NONE = 0
  POPPLER_STRUCTURE_LIST_NUMBERING_DISC = 1
  POPPLER_STRUCTURE_LIST_NUMBERING_CIRCLE = 2
  POPPLER_STRUCTURE_LIST_NUMBERING_SQUARE = 3
  POPPLER_STRUCTURE_LIST_NUMBERING_DECIMAL = 4
  POPPLER_STRUCTURE_LIST_NUMBERING_UPPER_ROMAN = 5
  POPPLER_STRUCTURE_LIST_NUMBERING_LOWER_ROMAN = 6
  POPPLER_STRUCTURE_LIST_NUMBERING_UPPER_ALPHA = 7
  POPPLER_STRUCTURE_LIST_NUMBERING_LOWER_ALPHA = 8
END ENUM
TYPE AS LONG PopplerStructurePlacement
ENUM
  POPPLER_STRUCTURE_PLACEMENT_BLOCK = 0
  POPPLER_STRUCTURE_PLACEMENT_INLINE = 1
  POPPLER_STRUCTURE_PLACEMENT_BEFORE = 2
  POPPLER_STRUCTURE_PLACEMENT_START = 3
  POPPLER_STRUCTURE_PLACEMENT_END = 4
END ENUM
TYPE AS LONG PopplerStructureRubyAlign
ENUM
  POPPLER_STRUCTURE_RUBY_ALIGN_START = 0
  POPPLER_STRUCTURE_RUBY_ALIGN_CENTER = 1
  POPPLER_STRUCTURE_RUBY_ALIGN_END = 2
  POPPLER_STRUCTURE_RUBY_ALIGN_JUSTIFY = 3
  POPPLER_STRUCTURE_RUBY_ALIGN_DISTRIBUTE = 4
END ENUM
TYPE AS LONG PopplerStructureRubyPosition
ENUM
  POPPLER_STRUCTURE_RUBY_POSITION_BEFORE = 0
  POPPLER_STRUCTURE_RUBY_POSITION_AFTER = 1
  POPPLER_STRUCTURE_RUBY_POSITION_WARICHU = 2
  POPPLER_STRUCTURE_RUBY_POSITION_INLINE = 3
END ENUM
TYPE AS LONG PopplerStructureTableScope
ENUM
  POPPLER_STRUCTURE_TABLE_SCOPE_ROW = 0
  POPPLER_STRUCTURE_TABLE_SCOPE_COLUMN = 1
  POPPLER_STRUCTURE_TABLE_SCOPE_BOTH = 2
END ENUM
TYPE AS LONG PopplerStructureTextAlign
ENUM
  POPPLER_STRUCTURE_TEXT_ALIGN_START = 0
  POPPLER_STRUCTURE_TEXT_ALIGN_CENTER = 1
  POPPLER_STRUCTURE_TEXT_ALIGN_END = 2
  POPPLER_STRUCTURE_TEXT_ALIGN_JUSTIFY = 3
END ENUM
TYPE AS LONG PopplerStructureTextDecoration
ENUM
  POPPLER_STRUCTURE_TEXT_DECORATION_NONE = 0
  POPPLER_STRUCTURE_TEXT_DECORATION_UNDERLINE = 1
  POPPLER_STRUCTURE_TEXT_DECORATION_OVERLINE = 2
  POPPLER_STRUCTURE_TEXT_DECORATION_LINETHROUGH = 3
END ENUM
TYPE AS LONG PopplerStructureWritingMode
ENUM
  POPPLER_STRUCTURE_WRITING_MODE_LR_TB = 0
  POPPLER_STRUCTURE_WRITING_MODE_RL_TB = 1
  POPPLER_STRUCTURE_WRITING_MODE_TB_RL = 2
END ENUM
TYPE AS _PopplerTextAttributes PopplerTextAttributes
TYPE AS _PopplerTextSpan PopplerTextSpan
TYPE AS LONG PopplerViewerPreferences
ENUM
  POPPLER_VIEWER_PREFERENCES_UNSET = 0
  POPPLER_VIEWER_PREFERENCES_HIDE_TOOLBAR = 1
  POPPLER_VIEWER_PREFERENCES_HIDE_MENUBAR = 2
  POPPLER_VIEWER_PREFERENCES_HIDE_WINDOWUI = 4
  POPPLER_VIEWER_PREFERENCES_FIT_WINDOW = 8
  POPPLER_VIEWER_PREFERENCES_CENTER_WINDOW = 16
  POPPLER_VIEWER_PREFERENCES_DISPLAY_DOC_TITLE = 32
  POPPLER_VIEWER_PREFERENCES_DIRECTION_RTL = 64
END ENUM
EXTERN "C" LIB "poppler-glib"
' P_X

TYPE _PopplerActionAny
  AS PopplerActionType type
  AS gchar PTR title
END TYPE
TYPE _PopplerActionGotoDest
  AS PopplerActionType type
  AS gchar PTR title
  AS PopplerDest PTR dest
END TYPE
TYPE _PopplerActionGotoRemote
  AS PopplerActionType type
  AS gchar PTR title
  AS gchar PTR file_name
  AS PopplerDest PTR dest
END TYPE
TYPE _PopplerActionLaunch
  AS PopplerActionType type
  AS gchar PTR title
  AS gchar PTR file_name
  AS gchar PTR params
END TYPE
TYPE _PopplerActionUri
  AS PopplerActionType type
  AS gchar PTR title
  AS char PTR uri
END TYPE
TYPE _PopplerActionNamed
  AS PopplerActionType type
  AS gchar PTR title
  AS gchar PTR named_dest
END TYPE
TYPE _PopplerActionMovie
  AS PopplerActionType type
  AS gchar PTR title
  AS PopplerActionMovieOperation operation
  AS PopplerMovie PTR movie
END TYPE
TYPE _PopplerActionRendition
  AS PopplerActionType type
  AS gchar PTR title
  AS gint op
  AS PopplerMedia PTR media
END TYPE
TYPE _PopplerActionOCGState
  AS PopplerActionType type
  AS gchar PTR title
  AS GList PTR state_list
END TYPE
TYPE _PopplerActionJavascript
  AS PopplerActionType type
  AS gchar PTR title
  AS gchar PTR script
END TYPE
TYPE _PopplerRectangle
  AS gdouble x1
  AS gdouble y1
  AS gdouble x2
  AS gdouble y2
END TYPE
DECLARE FUNCTION poppler_rectangle_new() AS PopplerRectangle PTR
DECLARE FUNCTION poppler_rectangle_copy(BYVAL AS PopplerRectangle PTR) AS PopplerRectangle PTR
DECLARE SUB poppler_rectangle_free(BYVAL AS PopplerRectangle PTR)
TYPE PopplerAttachmentSaveFunc AS FUNCTION CDECL(BYVAL AS const gchar PTR, BYVAL AS gsize, BYVAL AS gpointer) AS gboolean
TYPE PopplerMediaSaveFunc AS FUNCTION CDECL(BYVAL AS const gchar PTR, BYVAL AS gsize, BYVAL AS gpointer) AS gboolean
' P_3

UNION PopplerAction
  AS PopplerActionType type
  AS PopplerActionAny any
  AS PopplerActionGotoDest goto_dest
  AS PopplerActionGotoRemote goto_remote
  AS PopplerActionLaunch launch
  AS PopplerActionUri uri
  AS PopplerActionNamed named
  AS PopplerActionMovie movie
  AS PopplerActionRendition rendition
  AS PopplerActionOCGState ocg_state
  AS PopplerActionJavascript javascript
END UNION
DECLARE FUNCTION poppler_action_copy(BYVAL AS PopplerAction PTR) AS PopplerAction PTR
DECLARE SUB poppler_action_free(BYVAL AS PopplerAction PTR)
TYPE _PopplerActionLayer
  AS PopplerActionLayerAction action
  AS GList PTR layers
END TYPE
DECLARE FUNCTION poppler_action_layer_action_get_type() AS GType
#DEFINE POPPLER_TYPE_ACTION_LAYER_ACTION (poppler_action_layer_action_get_type())
DECLARE FUNCTION poppler_action_movie_operation_get_type() AS GType
#DEFINE POPPLER_TYPE_ACTION_MOVIE_OPERATION (poppler_action_movie_operation_get_type())
DECLARE FUNCTION poppler_action_type_get_type() AS GType
#DEFINE POPPLER_TYPE_ACTION_TYPE (poppler_action_type_get_type())
DECLARE FUNCTION poppler_additional_action_type_get_type() AS GType
#DEFINE POPPLER_TYPE_ADDITIONAL_ACTION_TYPE (poppler_additional_action_type_get_type())
DECLARE FUNCTION poppler_annot_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT (poppler_annot_get_type())
#DEFINE POPPLER_ANNOT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT, PopplerAnnot))
#DEFINE POPPLER_ANNOT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT, Poppler))
#DEFINE POPPLER_IS_ANNOT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT))
#DEFINE POPPLER_IS_CLASS_ANNOT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT))
#DEFINE POPPLER_ANNOT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT, Poppler))
DECLARE FUNCTION poppler_annot_get_annot_type(BYVAL AS PopplerAnnot PTR) AS PopplerAnnotType
DECLARE FUNCTION poppler_annot_get_color(BYVAL AS PopplerAnnot PTR) AS PopplerColor PTR
DECLARE FUNCTION poppler_annot_get_contents(BYVAL AS PopplerAnnot PTR) AS gchar PTR
DECLARE FUNCTION poppler_annot_get_flags(BYVAL AS PopplerAnnot PTR) AS PopplerAnnotFlag
DECLARE FUNCTION poppler_annot_get_modified(BYVAL AS PopplerAnnot PTR) AS gchar PTR
DECLARE FUNCTION poppler_annot_get_name(BYVAL AS PopplerAnnot PTR) AS gchar PTR
DECLARE FUNCTION poppler_annot_get_page_index(BYVAL AS PopplerAnnot PTR) AS gint
DECLARE SUB poppler_annot_get_rectangle(BYVAL AS PopplerAnnot PTR, BYVAL AS PopplerRectangle PTR)
DECLARE SUB poppler_annot_set_color(BYVAL AS PopplerAnnot PTR, BYVAL AS PopplerColor PTR)
DECLARE SUB poppler_annot_set_contents(BYVAL AS PopplerAnnot PTR, BYVAL AS const gchar PTR)
DECLARE SUB poppler_annot_set_flags(BYVAL AS PopplerAnnot PTR, BYVAL AS PopplerAnnotFlag)
DECLARE SUB poppler_annot_set_rectangle(BYVAL AS PopplerAnnot PTR, BYVAL AS PopplerRectangle PTR)
TYPE _PopplerAnnotCalloutLine
  AS gboolean multiline
  AS gdouble x1
  AS gdouble y1
  AS gdouble x2
  AS gdouble y2
  AS gdouble x3
  AS gdouble y3
END TYPE
DECLARE FUNCTION poppler_annot_callout_line_new() AS PopplerAnnotCalloutLine PTR
DECLARE FUNCTION poppler_annot_callout_line_copy(BYVAL AS PopplerAnnotCalloutLine PTR) AS PopplerAnnotCalloutLine PTR
DECLARE SUB poppler_annot_callout_line_free(BYVAL AS PopplerAnnotCalloutLine PTR)
DECLARE FUNCTION poppler_annot_circle_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_CIRCLE (poppler_annot_circle_get_type())
#DEFINE POPPLER_ANNOT_CIRCLE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT_CIRCLE, PopplerAnnotCircle))
#DEFINE POPPLER_ANNOT_CIRCLE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT_CIRCLE, Poppler))
#DEFINE POPPLER_IS_ANNOT_CIRCLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT_CIRCLE))
#DEFINE POPPLER_IS_CLASS_ANNOT_CIRCLE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT_CIRCLE))
#DEFINE POPPLER_ANNOT_CIRCLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT_CIRCLE, Poppler))
DECLARE FUNCTION poppler_annot_circle_new(BYVAL AS PopplerDocument PTR, BYVAL AS PopplerRectangle PTR) AS PopplerAnnot PTR
DECLARE FUNCTION poppler_annot_circle_get_interior_color(BYVAL AS PopplerAnnotCircle PTR) AS PopplerColor PTR
DECLARE SUB poppler_annot_circle_set_interior_color(BYVAL AS PopplerAnnotCircle PTR, BYVAL AS PopplerColor PTR)
DECLARE FUNCTION poppler_annot_external_data_type_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_EXTERNAL_DATA_TYPE (poppler_annot_external_data_type_get_type())
DECLARE FUNCTION poppler_annot_file_attachment_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_FILE_ATTACHMENT (poppler_annot_file_attachment_get_type())
#DEFINE POPPLER_ANNOT_FILE_ATTACHMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT_FILE_ATTACHMENT, PopplerAnnotFileAttachment))
#DEFINE POPPLER_ANNOT_FILE_ATTACHMENT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT_FILE_ATTACHMENT, Poppler))
#DEFINE POPPLER_IS_ANNOT_FILE_ATTACHMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT_FILE_ATTACHMENT))
#DEFINE POPPLER_IS_CLASS_ANNOT_FILE_ATTACHMENT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT_FILE_ATTACHMENT))
#DEFINE POPPLER_ANNOT_FILE_ATTACHMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT_FILE_ATTACHMENT, Poppler))
DECLARE FUNCTION poppler_annot_file_attachment_get_attachment(BYVAL AS PopplerAnnotFileAttachment PTR) AS PopplerAttachment PTR
DECLARE FUNCTION poppler_annot_file_attachment_get_name(BYVAL AS PopplerAnnotFileAttachment PTR) AS gchar PTR
DECLARE FUNCTION poppler_annot_free_text_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_FREE_TEXT (poppler_annot_free_text_get_type())
#DEFINE POPPLER_ANNOT_FREE_TEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT_FREE_TEXT, PopplerAnnotFreeText))
#DEFINE POPPLER_ANNOT_FREE_TEXT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT_FREE_TEXT, Poppler))
#DEFINE POPPLER_IS_ANNOT_FREE_TEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT_FREE_TEXT))
#DEFINE POPPLER_IS_CLASS_ANNOT_FREE_TEXT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT_FREE_TEXT))
#DEFINE POPPLER_ANNOT_FREE_TEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT_FREE_TEXT, Poppler))
DECLARE FUNCTION poppler_annot_free_text_get_callout_line(BYVAL AS PopplerAnnotFreeText PTR) AS PopplerAnnotCalloutLine PTR
DECLARE FUNCTION poppler_annot_free_text_get_quadding(BYVAL AS PopplerAnnotFreeText PTR) AS PopplerAnnotFreeTextQuadding
DECLARE FUNCTION poppler_annot_free_text_quadding_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_FREE_TEXT_QUADDING (poppler_annot_free_text_quadding_get_type())
DECLARE FUNCTION poppler_annot_line_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_LINE (poppler_annot_line_get_type())
#DEFINE POPPLER_ANNOT_LINE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT_LINE, PopplerAnnotLine))
#DEFINE POPPLER_ANNOT_LINE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT_LINE, Poppler))
#DEFINE POPPLER_IS_ANNOT_LINE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT_LINE))
#DEFINE POPPLER_IS_CLASS_ANNOT_LINE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT_LINE))
#DEFINE POPPLER_ANNOT_LINE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT_LINE, Poppler))
DECLARE FUNCTION poppler_annot_line_new(BYVAL AS PopplerDocument PTR, BYVAL AS PopplerRectangle PTR, BYVAL AS PopplerPoint PTR, BYVAL AS PopplerPoint PTR) AS PopplerAnnot PTR
DECLARE SUB poppler_annot_line_set_vertices(BYVAL AS PopplerAnnotLine PTR, BYVAL AS PopplerPoint PTR, BYVAL AS PopplerPoint PTR)
TYPE _PopplerAnnotMapping
  AS PopplerRectangle area
  AS PopplerAnnot PTR annot
END TYPE
DECLARE FUNCTION poppler_annot_mapping_new() AS PopplerAnnotMapping PTR
DECLARE FUNCTION poppler_annot_mapping_copy(BYVAL AS PopplerAnnotMapping PTR) AS PopplerAnnotMapping PTR
DECLARE SUB poppler_annot_mapping_free(BYVAL AS PopplerAnnotMapping PTR)
DECLARE FUNCTION poppler_annot_markup_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_MARKUP (poppler_annot_markup_get_type())
#DEFINE POPPLER_ANNOT_MARKUP(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT_MARKUP, PopplerAnnotMarkup))
#DEFINE POPPLER_ANNOT_MARKUP_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT_MARKUP, Poppler))
#DEFINE POPPLER_IS_ANNOT_MARKUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT_MARKUP))
#DEFINE POPPLER_IS_CLASS_ANNOT_MARKUP(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT_MARKUP))
#DEFINE POPPLER_ANNOT_MARKUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT_MARKUP, Poppler))
DECLARE FUNCTION poppler_annot_markup_get_date(BYVAL AS PopplerAnnotMarkup PTR) AS GDate PTR
DECLARE FUNCTION poppler_annot_markup_get_external_data(BYVAL AS PopplerAnnotMarkup PTR) AS PopplerAnnotExternalDataType
DECLARE FUNCTION poppler_annot_markup_get_label(BYVAL AS PopplerAnnotMarkup PTR) AS gchar PTR
DECLARE FUNCTION poppler_annot_markup_get_opacity(BYVAL AS PopplerAnnotMarkup PTR) AS gdouble
DECLARE FUNCTION poppler_annot_markup_get_popup_is_open(BYVAL AS PopplerAnnotMarkup PTR) AS gboolean
DECLARE FUNCTION poppler_annot_markup_get_popup_rectangle(BYVAL AS PopplerAnnotMarkup PTR, BYVAL AS PopplerRectangle PTR) AS gboolean
DECLARE FUNCTION poppler_annot_markup_get_reply_to(BYVAL AS PopplerAnnotMarkup PTR) AS PopplerAnnotMarkupReplyType
DECLARE FUNCTION poppler_annot_markup_get_subject(BYVAL AS PopplerAnnotMarkup PTR) AS gchar PTR
DECLARE FUNCTION poppler_annot_markup_has_popup(BYVAL AS PopplerAnnotMarkup PTR) AS gboolean
DECLARE SUB poppler_annot_markup_set_label(BYVAL AS PopplerAnnotMarkup PTR, BYVAL AS const gchar PTR)
DECLARE SUB poppler_annot_markup_set_opacity(BYVAL AS PopplerAnnotMarkup PTR, BYVAL AS gdouble)
DECLARE SUB poppler_annot_markup_set_popup(BYVAL AS PopplerAnnotMarkup PTR, BYVAL AS PopplerRectangle PTR)
DECLARE SUB poppler_annot_markup_set_popup_is_open(BYVAL AS PopplerAnnotMarkup PTR, BYVAL AS gboolean)
DECLARE SUB poppler_annot_markup_set_popup_rectangle(BYVAL AS PopplerAnnotMarkup PTR, BYVAL AS PopplerRectangle PTR)
DECLARE FUNCTION poppler_annot_markup_reply_type_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_MARKUP_REPLY_TYPE (poppler_annot_markup_reply_type_get_type())
DECLARE FUNCTION poppler_annot_movie_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_MOVIE (poppler_annot_movie_get_type())
#DEFINE POPPLER_ANNOT_MOVIE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT_MOVIE, PopplerAnnotMovie))
#DEFINE POPPLER_ANNOT_MOVIE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT_MOVIE, Poppler))
#DEFINE POPPLER_IS_ANNOT_MOVIE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT_MOVIE))
#DEFINE POPPLER_IS_CLASS_ANNOT_MOVIE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT_MOVIE))
#DEFINE POPPLER_ANNOT_MOVIE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT_MOVIE, Poppler))
DECLARE FUNCTION poppler_annot_movie_get_movie(BYVAL AS PopplerAnnotMovie PTR) AS PopplerMovie PTR
DECLARE FUNCTION poppler_annot_movie_get_title(BYVAL AS PopplerAnnotMovie PTR) AS gchar PTR
DECLARE FUNCTION poppler_annot_screen_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_SCREEN (poppler_annot_screen_get_type())
#DEFINE POPPLER_ANNOT_SCREEN(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT_SCREEN, PopplerAnnotScreen))
#DEFINE POPPLER_ANNOT_SCREEN_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT_SCREEN, Poppler))
#DEFINE POPPLER_IS_ANNOT_SCREEN(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT_SCREEN))
#DEFINE POPPLER_IS_CLASS_ANNOT_SCREEN(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT_SCREEN))
#DEFINE POPPLER_ANNOT_SCREEN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT_SCREEN, Poppler))
DECLARE FUNCTION poppler_annot_screen_get_action(BYVAL AS PopplerAnnotScreen PTR) AS PopplerAction PTR
DECLARE FUNCTION poppler_annot_square_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_SQUARE (poppler_annot_square_get_type())
#DEFINE POPPLER_ANNOT_SQUARE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT_SQUARE, PopplerAnnotSquare))
#DEFINE POPPLER_ANNOT_SQUARE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT_SQUARE, Poppler))
#DEFINE POPPLER_IS_ANNOT_SQUARE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT_SQUARE))
#DEFINE POPPLER_IS_CLASS_ANNOT_SQUARE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT_SQUARE))
#DEFINE POPPLER_ANNOT_SQUARE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT_SQUARE, Poppler))
DECLARE FUNCTION poppler_annot_square_new(BYVAL AS PopplerDocument PTR, BYVAL AS PopplerRectangle PTR) AS PopplerAnnot PTR
DECLARE FUNCTION poppler_annot_square_get_interior_color(BYVAL AS PopplerAnnotSquare PTR) AS PopplerColor PTR
DECLARE SUB poppler_annot_square_set_interior_color(BYVAL AS PopplerAnnotSquare PTR, BYVAL AS PopplerColor PTR)
DECLARE FUNCTION poppler_annot_text_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_TEXT (poppler_annot_text_get_type())
#DEFINE POPPLER_ANNOT_TEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT_TEXT, PopplerAnnotText))
#DEFINE POPPLER_ANNOT_TEXT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT_TEXT, Poppler))
#DEFINE POPPLER_IS_ANNOT_TEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT_TEXT))
#DEFINE POPPLER_IS_CLASS_ANNOT_TEXT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT_TEXT))
#DEFINE POPPLER_ANNOT_TEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT_TEXT, Poppler))
DECLARE FUNCTION poppler_annot_text_new(BYVAL AS PopplerDocument PTR, BYVAL AS PopplerRectangle PTR) AS PopplerAnnot PTR
DECLARE FUNCTION poppler_annot_text_get_icon(BYVAL AS PopplerAnnotText PTR) AS gchar PTR
DECLARE FUNCTION poppler_annot_text_get_is_open(BYVAL AS PopplerAnnotText PTR) AS gboolean
DECLARE FUNCTION poppler_annot_text_get_state(BYVAL AS PopplerAnnotText PTR) AS PopplerAnnotTextState
DECLARE SUB poppler_annot_text_set_icon(BYVAL AS PopplerAnnotText PTR, BYVAL AS const gchar PTR)
DECLARE SUB poppler_annot_text_set_is_open(BYVAL AS PopplerAnnotText PTR, BYVAL AS gboolean)
DECLARE FUNCTION poppler_annot_text_markup_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_TEXT_MARKUP (poppler_annot_text_markup_get_type())
#DEFINE POPPLER_ANNOT_TEXT_MARKUP(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ANNOT_TEXT_MARKUP, PopplerAnnotTextMarkup))
#DEFINE POPPLER_ANNOT_TEXT_MARKUP_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ANNOT_TEXT_MARKUP, Poppler))
#DEFINE POPPLER_IS_ANNOT_TEXT_MARKUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ANNOT_TEXT_MARKUP))
#DEFINE POPPLER_IS_CLASS_ANNOT_TEXT_MARKUP(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ANNOT_TEXT_MARKUP))
#DEFINE POPPLER_ANNOT_TEXT_MARKUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ANNOT_TEXT_MARKUP, Poppler))
DECLARE FUNCTION poppler_annot_text_markup_new_highlight(BYVAL AS PopplerDocument PTR, BYVAL AS PopplerRectangle PTR, BYVAL AS GArray PTR) AS PopplerAnnot PTR
DECLARE FUNCTION poppler_annot_text_markup_new_squiggly(BYVAL AS PopplerDocument PTR, BYVAL AS PopplerRectangle PTR, BYVAL AS GArray PTR) AS PopplerAnnot PTR
DECLARE FUNCTION poppler_annot_text_markup_new_strikeout(BYVAL AS PopplerDocument PTR, BYVAL AS PopplerRectangle PTR, BYVAL AS GArray PTR) AS PopplerAnnot PTR
DECLARE FUNCTION poppler_annot_text_markup_new_underline(BYVAL AS PopplerDocument PTR, BYVAL AS PopplerRectangle PTR, BYVAL AS GArray PTR) AS PopplerAnnot PTR
DECLARE FUNCTION poppler_annot_text_markup_get_quadrilaterals(BYVAL AS PopplerAnnotTextMarkup PTR) AS GArray PTR
DECLARE SUB poppler_annot_text_markup_set_quadrilaterals(BYVAL AS PopplerAnnotTextMarkup PTR, BYVAL AS GArray PTR)
TYPE _PopplerAttachment
  AS GObject parent
  AS gchar PTR name
  AS gchar PTR description
  AS gsize size
  AS GTime mtime
  AS GTime ctime
  AS GString PTR checksum
END TYPE
DECLARE FUNCTION poppler_annot_text_state_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_TEXT_STATE (poppler_annot_text_state_get_type())
DECLARE FUNCTION poppler_annot_type_get_type() AS GType
#DEFINE POPPLER_TYPE_ANNOT_TYPE (poppler_annot_type_get_type())
DECLARE FUNCTION poppler_attachment_get_type() AS GType
#DEFINE POPPLER_TYPE_ATTACHMENT (poppler_attachment_get_type())
#DEFINE POPPLER_ATTACHMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_ATTACHMENT, PopplerAttachment))
#DEFINE POPPLER_ATTACHMENT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_ATTACHMENT, PopplerAttachmentClass))
#DEFINE POPPLER_IS_ATTACHMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_ATTACHMENT))
#DEFINE POPPLER_IS_CLASS_ATTACHMENT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_ATTACHMENT))
#DEFINE POPPLER_ATTACHMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_ATTACHMENT, PopplerAttachmentClass))
DECLARE FUNCTION poppler_attachment_save(BYVAL AS PopplerAttachment PTR, BYVAL AS const char PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION poppler_attachment_save_to_callback(BYVAL AS PopplerAttachment PTR, BYVAL AS PopplerAttachmentSaveFunc, BYVAL AS gpointer, BYVAL AS GError PTR PTR) AS gboolean
TYPE _PopplerAttachmentClass
  AS GObjectClass parent_class
END TYPE
TYPE _PopplerColor
  AS guint16 red
  AS guint16 green
  AS guint16 blue
END TYPE
DECLARE FUNCTION poppler_backend_get_type() AS GType
#DEFINE POPPLER_TYPE_BACKEND (poppler_backend_get_type())
DECLARE FUNCTION poppler_color_new() AS PopplerColor PTR
DECLARE FUNCTION poppler_color_copy(BYVAL AS PopplerColor PTR) AS PopplerColor PTR
DECLARE SUB poppler_color_free(BYVAL AS PopplerColor PTR)
TYPE _PopplerDest
  AS PopplerDestType type
  AS gint /'int'/ page_num
  AS double left
  AS double bottom
  AS double right
  AS double top
  AS double zoom
  AS gchar PTR named_dest
  AS guint change_left : 1
  AS guint change_top : 1
  AS guint change_zoom : 1
END TYPE
DECLARE FUNCTION poppler_dest_copy(BYVAL AS PopplerDest PTR) AS PopplerDest PTR
DECLARE SUB poppler_dest_free(BYVAL AS PopplerDest PTR)
DECLARE FUNCTION poppler_dest_type_get_type() AS GType
#DEFINE POPPLER_TYPE_DEST_TYPE (poppler_dest_type_get_type())
DECLARE FUNCTION poppler_document_get_type() AS GType
#DEFINE POPPLER_TYPE_DOCUMENT (poppler_document_get_type())
#DEFINE POPPLER_DOCUMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_DOCUMENT, PopplerDocument))
#DEFINE POPPLER_DOCUMENT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_DOCUMENT, Poppler))
#DEFINE POPPLER_IS_DOCUMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_DOCUMENT))
#DEFINE POPPLER_IS_CLASS_DOCUMENT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_DOCUMENT))
#DEFINE POPPLER_DOCUMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_DOCUMENT, Poppler))
DECLARE FUNCTION poppler_document_new_from_bytes(BYVAL AS GBytes PTR, BYVAL AS const char PTR, BYVAL AS GError PTR PTR) AS PopplerDocument PTR
DECLARE FUNCTION poppler_document_new_from_data(BYVAL AS char PTR, BYVAL AS gint /'int'/, BYVAL AS const char PTR, BYVAL AS GError PTR PTR) AS PopplerDocument PTR
DECLARE FUNCTION poppler_document_new_from_file(BYVAL AS const char PTR, BYVAL AS const char PTR, BYVAL AS GError PTR PTR) AS PopplerDocument PTR
DECLARE FUNCTION poppler_document_new_from_gfile(BYVAL AS GFile PTR, BYVAL AS const char PTR, BYVAL AS GCancellable PTR, BYVAL AS GError PTR PTR) AS PopplerDocument PTR
DECLARE FUNCTION poppler_document_new_from_stream(BYVAL AS GInputStream PTR, BYVAL AS goffset, BYVAL AS const char PTR, BYVAL AS GCancellable PTR, BYVAL AS GError PTR PTR) AS PopplerDocument PTR
DECLARE FUNCTION poppler_document_create_dests_tree(BYVAL AS PopplerDocument PTR) AS GTree PTR
DECLARE FUNCTION poppler_document_find_dest(BYVAL AS PopplerDocument PTR, BYVAL AS const gchar PTR) AS PopplerDest PTR
DECLARE FUNCTION poppler_document_get_attachments(BYVAL AS PopplerDocument PTR) AS GList PTR
DECLARE FUNCTION poppler_document_get_author(BYVAL AS PopplerDocument PTR) AS gchar PTR
DECLARE FUNCTION poppler_document_get_creation_date(BYVAL AS PopplerDocument PTR) AS time_t
DECLARE FUNCTION poppler_document_get_creator(BYVAL AS PopplerDocument PTR) AS gchar PTR
DECLARE FUNCTION poppler_document_get_form_field(BYVAL AS PopplerDocument PTR, BYVAL AS gint) AS PopplerFormField PTR
DECLARE FUNCTION poppler_document_get_id(BYVAL AS PopplerDocument PTR, BYVAL AS gchar PTR PTR, BYVAL AS gchar PTR PTR) AS gboolean
DECLARE FUNCTION poppler_document_get_keywords(BYVAL AS PopplerDocument PTR) AS gchar PTR
DECLARE FUNCTION poppler_document_get_metadata(BYVAL AS PopplerDocument PTR) AS gchar PTR
DECLARE FUNCTION poppler_document_get_modification_date(BYVAL AS PopplerDocument PTR) AS time_t
DECLARE FUNCTION poppler_document_get_n_attachments(BYVAL AS PopplerDocument PTR) AS guint
DECLARE FUNCTION poppler_document_get_n_pages(BYVAL AS PopplerDocument PTR) AS gint /'int'/
DECLARE FUNCTION poppler_document_get_page(BYVAL AS PopplerDocument PTR, BYVAL AS gint /'int'/) AS PopplerPage PTR
DECLARE FUNCTION poppler_document_get_page_by_label(BYVAL AS PopplerDocument PTR, BYVAL AS const char PTR) AS PopplerPage PTR
DECLARE FUNCTION poppler_document_get_page_layout(BYVAL AS PopplerDocument PTR) AS PopplerPageLayout
DECLARE FUNCTION poppler_document_get_page_mode(BYVAL AS PopplerDocument PTR) AS PopplerPageMode
DECLARE FUNCTION poppler_document_get_pdf_conformance(BYVAL AS PopplerDocument PTR) AS PopplerPDFConformance
DECLARE FUNCTION poppler_document_get_pdf_part(BYVAL AS PopplerDocument PTR) AS PopplerPDFPart
DECLARE FUNCTION poppler_document_get_pdf_subtype(BYVAL AS PopplerDocument PTR) AS PopplerPDFSubtype
DECLARE FUNCTION poppler_document_get_pdf_subtype_string(BYVAL AS PopplerDocument PTR) AS gchar PTR
DECLARE SUB poppler_document_get_pdf_version(BYVAL AS PopplerDocument PTR, BYVAL AS guint PTR, BYVAL AS guint PTR)
DECLARE FUNCTION poppler_document_get_pdf_version_string(BYVAL AS PopplerDocument PTR) AS gchar PTR
DECLARE FUNCTION poppler_document_get_permissions(BYVAL AS PopplerDocument PTR) AS PopplerPermissions
DECLARE FUNCTION poppler_document_get_print_duplex(BYVAL AS PopplerDocument PTR) AS PopplerPrintDuplex
DECLARE FUNCTION poppler_document_get_print_n_copies(BYVAL AS PopplerDocument PTR) AS gint
DECLARE FUNCTION poppler_document_get_print_page_ranges(BYVAL AS PopplerDocument PTR, BYVAL AS gint /'int'/ PTR) AS PopplerPageRange PTR
DECLARE FUNCTION poppler_document_get_print_scaling(BYVAL AS PopplerDocument PTR) AS PopplerPrintScaling
DECLARE FUNCTION poppler_document_get_producer(BYVAL AS PopplerDocument PTR) AS gchar PTR
DECLARE FUNCTION poppler_document_get_subject(BYVAL AS PopplerDocument PTR) AS gchar PTR
DECLARE FUNCTION poppler_document_get_title(BYVAL AS PopplerDocument PTR) AS gchar PTR
DECLARE FUNCTION poppler_document_has_attachments(BYVAL AS PopplerDocument PTR) AS gboolean
DECLARE FUNCTION poppler_document_is_linearized(BYVAL AS PopplerDocument PTR) AS gboolean
DECLARE FUNCTION poppler_document_save(BYVAL AS PopplerDocument PTR, BYVAL AS const char PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION poppler_document_save_a_copy(BYVAL AS PopplerDocument PTR, BYVAL AS const char PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE SUB poppler_document_set_author(BYVAL AS PopplerDocument PTR, BYVAL AS const gchar PTR)
DECLARE SUB poppler_document_set_creation_date(BYVAL AS PopplerDocument PTR, BYVAL AS time_t)
DECLARE SUB poppler_document_set_creator(BYVAL AS PopplerDocument PTR, BYVAL AS const gchar PTR)
DECLARE SUB poppler_document_set_keywords(BYVAL AS PopplerDocument PTR, BYVAL AS const gchar PTR)
DECLARE SUB poppler_document_set_modification_date(BYVAL AS PopplerDocument PTR, BYVAL AS time_t)
DECLARE SUB poppler_document_set_producer(BYVAL AS PopplerDocument PTR, BYVAL AS const gchar PTR)
DECLARE SUB poppler_document_set_subject(BYVAL AS PopplerDocument PTR, BYVAL AS const gchar PTR)
DECLARE SUB poppler_document_set_title(BYVAL AS PopplerDocument PTR, BYVAL AS const gchar PTR)
DECLARE FUNCTION poppler_error_get_type() AS GType
#DEFINE POPPLER_TYPE_ERROR (poppler_error_get_type())
DECLARE FUNCTION poppler_font_info_get_type() AS GType
#DEFINE POPPLER_TYPE_FONT_INFO (poppler_font_info_get_type())
#DEFINE POPPLER_FONT_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_FONT_INFO, PopplerFontInfo))
#DEFINE POPPLER_FONT_INFO_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_FONT_INFO, Poppler))
#DEFINE POPPLER_IS_FONT_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_FONT_INFO))
#DEFINE POPPLER_IS_CLASS_FONT_INFO(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_FONT_INFO))
#DEFINE POPPLER_FONT_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_FONT_INFO, Poppler))
DECLARE FUNCTION poppler_font_info_new(BYVAL AS PopplerDocument PTR) AS PopplerFontInfo PTR
DECLARE SUB poppler_font_info_free(BYVAL AS PopplerFontInfo PTR)
DECLARE FUNCTION poppler_font_info_scan(BYVAL AS PopplerFontInfo PTR, BYVAL AS gint /'int'/, BYVAL AS PopplerFontsIter PTR PTR) AS gboolean
DECLARE FUNCTION poppler_font_type_get_type() AS GType
#DEFINE POPPLER_TYPE_FONT_TYPE (poppler_font_type_get_type())
DECLARE FUNCTION poppler_fonts_iter_copy(BYVAL AS PopplerFontsIter PTR) AS PopplerFontsIter PTR
DECLARE SUB poppler_fonts_iter_free(BYVAL AS PopplerFontsIter PTR)
DECLARE FUNCTION poppler_fonts_iter_get_encoding(BYVAL AS PopplerFontsIter PTR) AS const char PTR
DECLARE FUNCTION poppler_fonts_iter_get_file_name(BYVAL AS PopplerFontsIter PTR) AS const char PTR
DECLARE FUNCTION poppler_fonts_iter_get_font_type(BYVAL AS PopplerFontsIter PTR) AS PopplerFontType
DECLARE FUNCTION poppler_fonts_iter_get_full_name(BYVAL AS PopplerFontsIter PTR) AS const char PTR
DECLARE FUNCTION poppler_fonts_iter_get_name(BYVAL AS PopplerFontsIter PTR) AS const char PTR
DECLARE FUNCTION poppler_fonts_iter_get_substitute_name(BYVAL AS PopplerFontsIter PTR) AS const char PTR
DECLARE FUNCTION poppler_fonts_iter_is_embedded(BYVAL AS PopplerFontsIter PTR) AS gboolean
DECLARE FUNCTION poppler_fonts_iter_is_subset(BYVAL AS PopplerFontsIter PTR) AS gboolean
DECLARE FUNCTION poppler_fonts_iter_next(BYVAL AS PopplerFontsIter PTR) AS gboolean
DECLARE FUNCTION poppler_form_button_type_get_type() AS GType
#DEFINE POPPLER_TYPE_FORM_BUTTON_TYPE (poppler_form_button_type_get_type())
DECLARE FUNCTION poppler_form_choice_type_get_type() AS GType
#DEFINE POPPLER_TYPE_FORM_CHOICE_TYPE (poppler_form_choice_type_get_type())
DECLARE FUNCTION poppler_form_field_get_type() AS GType
#DEFINE POPPLER_TYPE_FORM_FIELD (poppler_form_field_get_type())
#DEFINE POPPLER_FORM_FIELD(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_FORM_FIELD, PopplerFormField))
#DEFINE POPPLER_FORM_FIELD_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_FORM_FIELD, Poppler))
#DEFINE POPPLER_IS_FORM_FIELD(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_FORM_FIELD))
#DEFINE POPPLER_IS_CLASS_FORM_FIELD(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_FORM_FIELD))
#DEFINE POPPLER_FORM_FIELD_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_FORM_FIELD, Poppler))
DECLARE FUNCTION poppler_form_field_button_get_button_type(BYVAL AS PopplerFormField PTR) AS PopplerFormButtonType
DECLARE FUNCTION poppler_form_field_button_get_state(BYVAL AS PopplerFormField PTR) AS gboolean
DECLARE SUB poppler_form_field_button_set_state(BYVAL AS PopplerFormField PTR, BYVAL AS gboolean)
DECLARE FUNCTION poppler_form_field_choice_can_select_multiple(BYVAL AS PopplerFormField PTR) AS gboolean
DECLARE FUNCTION poppler_form_field_choice_commit_on_change(BYVAL AS PopplerFormField PTR) AS gboolean
DECLARE FUNCTION poppler_form_field_choice_do_spell_check(BYVAL AS PopplerFormField PTR) AS gboolean
DECLARE FUNCTION poppler_form_field_choice_get_choice_type(BYVAL AS PopplerFormField PTR) AS PopplerFormChoiceType
DECLARE FUNCTION poppler_form_field_choice_get_item(BYVAL AS PopplerFormField PTR, BYVAL AS gint) AS gchar PTR
DECLARE FUNCTION poppler_form_field_choice_get_n_items(BYVAL AS PopplerFormField PTR) AS gint
DECLARE FUNCTION poppler_form_field_choice_get_text(BYVAL AS PopplerFormField PTR) AS gchar PTR
DECLARE FUNCTION poppler_form_field_choice_is_editable(BYVAL AS PopplerFormField PTR) AS gboolean
DECLARE FUNCTION poppler_form_field_choice_is_item_selected(BYVAL AS PopplerFormField PTR, BYVAL AS gint) AS gboolean
DECLARE SUB poppler_form_field_choice_select_item(BYVAL AS PopplerFormField PTR, BYVAL AS gint)
DECLARE SUB poppler_form_field_choice_set_text(BYVAL AS PopplerFormField PTR, BYVAL AS const gchar PTR)
DECLARE SUB poppler_form_field_choice_toggle_item(BYVAL AS PopplerFormField PTR, BYVAL AS gint)
DECLARE SUB poppler_form_field_choice_unselect_all(BYVAL AS PopplerFormField PTR)
DECLARE FUNCTION poppler_form_field_get_action(BYVAL AS PopplerFormField PTR) AS PopplerAction PTR
DECLARE FUNCTION poppler_form_field_get_additional_action(BYVAL AS PopplerFormField PTR, BYVAL AS PopplerAdditionalActionType) AS PopplerAction PTR
DECLARE FUNCTION poppler_form_field_get_field_type(BYVAL AS PopplerFormField PTR) AS PopplerFormFieldType
DECLARE FUNCTION poppler_form_field_get_font_size(BYVAL AS PopplerFormField PTR) AS gdouble
DECLARE FUNCTION poppler_form_field_get_id(BYVAL AS PopplerFormField PTR) AS gint
DECLARE FUNCTION poppler_form_field_get_mapping_name(BYVAL AS PopplerFormField PTR) AS gchar PTR
DECLARE FUNCTION poppler_form_field_get_name(BYVAL AS PopplerFormField PTR) AS gchar PTR
DECLARE FUNCTION poppler_form_field_get_partial_name(BYVAL AS PopplerFormField PTR) AS gchar PTR
DECLARE FUNCTION poppler_form_field_is_read_only(BYVAL AS PopplerFormField PTR) AS gboolean
DECLARE FUNCTION poppler_form_field_text_do_scroll(BYVAL AS PopplerFormField PTR) AS gboolean
DECLARE FUNCTION poppler_form_field_text_do_spell_check(BYVAL AS PopplerFormField PTR) AS gboolean
DECLARE FUNCTION poppler_form_field_text_get_max_len(BYVAL AS PopplerFormField PTR) AS gint
DECLARE FUNCTION poppler_form_field_text_get_text(BYVAL AS PopplerFormField PTR) AS gchar PTR
DECLARE FUNCTION poppler_form_field_text_get_text_type(BYVAL AS PopplerFormField PTR) AS PopplerFormTextType
DECLARE FUNCTION poppler_form_field_text_is_password(BYVAL AS PopplerFormField PTR) AS gboolean
DECLARE FUNCTION poppler_form_field_text_is_rich_text(BYVAL AS PopplerFormField PTR) AS gboolean
DECLARE SUB poppler_form_field_text_set_text(BYVAL AS PopplerFormField PTR, BYVAL AS const gchar PTR)
TYPE _PopplerFormFieldMapping
  AS PopplerRectangle area
  AS PopplerFormField PTR field
END TYPE
DECLARE FUNCTION poppler_form_field_mapping_new() AS PopplerFormFieldMapping PTR
DECLARE FUNCTION poppler_form_field_mapping_copy(BYVAL AS PopplerFormFieldMapping PTR) AS PopplerFormFieldMapping PTR
DECLARE SUB poppler_form_field_mapping_free(BYVAL AS PopplerFormFieldMapping PTR)
TYPE _PopplerImageMapping
  AS PopplerRectangle area
  AS gint image_id
END TYPE
DECLARE FUNCTION poppler_form_field_type_get_type() AS GType
#DEFINE POPPLER_TYPE_FORM_FIELD_TYPE (poppler_form_field_type_get_type())
DECLARE FUNCTION poppler_form_text_type_get_type() AS GType
#DEFINE POPPLER_TYPE_FORM_TEXT_TYPE (poppler_form_text_type_get_type())
DECLARE FUNCTION poppler_image_mapping_new() AS PopplerImageMapping PTR
DECLARE FUNCTION poppler_image_mapping_copy(BYVAL AS PopplerImageMapping PTR) AS PopplerImageMapping PTR
DECLARE SUB poppler_image_mapping_free(BYVAL AS PopplerImageMapping PTR)
DECLARE FUNCTION poppler_index_iter_new(BYVAL AS PopplerDocument PTR) AS PopplerIndexIter PTR
DECLARE FUNCTION poppler_index_iter_copy(BYVAL AS PopplerIndexIter PTR) AS PopplerIndexIter PTR
DECLARE SUB poppler_index_iter_free(BYVAL AS PopplerIndexIter PTR)
DECLARE FUNCTION poppler_index_iter_get_action(BYVAL AS PopplerIndexIter PTR) AS PopplerAction PTR
DECLARE FUNCTION poppler_index_iter_get_child(BYVAL AS PopplerIndexIter PTR) AS PopplerIndexIter PTR
DECLARE FUNCTION poppler_index_iter_is_open(BYVAL AS PopplerIndexIter PTR) AS gboolean
DECLARE FUNCTION poppler_index_iter_next(BYVAL AS PopplerIndexIter PTR) AS gboolean
DECLARE FUNCTION poppler_layer_get_type() AS GType
#DEFINE POPPLER_TYPE_LAYER (poppler_layer_get_type())
#DEFINE POPPLER_LAYER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_LAYER, PopplerLayer))
#DEFINE POPPLER_LAYER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_LAYER, Poppler))
#DEFINE POPPLER_IS_LAYER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_LAYER))
#DEFINE POPPLER_IS_CLASS_LAYER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_LAYER))
#DEFINE POPPLER_LAYER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_LAYER, Poppler))
DECLARE FUNCTION poppler_layer_get_radio_button_group_id(BYVAL AS PopplerLayer PTR) AS gint
DECLARE FUNCTION poppler_layer_get_title(BYVAL AS PopplerLayer PTR) AS const gchar PTR
DECLARE SUB poppler_layer_hide(BYVAL AS PopplerLayer PTR)
DECLARE FUNCTION poppler_layer_is_parent(BYVAL AS PopplerLayer PTR) AS gboolean
DECLARE FUNCTION poppler_layer_is_visible(BYVAL AS PopplerLayer PTR) AS gboolean
DECLARE SUB poppler_layer_show(BYVAL AS PopplerLayer PTR)
DECLARE FUNCTION poppler_layers_iter_new(BYVAL AS PopplerDocument PTR) AS PopplerLayersIter PTR
DECLARE FUNCTION poppler_layers_iter_copy(BYVAL AS PopplerLayersIter PTR) AS PopplerLayersIter PTR
DECLARE SUB poppler_layers_iter_free(BYVAL AS PopplerLayersIter PTR)
DECLARE FUNCTION poppler_layers_iter_get_child(BYVAL AS PopplerLayersIter PTR) AS PopplerLayersIter PTR
DECLARE FUNCTION poppler_layers_iter_get_layer(BYVAL AS PopplerLayersIter PTR) AS PopplerLayer PTR
DECLARE FUNCTION poppler_layers_iter_get_title(BYVAL AS PopplerLayersIter PTR) AS gchar PTR
DECLARE FUNCTION poppler_layers_iter_next(BYVAL AS PopplerLayersIter PTR) AS gboolean
TYPE _PopplerLinkMapping
  AS PopplerRectangle area
  AS PopplerAction PTR action
END TYPE
DECLARE FUNCTION poppler_link_mapping_new() AS PopplerLinkMapping PTR
DECLARE FUNCTION poppler_link_mapping_copy(BYVAL AS PopplerLinkMapping PTR) AS PopplerLinkMapping PTR
DECLARE SUB poppler_link_mapping_free(BYVAL AS PopplerLinkMapping PTR)
DECLARE FUNCTION poppler_media_get_type() AS GType
#DEFINE POPPLER_TYPE_MEDIA (poppler_media_get_type())
#DEFINE POPPLER_MEDIA(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_MEDIA, PopplerMedia))
#DEFINE POPPLER_MEDIA_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_MEDIA, Poppler))
#DEFINE POPPLER_IS_MEDIA(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_MEDIA))
#DEFINE POPPLER_IS_CLASS_MEDIA(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_MEDIA))
#DEFINE POPPLER_MEDIA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_MEDIA, Poppler))
DECLARE FUNCTION poppler_media_get_filename(BYVAL AS PopplerMedia PTR) AS const gchar PTR
DECLARE FUNCTION poppler_media_get_mime_type(BYVAL AS PopplerMedia PTR) AS const gchar PTR
DECLARE FUNCTION poppler_media_is_embedded(BYVAL AS PopplerMedia PTR) AS gboolean
DECLARE FUNCTION poppler_media_save(BYVAL AS PopplerMedia PTR, BYVAL AS const char PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION poppler_media_save_to_callback(BYVAL AS PopplerMedia PTR, BYVAL AS PopplerMediaSaveFunc, BYVAL AS gpointer, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION poppler_movie_get_type() AS GType
#DEFINE POPPLER_TYPE_MOVIE (poppler_movie_get_type())
#DEFINE POPPLER_MOVIE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_MOVIE, PopplerMovie))
#DEFINE POPPLER_MOVIE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_MOVIE, Poppler))
#DEFINE POPPLER_IS_MOVIE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_MOVIE))
#DEFINE POPPLER_IS_CLASS_MOVIE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_MOVIE))
#DEFINE POPPLER_MOVIE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_MOVIE, Poppler))
DECLARE FUNCTION poppler_movie_get_duration(BYVAL AS PopplerMovie PTR) AS guint64
DECLARE FUNCTION poppler_movie_get_filename(BYVAL AS PopplerMovie PTR) AS const gchar PTR
DECLARE FUNCTION poppler_movie_get_play_mode(BYVAL AS PopplerMovie PTR) AS PopplerMoviePlayMode
DECLARE FUNCTION poppler_movie_get_rate(BYVAL AS PopplerMovie PTR) AS gdouble
DECLARE FUNCTION poppler_movie_get_rotation_angle(BYVAL AS PopplerMovie PTR) AS gushort
DECLARE FUNCTION poppler_movie_get_start(BYVAL AS PopplerMovie PTR) AS guint64
DECLARE FUNCTION poppler_movie_get_volume(BYVAL AS PopplerMovie PTR) AS gdouble
DECLARE FUNCTION poppler_movie_is_synchronous(BYVAL AS PopplerMovie PTR) AS gboolean
DECLARE FUNCTION poppler_movie_need_poster(BYVAL AS PopplerMovie PTR) AS gboolean
DECLARE FUNCTION poppler_movie_show_controls(BYVAL AS PopplerMovie PTR) AS gboolean
DECLARE FUNCTION poppler_movie_play_mode_get_type() AS GType
#DEFINE POPPLER_TYPE_MOVIE_PLAY_MODE (poppler_movie_play_mode_get_type())
DECLARE FUNCTION poppler_pdf_conformance_get_type() AS GType
#DEFINE POPPLER_TYPE_PDF_CONFORMANCE (poppler_pdf_conformance_get_type())
DECLARE FUNCTION poppler_pdf_part_get_type() AS GType
#DEFINE POPPLER_TYPE_PDF_PART (poppler_pdf_part_get_type())
DECLARE FUNCTION poppler_pdf_subtype_get_type() AS GType
#DEFINE POPPLER_TYPE_PDF_SUBTYPE (poppler_pdf_subtype_get_type())
DECLARE FUNCTION poppler_ps_file_get_type() AS GType
#DEFINE POPPLER_TYPE_PS_FILE (poppler_ps_file_get_type())
#DEFINE POPPLER_PS_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_PS_FILE, PopplerPSFile))
#DEFINE POPPLER_PS_FILE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_PS_FILE, Poppler))
#DEFINE POPPLER_IS_PS_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_PS_FILE))
#DEFINE POPPLER_IS_CLASS_PS_FILE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_PS_FILE))
#DEFINE POPPLER_PS_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_PS_FILE, Poppler))
DECLARE FUNCTION poppler_ps_file_new(BYVAL AS PopplerDocument PTR, BYVAL AS const char PTR, BYVAL AS gint /'int'/, BYVAL AS gint /'int'/) AS PopplerPSFile PTR
DECLARE SUB poppler_ps_file_free(BYVAL AS PopplerPSFile PTR)
DECLARE SUB poppler_ps_file_set_duplex(BYVAL AS PopplerPSFile PTR, BYVAL AS gboolean)
DECLARE SUB poppler_ps_file_set_paper_size(BYVAL AS PopplerPSFile PTR, BYVAL AS double, BYVAL AS double)
DECLARE FUNCTION poppler_page_get_type() AS GType
#DEFINE POPPLER_TYPE_PAGE (poppler_page_get_type())
#DEFINE POPPLER_PAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_PAGE, PopplerPage))
#DEFINE POPPLER_PAGE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_PAGE, Poppler))
#DEFINE POPPLER_IS_PAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_PAGE))
#DEFINE POPPLER_IS_CLASS_PAGE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_PAGE))
#DEFINE POPPLER_PAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_PAGE, Poppler))
DECLARE SUB poppler_page_free_annot_mapping(BYVAL AS GList PTR)
DECLARE SUB poppler_page_free_form_field_mapping(BYVAL AS GList PTR)
DECLARE SUB poppler_page_free_image_mapping(BYVAL AS GList PTR)
DECLARE SUB poppler_page_free_link_mapping(BYVAL AS GList PTR)
DECLARE SUB poppler_page_free_text_attributes(BYVAL AS GList PTR)
DECLARE SUB poppler_page_selection_region_free(BYVAL AS GList PTR)
DECLARE SUB poppler_page_add_annot(BYVAL AS PopplerPage PTR, BYVAL AS PopplerAnnot PTR)
DECLARE FUNCTION poppler_page_find_text(BYVAL AS PopplerPage PTR, BYVAL AS const char PTR) AS GList PTR
DECLARE FUNCTION poppler_page_find_text_with_options(BYVAL AS PopplerPage PTR, BYVAL AS const char PTR, BYVAL AS PopplerFindFlags) AS GList PTR
DECLARE FUNCTION poppler_page_get_annot_mapping(BYVAL AS PopplerPage PTR) AS GList PTR
DECLARE SUB poppler_page_get_crop_box(BYVAL AS PopplerPage PTR, BYVAL AS PopplerRectangle PTR)
DECLARE FUNCTION poppler_page_get_duration(BYVAL AS PopplerPage PTR) AS double
DECLARE FUNCTION poppler_page_get_form_field_mapping(BYVAL AS PopplerPage PTR) AS GList PTR
DECLARE FUNCTION poppler_page_get_image(BYVAL AS PopplerPage PTR, BYVAL AS gint) AS cairo_surface_t PTR
DECLARE FUNCTION poppler_page_get_image_mapping(BYVAL AS PopplerPage PTR) AS GList PTR
DECLARE FUNCTION poppler_page_get_index(BYVAL AS PopplerPage PTR) AS gint /'int'/
DECLARE FUNCTION poppler_page_get_label(BYVAL AS PopplerPage PTR) AS gchar PTR
DECLARE FUNCTION poppler_page_get_link_mapping(BYVAL AS PopplerPage PTR) AS GList PTR
DECLARE FUNCTION poppler_page_get_selected_region(BYVAL AS PopplerPage PTR, BYVAL AS gdouble, BYVAL AS PopplerSelectionStyle, BYVAL AS PopplerRectangle PTR) AS cairo_region_t PTR
DECLARE FUNCTION poppler_page_get_selected_text(BYVAL AS PopplerPage PTR, BYVAL AS PopplerSelectionStyle, BYVAL AS PopplerRectangle PTR) AS char PTR
DECLARE FUNCTION poppler_page_get_selection_region(BYVAL AS PopplerPage PTR, BYVAL AS gdouble, BYVAL AS PopplerSelectionStyle, BYVAL AS PopplerRectangle PTR) AS GList PTR
DECLARE SUB poppler_page_get_size(BYVAL AS PopplerPage PTR, BYVAL AS double PTR, BYVAL AS double PTR)
DECLARE FUNCTION poppler_page_get_text(BYVAL AS PopplerPage PTR) AS char PTR
DECLARE FUNCTION poppler_page_get_text_attributes(BYVAL AS PopplerPage PTR) AS GList PTR
DECLARE FUNCTION poppler_page_get_text_attributes_for_area(BYVAL AS PopplerPage PTR, BYVAL AS PopplerRectangle PTR) AS GList PTR
DECLARE FUNCTION poppler_page_get_text_for_area(BYVAL AS PopplerPage PTR, BYVAL AS PopplerRectangle PTR) AS char PTR
DECLARE FUNCTION poppler_page_get_text_layout(BYVAL AS PopplerPage PTR, BYVAL AS PopplerRectangle PTR PTR, BYVAL AS guint PTR) AS gboolean
DECLARE FUNCTION poppler_page_get_text_layout_for_area(BYVAL AS PopplerPage PTR, BYVAL AS PopplerRectangle PTR, BYVAL AS PopplerRectangle PTR PTR, BYVAL AS guint PTR) AS gboolean
DECLARE FUNCTION poppler_page_get_thumbnail(BYVAL AS PopplerPage PTR) AS cairo_surface_t PTR
DECLARE FUNCTION poppler_page_get_thumbnail_size(BYVAL AS PopplerPage PTR, BYVAL AS gint /'int'/ PTR, BYVAL AS gint /'int'/ PTR) AS gboolean
DECLARE FUNCTION poppler_page_get_transition(BYVAL AS PopplerPage PTR) AS PopplerPageTransition PTR
DECLARE SUB poppler_page_remove_annot(BYVAL AS PopplerPage PTR, BYVAL AS PopplerAnnot PTR)
DECLARE SUB poppler_page_render(BYVAL AS PopplerPage PTR, BYVAL AS cairo_t PTR)
DECLARE SUB poppler_page_render_for_printing(BYVAL AS PopplerPage PTR, BYVAL AS cairo_t PTR)
DECLARE SUB poppler_page_render_for_printing_with_options(BYVAL AS PopplerPage PTR, BYVAL AS cairo_t PTR, BYVAL AS PopplerPrintFlags)
DECLARE SUB poppler_page_render_selection(BYVAL AS PopplerPage PTR, BYVAL AS cairo_t PTR, BYVAL AS PopplerRectangle PTR, BYVAL AS PopplerRectangle PTR, BYVAL AS PopplerSelectionStyle, BYVAL AS PopplerColor PTR, BYVAL AS PopplerColor PTR)
DECLARE SUB poppler_page_render_to_ps(BYVAL AS PopplerPage PTR, BYVAL AS PopplerPSFile PTR)
TYPE _PopplerPageRange
  AS gint start_page
  AS gint end_page
END TYPE
DECLARE FUNCTION poppler_page_layout_get_type() AS GType
#DEFINE POPPLER_TYPE_PAGE_LAYOUT (poppler_page_layout_get_type())
DECLARE FUNCTION poppler_page_mode_get_type() AS GType
#DEFINE POPPLER_TYPE_PAGE_MODE (poppler_page_mode_get_type())
TYPE _PopplerPageTransition
  AS PopplerPageTransitionType type
  AS PopplerPageTransitionAlignment alignment
  AS PopplerPageTransitionDirection direction
  AS gint duration
  AS gint angle
  AS gdouble scale
  AS gboolean rectangular
  AS gdouble duration_real
END TYPE
DECLARE FUNCTION poppler_page_transition_new() AS PopplerPageTransition PTR
DECLARE FUNCTION poppler_page_transition_copy(BYVAL AS PopplerPageTransition PTR) AS PopplerPageTransition PTR
DECLARE SUB poppler_page_transition_free(BYVAL AS PopplerPageTransition PTR)
TYPE _PopplerPoint
  AS gdouble x
  AS gdouble y
END TYPE
DECLARE FUNCTION poppler_page_transition_alignment_get_type() AS GType
#DEFINE POPPLER_TYPE_PAGE_TRANSITION_ALIGNMENT (poppler_page_transition_alignment_get_type())
DECLARE FUNCTION poppler_page_transition_direction_get_type() AS GType
#DEFINE POPPLER_TYPE_PAGE_TRANSITION_DIRECTION (poppler_page_transition_direction_get_type())
DECLARE FUNCTION poppler_page_transition_type_get_type() AS GType
#DEFINE POPPLER_TYPE_PAGE_TRANSITION_TYPE (poppler_page_transition_type_get_type())
DECLARE FUNCTION poppler_point_new() AS PopplerPoint PTR
DECLARE FUNCTION poppler_point_copy(BYVAL AS PopplerPoint PTR) AS PopplerPoint PTR
DECLARE SUB poppler_point_free(BYVAL AS PopplerPoint PTR)
TYPE _PopplerQuadrilateral
  AS PopplerPoint p1
  AS PopplerPoint p2
  AS PopplerPoint p3
  AS PopplerPoint p4
END TYPE
DECLARE FUNCTION poppler_print_duplex_get_type() AS GType
#DEFINE POPPLER_TYPE_PRINT_DUPLEX (poppler_print_duplex_get_type())
DECLARE FUNCTION poppler_print_scaling_get_type() AS GType
#DEFINE POPPLER_TYPE_PRINT_SCALING (poppler_print_scaling_get_type())
DECLARE FUNCTION poppler_quadrilateral_new() AS PopplerQuadrilateral PTR
DECLARE FUNCTION poppler_quadrilateral_copy(BYVAL AS PopplerQuadrilateral PTR) AS PopplerQuadrilateral PTR
DECLARE SUB poppler_quadrilateral_free(BYVAL AS PopplerQuadrilateral PTR)
DECLARE FUNCTION poppler_selection_style_get_type() AS GType
#DEFINE POPPLER_TYPE_SELECTION_STYLE (poppler_selection_style_get_type())
DECLARE FUNCTION poppler_structure_block_align_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_BLOCK_ALIGN (poppler_structure_block_align_get_type())
DECLARE FUNCTION poppler_structure_border_style_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_BORDER_STYLE (poppler_structure_border_style_get_type())
DECLARE FUNCTION poppler_structure_element_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_ELEMENT (poppler_structure_element_get_type())
#DEFINE POPPLER_STRUCTURE_ELEMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), POPPLER_TYPE_STRUCTURE_ELEMENT, PopplerStructureElement))
#DEFINE POPPLER_STRUCTURE_ELEMENT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), POPPLER_TYPE_STRUCTURE_ELEMENT, Poppler))
#DEFINE POPPLER_IS_STRUCTURE_ELEMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), POPPLER_TYPE_STRUCTURE_ELEMENT))
#DEFINE POPPLER_IS_CLASS_STRUCTURE_ELEMENT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), POPPLER_TYPE_STRUCTURE_ELEMENT))
#DEFINE POPPLER_STRUCTURE_ELEMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), POPPLER_TYPE_STRUCTURE_ELEMENT, Poppler))
DECLARE FUNCTION poppler_structure_element_get_abbreviation(BYVAL AS PopplerStructureElement PTR) AS gchar PTR
DECLARE FUNCTION poppler_structure_element_get_actual_text(BYVAL AS PopplerStructureElement PTR) AS gchar PTR
DECLARE FUNCTION poppler_structure_element_get_alt_text(BYVAL AS PopplerStructureElement PTR) AS gchar PTR
DECLARE FUNCTION poppler_structure_element_get_background_color(BYVAL AS PopplerStructureElement PTR, BYVAL AS PopplerColor PTR) AS gboolean
DECLARE FUNCTION poppler_structure_element_get_baseline_shift(BYVAL AS PopplerStructureElement PTR) AS gdouble
DECLARE FUNCTION poppler_structure_element_get_block_align(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureBlockAlign
DECLARE FUNCTION poppler_structure_element_get_border_color(BYVAL AS PopplerStructureElement PTR, BYVAL AS PopplerColor PTR) AS gboolean
DECLARE SUB poppler_structure_element_get_border_style(BYVAL AS PopplerStructureElement PTR, BYVAL AS PopplerStructureBorderStyle PTR)
DECLARE FUNCTION poppler_structure_element_get_border_thickness(BYVAL AS PopplerStructureElement PTR, BYVAL AS gdouble PTR) AS gboolean
DECLARE FUNCTION poppler_structure_element_get_bounding_box(BYVAL AS PopplerStructureElement PTR, BYVAL AS PopplerRectangle PTR) AS gboolean
DECLARE FUNCTION poppler_structure_element_get_color(BYVAL AS PopplerStructureElement PTR, BYVAL AS PopplerColor PTR) AS gboolean
DECLARE FUNCTION poppler_structure_element_get_column_count(BYVAL AS PopplerStructureElement PTR) AS guint
DECLARE FUNCTION poppler_structure_element_get_column_gaps(BYVAL AS PopplerStructureElement PTR, BYVAL AS guint PTR) AS gdouble PTR
DECLARE FUNCTION poppler_structure_element_get_column_widths(BYVAL AS PopplerStructureElement PTR, BYVAL AS guint PTR) AS gdouble PTR
DECLARE FUNCTION poppler_structure_element_get_end_indent(BYVAL AS PopplerStructureElement PTR) AS gdouble
DECLARE FUNCTION poppler_structure_element_get_form_description(BYVAL AS PopplerStructureElement PTR) AS gchar PTR
DECLARE FUNCTION poppler_structure_element_get_form_role(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureFormRole
DECLARE FUNCTION poppler_structure_element_get_form_state(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureFormState
DECLARE FUNCTION poppler_structure_element_get_glyph_orientation(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureGlyphOrientation
DECLARE FUNCTION poppler_structure_element_get_height(BYVAL AS PopplerStructureElement PTR) AS gdouble
DECLARE FUNCTION poppler_structure_element_get_id(BYVAL AS PopplerStructureElement PTR) AS gchar PTR
DECLARE FUNCTION poppler_structure_element_get_inline_align(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureInlineAlign
DECLARE FUNCTION poppler_structure_element_get_kind(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureElementKind
DECLARE FUNCTION poppler_structure_element_get_language(BYVAL AS PopplerStructureElement PTR) AS gchar PTR
DECLARE FUNCTION poppler_structure_element_get_line_height(BYVAL AS PopplerStructureElement PTR) AS gdouble
DECLARE FUNCTION poppler_structure_element_get_list_numbering(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureListNumbering
DECLARE SUB poppler_structure_element_get_padding(BYVAL AS PopplerStructureElement PTR, BYVAL AS gdouble PTR)
DECLARE FUNCTION poppler_structure_element_get_page(BYVAL AS PopplerStructureElement PTR) AS gint
DECLARE FUNCTION poppler_structure_element_get_placement(BYVAL AS PopplerStructureElement PTR) AS PopplerStructurePlacement
DECLARE FUNCTION poppler_structure_element_get_ruby_align(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureRubyAlign
DECLARE FUNCTION poppler_structure_element_get_ruby_position(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureRubyPosition
DECLARE FUNCTION poppler_structure_element_get_space_after(BYVAL AS PopplerStructureElement PTR) AS gdouble
DECLARE FUNCTION poppler_structure_element_get_space_before(BYVAL AS PopplerStructureElement PTR) AS gdouble
DECLARE FUNCTION poppler_structure_element_get_start_indent(BYVAL AS PopplerStructureElement PTR) AS gdouble
DECLARE SUB poppler_structure_element_get_table_border_style(BYVAL AS PopplerStructureElement PTR, BYVAL AS PopplerStructureBorderStyle PTR)
DECLARE FUNCTION poppler_structure_element_get_table_column_span(BYVAL AS PopplerStructureElement PTR) AS guint
DECLARE FUNCTION poppler_structure_element_get_table_headers(BYVAL AS PopplerStructureElement PTR) AS gchar PTR PTR
DECLARE SUB poppler_structure_element_get_table_padding(BYVAL AS PopplerStructureElement PTR, BYVAL AS gdouble PTR)
DECLARE FUNCTION poppler_structure_element_get_table_row_span(BYVAL AS PopplerStructureElement PTR) AS guint
DECLARE FUNCTION poppler_structure_element_get_table_scope(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureTableScope
DECLARE FUNCTION poppler_structure_element_get_table_summary(BYVAL AS PopplerStructureElement PTR) AS gchar PTR
DECLARE FUNCTION poppler_structure_element_get_text(BYVAL AS PopplerStructureElement PTR, BYVAL AS PopplerStructureGetTextFlags) AS gchar PTR
DECLARE FUNCTION poppler_structure_element_get_text_align(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureTextAlign
DECLARE FUNCTION poppler_structure_element_get_text_decoration_color(BYVAL AS PopplerStructureElement PTR, BYVAL AS PopplerColor PTR) AS gboolean
DECLARE FUNCTION poppler_structure_element_get_text_decoration_thickness(BYVAL AS PopplerStructureElement PTR) AS gdouble
DECLARE FUNCTION poppler_structure_element_get_text_decoration_type(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureTextDecoration
DECLARE FUNCTION poppler_structure_element_get_text_indent(BYVAL AS PopplerStructureElement PTR) AS gdouble
DECLARE FUNCTION poppler_structure_element_get_text_spans(BYVAL AS PopplerStructureElement PTR, BYVAL AS guint PTR) AS PopplerTextSpan PTR PTR
DECLARE FUNCTION poppler_structure_element_get_title(BYVAL AS PopplerStructureElement PTR) AS gchar PTR
DECLARE FUNCTION poppler_structure_element_get_width(BYVAL AS PopplerStructureElement PTR) AS gdouble
DECLARE FUNCTION poppler_structure_element_get_writing_mode(BYVAL AS PopplerStructureElement PTR) AS PopplerStructureWritingMode
DECLARE FUNCTION poppler_structure_element_is_block(BYVAL AS PopplerStructureElement PTR) AS gboolean
DECLARE FUNCTION poppler_structure_element_is_content(BYVAL AS PopplerStructureElement PTR) AS gboolean
DECLARE FUNCTION poppler_structure_element_is_grouping(BYVAL AS PopplerStructureElement PTR) AS gboolean
DECLARE FUNCTION poppler_structure_element_is_inline(BYVAL AS PopplerStructureElement PTR) AS gboolean
DECLARE FUNCTION poppler_structure_element_iter_new(BYVAL AS PopplerDocument PTR) AS PopplerStructureElementIter PTR
DECLARE FUNCTION poppler_structure_element_iter_copy(BYVAL AS PopplerStructureElementIter PTR) AS PopplerStructureElementIter PTR
DECLARE SUB poppler_structure_element_iter_free(BYVAL AS PopplerStructureElementIter PTR)
DECLARE FUNCTION poppler_structure_element_iter_get_child(BYVAL AS PopplerStructureElementIter PTR) AS PopplerStructureElementIter PTR
DECLARE FUNCTION poppler_structure_element_iter_get_element(BYVAL AS PopplerStructureElementIter PTR) AS PopplerStructureElement PTR
DECLARE FUNCTION poppler_structure_element_iter_next(BYVAL AS PopplerStructureElementIter PTR) AS gboolean
TYPE _PopplerTextAttributes
  AS gchar PTR font_name
  AS gdouble font_size
  AS gboolean is_underlined
  AS PopplerColor color
  AS gint start_index
  AS gint end_index
END TYPE
DECLARE FUNCTION poppler_structure_element_kind_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_ELEMENT_KIND (poppler_structure_element_kind_get_type())
DECLARE FUNCTION poppler_structure_form_role_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_FORM_ROLE (poppler_structure_form_role_get_type())
DECLARE FUNCTION poppler_structure_form_state_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_FORM_STATE (poppler_structure_form_state_get_type())
DECLARE FUNCTION poppler_structure_glyph_orientation_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_GLYPH_ORIENTATION (poppler_structure_glyph_orientation_get_type())
DECLARE FUNCTION poppler_structure_inline_align_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_INLINE_ALIGN (poppler_structure_inline_align_get_type())
DECLARE FUNCTION poppler_structure_list_numbering_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_LIST_NUMBERING (poppler_structure_list_numbering_get_type())
DECLARE FUNCTION poppler_structure_placement_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_PLACEMENT (poppler_structure_placement_get_type())
DECLARE FUNCTION poppler_structure_ruby_align_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_RUBY_ALIGN (poppler_structure_ruby_align_get_type())
DECLARE FUNCTION poppler_structure_ruby_position_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_RUBY_POSITION (poppler_structure_ruby_position_get_type())
DECLARE FUNCTION poppler_structure_table_scope_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_TABLE_SCOPE (poppler_structure_table_scope_get_type())
DECLARE FUNCTION poppler_structure_text_align_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_TEXT_ALIGN (poppler_structure_text_align_get_type())
DECLARE FUNCTION poppler_structure_text_decoration_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_TEXT_DECORATION (poppler_structure_text_decoration_get_type())
DECLARE FUNCTION poppler_structure_writing_mode_get_type() AS GType
#DEFINE POPPLER_TYPE_STRUCTURE_WRITING_MODE (poppler_structure_writing_mode_get_type())
DECLARE FUNCTION poppler_text_attributes_new() AS PopplerTextAttributes PTR
DECLARE FUNCTION poppler_text_attributes_copy(BYVAL AS PopplerTextAttributes PTR) AS PopplerTextAttributes PTR
DECLARE SUB poppler_text_attributes_free(BYVAL AS PopplerTextAttributes PTR)
DECLARE FUNCTION poppler_text_span_copy(BYVAL AS PopplerTextSpan PTR) AS PopplerTextSpan PTR
DECLARE SUB poppler_text_span_free(BYVAL AS PopplerTextSpan PTR)
DECLARE SUB poppler_text_span_get_color(BYVAL AS PopplerTextSpan PTR, BYVAL AS PopplerColor PTR)
DECLARE FUNCTION poppler_text_span_get_font_name(BYVAL AS PopplerTextSpan PTR) AS const gchar PTR
DECLARE FUNCTION poppler_text_span_get_text(BYVAL AS PopplerTextSpan PTR) AS const gchar PTR
DECLARE FUNCTION poppler_text_span_is_bold_font(BYVAL AS PopplerTextSpan PTR) AS gboolean
DECLARE FUNCTION poppler_text_span_is_fixed_width_font(BYVAL AS PopplerTextSpan PTR) AS gboolean
DECLARE FUNCTION poppler_text_span_is_serif_font(BYVAL AS PopplerTextSpan PTR) AS gboolean
' P_4

DECLARE FUNCTION poppler_date_parse(BYVAL AS const gchar PTR, BYVAL AS time_t PTR) AS gboolean
DECLARE FUNCTION poppler_get_backend() AS PopplerBackend
DECLARE FUNCTION poppler_get_version() AS const char PTR
DECLARE FUNCTION poppler_named_dest_from_bytestring(BYVAL AS const guint8 PTR, BYVAL AS gsize) AS char PTR
DECLARE FUNCTION poppler_named_dest_to_bytestring(BYVAL AS const char PTR, BYVAL AS gsize PTR) AS guint8 PTR
END EXTERN

