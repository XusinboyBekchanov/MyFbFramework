'            FreeBasic header file, auto-generated by
'                       ### girtobac ###
' LGPLv2.1 (C) 2013-2022 by Thomas{ doT ]Freiherr[ At ]gmx[ DoT }net
' Auto-translated from file /usr/share/gir-1.0/GstNet-1.0.gir
#INCLUDE ONCE "_GirToBac-0.0.bi"
' Repository version 1.2
#INCLUDE ONCE "Gio-2.0.bi"
#INCLUDE ONCE "Gst-1.0.bi"
#DEFINE GST_NET_TIME_PACKET_SIZE 16
TYPE AS _GstNetAddressMeta GstNetAddressMeta
TYPE AS _GstNetClientClock GstNetClientClock
TYPE AS _GstNetClientClockClass GstNetClientClockClass
TYPE AS _GstNetClientClockPrivate GstNetClientClockPrivate
TYPE AS _GstNetControlMessageMeta GstNetControlMessageMeta
TYPE AS _GstNetTimePacket GstNetTimePacket
TYPE AS _GstNetTimeProvider GstNetTimeProvider
TYPE AS _GstNetTimeProviderClass GstNetTimeProviderClass
TYPE AS _GstNetTimeProviderPrivate GstNetTimeProviderPrivate
TYPE AS _GstNtpClock GstNtpClock
TYPE AS _GstNtpClockClass GstNtpClockClass
#DEFINE GST_PTP_CLOCK_ID_NONE 18446744073709551615
#DEFINE GST_PTP_STATISTICS_BEST_MASTER_CLOCK_SELECTED @!"GstPtpStatisticsBestMasterClockSelected"
#DEFINE GST_PTP_STATISTICS_NEW_DOMAIN_FOUND @!"GstPtpStatisticsNewDomainFound"
#DEFINE GST_PTP_STATISTICS_PATH_DELAY_MEASURED @!"GstPtpStatisticsPathDelayMeasured"
#DEFINE GST_PTP_STATISTICS_TIME_UPDATED @!"GstPtpStatisticsTimeUpdated"
TYPE AS _GstPtpClock GstPtpClock
TYPE AS _GstPtpClockClass GstPtpClockClass
TYPE AS _GstPtpClockPrivate GstPtpClockPrivate
EXTERN "C" LIB "gstnet-1.0"
' P_X

' P_3

TYPE _GstNetAddressMeta
  AS GstMeta meta
  AS GSocketAddress PTR addr
END TYPE
DECLARE FUNCTION gst_net_address_meta_get_info() AS const GstMetaInfo PTR
TYPE _GstNetClientClock
  AS GstSystemClock clock
  AS GstNetClientClockPrivate PTR priv
  AS gpointer _gst_reserved(3)
END TYPE
DECLARE FUNCTION gst_net_client_clock_get_type() AS GType
#DEFINE GSTNET_TYPE_NET_CLIENT_CLOCK (gst_net_client_clock_get_type())
#DEFINE GSTNET_NET_CLIENT_CLOCK(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GSTNET_TYPE_NET_CLIENT_CLOCK, GstNetClientClock))
#DEFINE GSTNET_NET_CLIENT_CLOCK_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GSTNET_TYPE_NET_CLIENT_CLOCK, GstNetNetClientClockClass))
#DEFINE GSTNET_IS_NET_CLIENT_CLOCK(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GSTNET_TYPE_NET_CLIENT_CLOCK))
#DEFINE GSTNET_IS_CLASS_NET_CLIENT_CLOCK(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GSTNET_TYPE_NET_CLIENT_CLOCK))
#DEFINE GSTNET_NET_CLIENT_CLOCK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GSTNET_TYPE_NET_CLIENT_CLOCK, GstNetNetClientClockClass))
DECLARE FUNCTION gst_net_client_clock_new(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS GstClockTime) AS GstClock PTR
TYPE _GstNetClientClockClass
  AS GstSystemClockClass parent_class
  AS gpointer _gst_reserved(3)
END TYPE
TYPE _GstNetControlMessageMeta
  AS GstMeta meta
  AS GSocketControlMessage PTR message
END TYPE
DECLARE FUNCTION gst_net_control_message_meta_get_info() AS const GstMetaInfo PTR
TYPE _GstNetTimePacket
  AS GstClockTime local_time
  AS GstClockTime remote_time
END TYPE
DECLARE FUNCTION gst_net_time_packet_new(BYVAL AS const guint8 PTR) AS GstNetTimePacket PTR
DECLARE FUNCTION gst_net_time_packet_copy(BYVAL AS const GstNetTimePacket PTR) AS GstNetTimePacket PTR
DECLARE SUB gst_net_time_packet_free(BYVAL AS GstNetTimePacket PTR)
DECLARE FUNCTION gst_net_time_packet_send(BYVAL AS const GstNetTimePacket PTR, BYVAL AS GSocket PTR, BYVAL AS GSocketAddress PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION gst_net_time_packet_serialize(BYVAL AS const GstNetTimePacket PTR) AS guint8 PTR
DECLARE FUNCTION gst_net_time_packet_receive(BYVAL AS GSocket PTR, BYVAL AS GSocketAddress PTR PTR, BYVAL AS GError PTR PTR) AS GstNetTimePacket PTR
TYPE _GstNetTimeProvider
  AS GstObject parent
  AS GstNetTimeProviderPrivate PTR priv
  AS gpointer _gst_reserved(3)
END TYPE
DECLARE FUNCTION gst_net_time_provider_get_type() AS GType
#DEFINE GSTNET_TYPE_NET_TIME_PROVIDER (gst_net_time_provider_get_type())
#DEFINE GSTNET_NET_TIME_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GSTNET_TYPE_NET_TIME_PROVIDER, GstNetTimeProvider))
#DEFINE GSTNET_NET_TIME_PROVIDER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GSTNET_TYPE_NET_TIME_PROVIDER, GstNetNetTimeProviderClass))
#DEFINE GSTNET_IS_NET_TIME_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GSTNET_TYPE_NET_TIME_PROVIDER))
#DEFINE GSTNET_IS_CLASS_NET_TIME_PROVIDER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GSTNET_TYPE_NET_TIME_PROVIDER))
#DEFINE GSTNET_NET_TIME_PROVIDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GSTNET_TYPE_NET_TIME_PROVIDER, GstNetNetTimeProviderClass))
DECLARE FUNCTION gst_net_time_provider_new(BYVAL AS GstClock PTR, BYVAL AS const gchar PTR, BYVAL AS gint) AS GstNetTimeProvider PTR
TYPE _GstNetTimeProviderClass
  AS GstObjectClass parent_class
  AS gpointer _gst_reserved(3)
END TYPE
TYPE _GstNtpClock
  AS GstSystemClock clock
  AS GstNetClientClockPrivate PTR priv
  AS gpointer _gst_reserved(3)
END TYPE
DECLARE FUNCTION gst_ntp_clock_get_type() AS GType
#DEFINE GSTNET_TYPE_NTP_CLOCK (gst_ntp_clock_get_type())
#DEFINE GSTNET_NTP_CLOCK(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GSTNET_TYPE_NTP_CLOCK, GstNtpClock))
#DEFINE GSTNET_NTP_CLOCK_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GSTNET_TYPE_NTP_CLOCK, GstNetNtpClockClass))
#DEFINE GSTNET_IS_NTP_CLOCK(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GSTNET_TYPE_NTP_CLOCK))
#DEFINE GSTNET_IS_CLASS_NTP_CLOCK(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GSTNET_TYPE_NTP_CLOCK))
#DEFINE GSTNET_NTP_CLOCK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GSTNET_TYPE_NTP_CLOCK, GstNetNtpClockClass))
DECLARE FUNCTION gst_ntp_clock_new(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS GstClockTime) AS GstClock PTR
TYPE _GstNtpClockClass
  AS GstSystemClockClass parent_class
  AS gpointer _gst_reserved(3)
END TYPE
TYPE _GstPtpClock
  AS GstSystemClock clock
  AS GstPtpClockPrivate PTR priv
  AS gpointer _gst_reserved(3)
END TYPE
DECLARE FUNCTION gst_ptp_clock_get_type() AS GType
#DEFINE GSTNET_TYPE_PTP_CLOCK (gst_ptp_clock_get_type())
#DEFINE GSTNET_PTP_CLOCK(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GSTNET_TYPE_PTP_CLOCK, GstPtpClock))
#DEFINE GSTNET_PTP_CLOCK_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GSTNET_TYPE_PTP_CLOCK, GstNetPtpClockClass))
#DEFINE GSTNET_IS_PTP_CLOCK(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GSTNET_TYPE_PTP_CLOCK))
#DEFINE GSTNET_IS_CLASS_PTP_CLOCK(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GSTNET_TYPE_PTP_CLOCK))
#DEFINE GSTNET_PTP_CLOCK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GSTNET_TYPE_PTP_CLOCK, GstNetPtpClockClass))
DECLARE FUNCTION gst_ptp_clock_new(BYVAL AS const gchar PTR, BYVAL AS guint) AS GstClock PTR
TYPE _GstPtpClockClass
  AS GstSystemClockClass parent_class
  AS gpointer _gst_reserved(3)
END TYPE
TYPE GstPtpStatisticsCallback AS FUNCTION CDECL(BYVAL AS guint8, BYVAL AS const GstStructure PTR, BYVAL AS gpointer) AS gboolean
' P_4

DECLARE FUNCTION gst_buffer_add_net_address_meta(BYVAL AS GstBuffer PTR, BYVAL AS GSocketAddress PTR) AS GstNetAddressMeta PTR
DECLARE FUNCTION gst_buffer_add_net_control_message_meta(BYVAL AS GstBuffer PTR, BYVAL AS GSocketControlMessage PTR) AS GstNetControlMessageMeta PTR
DECLARE FUNCTION gst_buffer_get_net_address_meta(BYVAL AS GstBuffer PTR) AS GstNetAddressMeta PTR
DECLARE FUNCTION gst_net_address_meta_api_get_type() AS GType
DECLARE FUNCTION gst_net_control_message_meta_api_get_type() AS GType
DECLARE SUB gst_ptp_deinit()
DECLARE FUNCTION gst_ptp_init(BYVAL AS guint64, BYVAL AS gchar PTR PTR) AS gboolean
DECLARE FUNCTION gst_ptp_is_initialized() AS gboolean
DECLARE FUNCTION gst_ptp_is_supported() AS gboolean
DECLARE FUNCTION gst_ptp_statistics_callback_add(BYVAL AS GstPtpStatisticsCallback, BYVAL AS gpointer, BYVAL AS GDestroyNotify) AS gulong
DECLARE SUB gst_ptp_statistics_callback_remove(BYVAL AS gulong)
END EXTERN

