'            FreeBasic header file, auto-generated by
'                       ### girtobac ###
' LGPLv2.1 (C) 2013-2022 by Thomas{ doT ]Freiherr[ At ]gmx[ DoT }net
' Auto-translated from file /usr/share/gir-1.0/GstCheck-1.0.gir
#INCLUDE ONCE "_GirToBac-0.0.bi"
' Repository version 1.2
#INCLUDE ONCE "Gst-1.0.bi"
TYPE AS _GstCheckABIStruct GstCheckABIStruct
TYPE AS _GstCheckLogFilter GstCheckLogFilter
TYPE AS _GstHarness GstHarness
TYPE AS _GstHarnessPrivate GstHarnessPrivate
TYPE AS _GstHarnessThread GstHarnessThread
TYPE AS _GstStreamConsistency GstStreamConsistency
TYPE AS _GstTestClock GstTestClock
TYPE AS _GstTestClockClass GstTestClockClass
TYPE AS _GstTestClockPrivate GstTestClockPrivate
EXTERN "C" LIB "gstcheck-1.0"
' P_X

' P_3

TYPE _GstCheckABIStruct
  AS const char PTR name
  AS int size
  AS int abi_size
END TYPE
TYPE GstCheckLogFilterFunc AS FUNCTION CDECL(BYVAL AS const gchar PTR, BYVAL AS GLogLevelFlags, BYVAL AS const gchar PTR, BYVAL AS gpointer) AS gboolean
TYPE _GstHarness
  AS GstElement PTR element
  AS GstPad PTR srcpad
  AS GstPad PTR sinkpad
  AS GstHarness PTR src_harness
  AS GstHarness PTR sink_harness
  AS GstHarnessPrivate PTR priv
END TYPE
DECLARE SUB gst_harness_add_element_full(BYVAL AS GstHarness PTR, BYVAL AS GstElement PTR, BYVAL AS GstStaticPadTemplate PTR, BYVAL AS const gchar PTR, BYVAL AS GstStaticPadTemplate PTR, BYVAL AS const gchar PTR)
DECLARE SUB gst_harness_add_element_sink_pad(BYVAL AS GstHarness PTR, BYVAL AS GstPad PTR)
DECLARE SUB gst_harness_add_element_src_pad(BYVAL AS GstHarness PTR, BYVAL AS GstPad PTR)
DECLARE SUB gst_harness_add_parse(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR)
DECLARE SUB gst_harness_add_probe(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS GstPadProbeType, BYVAL AS GstPadProbeCallback, BYVAL AS gpointer, BYVAL AS GDestroyNotify)
DECLARE SUB gst_harness_add_propose_allocation_meta(BYVAL AS GstHarness PTR, BYVAL AS GType, BYVAL AS const GstStructure PTR)
DECLARE SUB gst_harness_add_sink(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR)
DECLARE SUB gst_harness_add_sink_harness(BYVAL AS GstHarness PTR, BYVAL AS GstHarness PTR)
DECLARE SUB gst_harness_add_sink_parse(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR)
DECLARE SUB gst_harness_add_src(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR, BYVAL AS gboolean)
DECLARE SUB gst_harness_add_src_harness(BYVAL AS GstHarness PTR, BYVAL AS GstHarness PTR, BYVAL AS gboolean)
DECLARE SUB gst_harness_add_src_parse(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR, BYVAL AS gboolean)
DECLARE FUNCTION gst_harness_buffers_in_queue(BYVAL AS GstHarness PTR) AS guint
DECLARE FUNCTION gst_harness_buffers_received(BYVAL AS GstHarness PTR) AS guint
DECLARE FUNCTION gst_harness_crank_multiple_clock_waits(BYVAL AS GstHarness PTR, BYVAL AS guint) AS gboolean
DECLARE FUNCTION gst_harness_crank_single_clock_wait(BYVAL AS GstHarness PTR) AS gboolean
DECLARE FUNCTION gst_harness_create_buffer(BYVAL AS GstHarness PTR, BYVAL AS gsize) AS GstBuffer PTR
DECLARE SUB gst_harness_dump_to_file(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR)
DECLARE FUNCTION gst_harness_events_in_queue(BYVAL AS GstHarness PTR) AS guint
DECLARE FUNCTION gst_harness_events_received(BYVAL AS GstHarness PTR) AS guint
DECLARE FUNCTION gst_harness_find_element(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR) AS GstElement PTR
DECLARE SUB gst_harness_get(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, ...)
DECLARE SUB gst_harness_get_allocator(BYVAL AS GstHarness PTR, BYVAL AS GstAllocator PTR PTR, BYVAL AS GstAllocationParams PTR)
DECLARE FUNCTION gst_harness_get_last_pushed_timestamp(BYVAL AS GstHarness PTR) AS GstClockTime
DECLARE FUNCTION gst_harness_get_testclock(BYVAL AS GstHarness PTR) AS GstTestClock PTR
DECLARE SUB gst_harness_play(BYVAL AS GstHarness PTR)
DECLARE FUNCTION gst_harness_pull(BYVAL AS GstHarness PTR) AS GstBuffer PTR
DECLARE FUNCTION gst_harness_pull_event(BYVAL AS GstHarness PTR) AS GstEvent PTR
DECLARE FUNCTION gst_harness_pull_upstream_event(BYVAL AS GstHarness PTR) AS GstEvent PTR
DECLARE FUNCTION gst_harness_push(BYVAL AS GstHarness PTR, BYVAL AS GstBuffer PTR) AS GstFlowReturn
DECLARE FUNCTION gst_harness_push_and_pull(BYVAL AS GstHarness PTR, BYVAL AS GstBuffer PTR) AS GstBuffer PTR
DECLARE FUNCTION gst_harness_push_event(BYVAL AS GstHarness PTR, BYVAL AS GstEvent PTR) AS gboolean
DECLARE FUNCTION gst_harness_push_from_src(BYVAL AS GstHarness PTR) AS GstFlowReturn
DECLARE FUNCTION gst_harness_push_to_sink(BYVAL AS GstHarness PTR) AS GstFlowReturn
DECLARE FUNCTION gst_harness_push_upstream_event(BYVAL AS GstHarness PTR, BYVAL AS GstEvent PTR) AS gboolean
DECLARE FUNCTION gst_harness_query_latency(BYVAL AS GstHarness PTR) AS GstClockTime
DECLARE SUB gst_harness_set(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, ...)
DECLARE SUB gst_harness_set_blocking_push_mode(BYVAL AS GstHarness PTR)
DECLARE SUB gst_harness_set_caps(BYVAL AS GstHarness PTR, BYVAL AS GstCaps PTR, BYVAL AS GstCaps PTR)
DECLARE SUB gst_harness_set_caps_str(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR)
DECLARE SUB gst_harness_set_drop_buffers(BYVAL AS GstHarness PTR, BYVAL AS gboolean)
DECLARE SUB gst_harness_set_forwarding(BYVAL AS GstHarness PTR, BYVAL AS gboolean)
DECLARE SUB gst_harness_set_propose_allocator(BYVAL AS GstHarness PTR, BYVAL AS GstAllocator PTR, BYVAL AS const GstAllocationParams PTR)
DECLARE SUB gst_harness_set_sink_caps(BYVAL AS GstHarness PTR, BYVAL AS GstCaps PTR)
DECLARE SUB gst_harness_set_sink_caps_str(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR)
DECLARE SUB gst_harness_set_src_caps(BYVAL AS GstHarness PTR, BYVAL AS GstCaps PTR)
DECLARE SUB gst_harness_set_src_caps_str(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR)
DECLARE FUNCTION gst_harness_set_time(BYVAL AS GstHarness PTR, BYVAL AS GstClockTime) AS gboolean
DECLARE SUB gst_harness_set_upstream_latency(BYVAL AS GstHarness PTR, BYVAL AS GstClockTime)
DECLARE FUNCTION gst_harness_sink_push_many(BYVAL AS GstHarness PTR, BYVAL AS gint) AS GstFlowReturn
DECLARE FUNCTION gst_harness_src_crank_and_push_many(BYVAL AS GstHarness PTR, BYVAL AS gint, BYVAL AS gint) AS GstFlowReturn
DECLARE FUNCTION gst_harness_src_push_event(BYVAL AS GstHarness PTR) AS gboolean
DECLARE FUNCTION gst_harness_stress_custom_start(BYVAL AS GstHarness PTR, BYVAL AS GFunc, BYVAL AS GFunc, BYVAL AS gpointer, BYVAL AS gulong) AS GstHarnessThread PTR
DECLARE FUNCTION gst_harness_stress_property_start_full(BYVAL AS GstHarness PTR, BYVAL AS const gchar PTR, BYVAL AS const GValue PTR, BYVAL AS gulong) AS GstHarnessThread PTR
DECLARE FUNCTION gst_harness_stress_push_buffer_start_full(BYVAL AS GstHarness PTR, BYVAL AS GstCaps PTR, BYVAL AS const GstSegment PTR, BYVAL AS GstBuffer PTR, BYVAL AS gulong) AS GstHarnessThread PTR
DECLARE FUNCTION gst_harness_stress_push_buffer_with_cb_start_full(BYVAL AS GstHarness PTR, BYVAL AS GstCaps PTR, BYVAL AS const GstSegment PTR, BYVAL AS GstHarnessPrepareBufferFunc, BYVAL AS gpointer, BYVAL AS GDestroyNotify, BYVAL AS gulong) AS GstHarnessThread PTR
DECLARE FUNCTION gst_harness_stress_push_event_start_full(BYVAL AS GstHarness PTR, BYVAL AS GstEvent PTR, BYVAL AS gulong) AS GstHarnessThread PTR
DECLARE FUNCTION gst_harness_stress_push_event_with_cb_start_full(BYVAL AS GstHarness PTR, BYVAL AS GstHarnessPrepareEventFunc, BYVAL AS gpointer, BYVAL AS GDestroyNotify, BYVAL AS gulong) AS GstHarnessThread PTR
DECLARE FUNCTION gst_harness_stress_push_upstream_event_start_full(BYVAL AS GstHarness PTR, BYVAL AS GstEvent PTR, BYVAL AS gulong) AS GstHarnessThread PTR
DECLARE FUNCTION gst_harness_stress_push_upstream_event_with_cb_start_full(BYVAL AS GstHarness PTR, BYVAL AS GstHarnessPrepareEventFunc, BYVAL AS gpointer, BYVAL AS GDestroyNotify, BYVAL AS gulong) AS GstHarnessThread PTR
DECLARE FUNCTION gst_harness_stress_requestpad_start_full(BYVAL AS GstHarness PTR, BYVAL AS GstPadTemplate PTR, BYVAL AS const gchar PTR, BYVAL AS GstCaps PTR, BYVAL AS gboolean, BYVAL AS gulong) AS GstHarnessThread PTR
DECLARE FUNCTION gst_harness_stress_statechange_start_full(BYVAL AS GstHarness PTR, BYVAL AS gulong) AS GstHarnessThread PTR
DECLARE FUNCTION gst_harness_take_all_data(BYVAL AS GstHarness PTR, BYVAL AS gsize PTR) AS guint8 PTR
DECLARE FUNCTION gst_harness_take_all_data_as_buffer(BYVAL AS GstHarness PTR) AS GstBuffer PTR
DECLARE FUNCTION gst_harness_take_all_data_as_bytes(BYVAL AS GstHarness PTR) AS GBytes PTR
DECLARE SUB gst_harness_teardown(BYVAL AS GstHarness PTR)
DECLARE FUNCTION gst_harness_try_pull(BYVAL AS GstHarness PTR) AS GstBuffer PTR
DECLARE FUNCTION gst_harness_try_pull_event(BYVAL AS GstHarness PTR) AS GstEvent PTR
DECLARE FUNCTION gst_harness_try_pull_upstream_event(BYVAL AS GstHarness PTR) AS GstEvent PTR
DECLARE FUNCTION gst_harness_upstream_events_in_queue(BYVAL AS GstHarness PTR) AS guint
DECLARE FUNCTION gst_harness_upstream_events_received(BYVAL AS GstHarness PTR) AS guint
DECLARE SUB gst_harness_use_systemclock(BYVAL AS GstHarness PTR)
DECLARE SUB gst_harness_use_testclock(BYVAL AS GstHarness PTR)
DECLARE FUNCTION gst_harness_wait_for_clock_id_waits(BYVAL AS GstHarness PTR, BYVAL AS guint, BYVAL AS guint) AS gboolean
DECLARE FUNCTION gst_harness_new(BYVAL AS const gchar PTR) AS GstHarness PTR
DECLARE FUNCTION gst_harness_new_empty() AS GstHarness PTR
DECLARE FUNCTION gst_harness_new_full(BYVAL AS GstElement PTR, BYVAL AS GstStaticPadTemplate PTR, BYVAL AS const gchar PTR, BYVAL AS GstStaticPadTemplate PTR, BYVAL AS const gchar PTR) AS GstHarness PTR
DECLARE FUNCTION gst_harness_new_parse(BYVAL AS const gchar PTR) AS GstHarness PTR
DECLARE FUNCTION gst_harness_new_with_element(BYVAL AS GstElement PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR) AS GstHarness PTR
DECLARE FUNCTION gst_harness_new_with_padnames(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR) AS GstHarness PTR
DECLARE FUNCTION gst_harness_new_with_templates(BYVAL AS const gchar PTR, BYVAL AS GstStaticPadTemplate PTR, BYVAL AS GstStaticPadTemplate PTR) AS GstHarness PTR
DECLARE FUNCTION gst_harness_stress_thread_stop(BYVAL AS GstHarnessThread PTR) AS guint
TYPE GstHarnessPrepareBufferFunc AS FUNCTION CDECL(BYVAL AS GstHarness PTR, BYVAL AS gpointer) AS GstBuffer PTR
TYPE GstHarnessPrepareEventFunc AS FUNCTION CDECL(BYVAL AS GstHarness PTR, BYVAL AS gpointer) AS GstEvent PTR
TYPE _GstTestClock
  AS GstClock parent
  AS GstTestClockPrivate PTR priv
END TYPE
DECLARE FUNCTION gst_test_clock_get_type() AS GType
#DEFINE GSTCHECK_TYPE_TEST_CLOCK (gst_test_clock_get_type())
#DEFINE GSTCHECK_TEST_CLOCK(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GSTCHECK_TYPE_TEST_CLOCK, GstTestClock))
#DEFINE GSTCHECK_TEST_CLOCK_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GSTCHECK_TYPE_TEST_CLOCK, GstCheckTestClockClass))
#DEFINE GSTCHECK_IS_TEST_CLOCK(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GSTCHECK_TYPE_TEST_CLOCK))
#DEFINE GSTCHECK_IS_CLASS_TEST_CLOCK(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GSTCHECK_TYPE_TEST_CLOCK))
#DEFINE GSTCHECK_TEST_CLOCK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GSTCHECK_TYPE_TEST_CLOCK, GstCheckTestClockClass))
DECLARE FUNCTION gst_test_clock_new() AS GstClock PTR
DECLARE FUNCTION gst_test_clock_new_with_start_time(BYVAL AS GstClockTime) AS GstClock PTR
DECLARE FUNCTION gst_test_clock_id_list_get_latest_time(BYVAL AS const GList PTR) AS GstClockTime
DECLARE SUB gst_test_clock_advance_time(BYVAL AS GstTestClock PTR, BYVAL AS GstClockTimeDiff)
DECLARE FUNCTION gst_test_clock_crank(BYVAL AS GstTestClock PTR) AS gboolean
DECLARE FUNCTION gst_test_clock_get_next_entry_time(BYVAL AS GstTestClock PTR) AS GstClockTime
DECLARE FUNCTION gst_test_clock_has_id(BYVAL AS GstTestClock PTR, BYVAL AS GstClockID) AS gboolean
DECLARE FUNCTION gst_test_clock_peek_id_count(BYVAL AS GstTestClock PTR) AS guint
DECLARE FUNCTION gst_test_clock_peek_next_pending_id(BYVAL AS GstTestClock PTR, BYVAL AS GstClockID PTR) AS gboolean
DECLARE FUNCTION gst_test_clock_process_id_list(BYVAL AS GstTestClock PTR, BYVAL AS const GList PTR) AS guint
DECLARE FUNCTION gst_test_clock_process_next_clock_id(BYVAL AS GstTestClock PTR) AS GstClockID
DECLARE SUB gst_test_clock_set_time(BYVAL AS GstTestClock PTR, BYVAL AS GstClockTime)
DECLARE FUNCTION gst_test_clock_timed_wait_for_multiple_pending_ids(BYVAL AS GstTestClock PTR, BYVAL AS guint, BYVAL AS guint, BYVAL AS GList PTR PTR) AS gboolean
DECLARE SUB gst_test_clock_wait_for_multiple_pending_ids(BYVAL AS GstTestClock PTR, BYVAL AS guint, BYVAL AS GList PTR PTR)
DECLARE SUB gst_test_clock_wait_for_next_pending_id(BYVAL AS GstTestClock PTR, BYVAL AS GstClockID PTR)
DECLARE SUB gst_test_clock_wait_for_pending_id_count(BYVAL AS GstTestClock PTR, BYVAL AS guint)
TYPE _GstTestClockClass
  AS GstClockClass parent_class
END TYPE
' P_4

DECLARE FUNCTION gst_buffer_straw_get_buffer(BYVAL AS GstElement PTR, BYVAL AS GstPad PTR) AS GstBuffer PTR
DECLARE SUB gst_buffer_straw_start_pipeline(BYVAL AS GstElement PTR, BYVAL AS GstPad PTR)
DECLARE SUB gst_buffer_straw_stop_pipeline(BYVAL AS GstElement PTR, BYVAL AS GstPad PTR)
DECLARE SUB gst_check_abi_list(BYVAL AS GstCheckABIStruct PTR, BYVAL AS gboolean)
DECLARE FUNCTION gst_check_add_log_filter(BYVAL AS const gchar PTR, BYVAL AS GLogLevelFlags, BYVAL AS GRegex PTR, BYVAL AS GstCheckLogFilterFunc, BYVAL AS gpointer, BYVAL AS GDestroyNotify) AS GstCheckLogFilter PTR
DECLARE SUB gst_check_buffer_data(BYVAL AS GstBuffer PTR, BYVAL AS gconstpointer, BYVAL AS gsize)
DECLARE SUB gst_check_caps_equal(BYVAL AS GstCaps PTR, BYVAL AS GstCaps PTR)
DECLARE FUNCTION gst_check_chain_func(BYVAL AS GstPad PTR, BYVAL AS GstObject PTR, BYVAL AS GstBuffer PTR) AS GstFlowReturn
DECLARE SUB gst_check_clear_log_filter()
DECLARE SUB gst_check_drop_buffers()
DECLARE SUB gst_check_element_push_buffer(BYVAL AS const gchar PTR, BYVAL AS GstBuffer PTR, BYVAL AS GstCaps PTR, BYVAL AS GstBuffer PTR, BYVAL AS GstCaps PTR)
DECLARE SUB gst_check_element_push_buffer_list(BYVAL AS const gchar PTR, BYVAL AS GList PTR, BYVAL AS GstCaps PTR, BYVAL AS GList PTR, BYVAL AS GstCaps PTR, BYVAL AS GstFlowReturn)
DECLARE SUB gst_check_init(BYVAL AS int PTR, BYVAL AS char PTR PTR PTR)
DECLARE SUB gst_check_message_error(BYVAL AS GstMessage PTR, BYVAL AS GstMessageType, BYVAL AS GQuark, BYVAL AS gint)
DECLARE SUB gst_check_object_destroyed_on_unref(BYVAL AS gpointer)
DECLARE SUB gst_check_objects_destroyed_on_unref(BYVAL AS gpointer, BYVAL AS gpointer, ...)
DECLARE SUB gst_check_remove_log_filter(BYVAL AS GstCheckLogFilter PTR)
DECLARE FUNCTION gst_check_run_suite(BYVAL AS Suite PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR) AS gint
DECLARE FUNCTION gst_check_setup_element(BYVAL AS const gchar PTR) AS GstElement PTR
DECLARE SUB gst_check_setup_events(BYVAL AS GstPad PTR, BYVAL AS GstElement PTR, BYVAL AS GstCaps PTR, BYVAL AS GstFormat)
DECLARE SUB gst_check_setup_events_with_stream_id(BYVAL AS GstPad PTR, BYVAL AS GstElement PTR, BYVAL AS GstCaps PTR, BYVAL AS GstFormat, BYVAL AS const gchar PTR)
DECLARE FUNCTION gst_check_setup_sink_pad(BYVAL AS GstElement PTR, BYVAL AS GstStaticPadTemplate PTR) AS GstPad PTR
DECLARE FUNCTION gst_check_setup_sink_pad_by_name(BYVAL AS GstElement PTR, BYVAL AS GstStaticPadTemplate PTR, BYVAL AS const gchar PTR) AS GstPad PTR
DECLARE FUNCTION gst_check_setup_sink_pad_by_name_from_template(BYVAL AS GstElement PTR, BYVAL AS GstPadTemplate PTR, BYVAL AS const gchar PTR) AS GstPad PTR
DECLARE FUNCTION gst_check_setup_sink_pad_from_template(BYVAL AS GstElement PTR, BYVAL AS GstPadTemplate PTR) AS GstPad PTR
DECLARE FUNCTION gst_check_setup_src_pad(BYVAL AS GstElement PTR, BYVAL AS GstStaticPadTemplate PTR) AS GstPad PTR
DECLARE FUNCTION gst_check_setup_src_pad_by_name(BYVAL AS GstElement PTR, BYVAL AS GstStaticPadTemplate PTR, BYVAL AS const gchar PTR) AS GstPad PTR
DECLARE FUNCTION gst_check_setup_src_pad_by_name_from_template(BYVAL AS GstElement PTR, BYVAL AS GstPadTemplate PTR, BYVAL AS const gchar PTR) AS GstPad PTR
DECLARE FUNCTION gst_check_setup_src_pad_from_template(BYVAL AS GstElement PTR, BYVAL AS GstPadTemplate PTR) AS GstPad PTR
DECLARE SUB gst_check_teardown_element(BYVAL AS GstElement PTR)
DECLARE SUB gst_check_teardown_pad_by_name(BYVAL AS GstElement PTR, BYVAL AS const gchar PTR)
DECLARE SUB gst_check_teardown_sink_pad(BYVAL AS GstElement PTR)
DECLARE SUB gst_check_teardown_src_pad(BYVAL AS GstElement PTR)
DECLARE FUNCTION gst_consistency_checker_add_pad(BYVAL AS GstStreamConsistency PTR, BYVAL AS GstPad PTR) AS gboolean
DECLARE SUB gst_consistency_checker_free(BYVAL AS GstStreamConsistency PTR)
DECLARE FUNCTION gst_consistency_checker_new(BYVAL AS GstPad PTR) AS GstStreamConsistency PTR
DECLARE SUB gst_consistency_checker_reset(BYVAL AS GstStreamConsistency PTR)
END EXTERN

