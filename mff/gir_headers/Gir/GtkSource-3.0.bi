'            FreeBasic header file, auto-generated by
'                       ### girtobac ###
' LGPLv2.1 (C) 2013-2022 by Thomas{ doT ]Freiherr[ At ]gmx[ DoT }net
' Auto-translated from file /usr/share/gir-1.0/GtkSource-3.0.gir
#INCLUDE ONCE "_GirToBac-0.0.bi"

#INCLUDE ONCE "crt/time.bi"

' Repository version 1.2
#INCLUDE ONCE "Gdk-3.0.bi"
#INCLUDE ONCE "Gtk-3.0.bi"
TYPE AS LONG GtkSourceBackgroundPatternType
ENUM
  GTK_SOURCE_BACKGROUND_PATTERN_TYPE_NONE = 0
  GTK_SOURCE_BACKGROUND_PATTERN_TYPE_GRID = 1
END ENUM
TYPE AS LONG GtkSourceBracketMatchType
ENUM
  GTK_SOURCE_BRACKET_MATCH_NONE = 0
  GTK_SOURCE_BRACKET_MATCH_OUT_OF_RANGE = 1
  GTK_SOURCE_BRACKET_MATCH_NOT_FOUND = 2
  GTK_SOURCE_BRACKET_MATCH_FOUND = 3
END ENUM
TYPE AS _GtkSourceBuffer GtkSourceBuffer
TYPE AS _GtkSourceBufferClass GtkSourceBufferClass
TYPE AS _GtkSourceBufferPrivate GtkSourceBufferPrivate
TYPE AS LONG GtkSourceChangeCaseType
ENUM
  GTK_SOURCE_CHANGE_CASE_LOWER = 0
  GTK_SOURCE_CHANGE_CASE_UPPER = 1
  GTK_SOURCE_CHANGE_CASE_TOGGLE = 2
  GTK_SOURCE_CHANGE_CASE_TITLE = 3
END ENUM
TYPE AS _GtkSourceCompletion GtkSourceCompletion
TYPE AS LONG GtkSourceCompletionActivation
ENUM
  GTK_SOURCE_COMPLETION_ACTIVATION_NONE = 0
  GTK_SOURCE_COMPLETION_ACTIVATION_INTERACTIVE = 1
  GTK_SOURCE_COMPLETION_ACTIVATION_USER_REQUESTED = 2
END ENUM
TYPE AS _GtkSourceCompletionClass GtkSourceCompletionClass
TYPE AS _GtkSourceCompletionContext GtkSourceCompletionContext
TYPE AS _GtkSourceCompletionContextClass GtkSourceCompletionContextClass
TYPE AS _GtkSourceCompletionContextPrivate GtkSourceCompletionContextPrivate
TYPE AS LONG GtkSourceCompletionError
ENUM
  GTK_SOURCE_COMPLETION_ERROR_ALREADY_BOUND = 0
  GTK_SOURCE_COMPLETION_ERROR_NOT_BOUND = 1
END ENUM
TYPE AS _GtkSourceCompletionInfo GtkSourceCompletionInfo
TYPE AS _GtkSourceCompletionInfoClass GtkSourceCompletionInfoClass
TYPE AS _GtkSourceCompletionInfoPrivate GtkSourceCompletionInfoPrivate
TYPE AS _GtkSourceCompletionItem GtkSourceCompletionItem
TYPE AS _GtkSourceCompletionItemClass GtkSourceCompletionItemClass
TYPE AS _GtkSourceCompletionItemPrivate GtkSourceCompletionItemPrivate
TYPE AS _GtkSourceCompletionPrivate GtkSourceCompletionPrivate
TYPE AS _GtkSourceCompletionProposal GtkSourceCompletionProposal
TYPE AS _GtkSourceCompletionProposalIface GtkSourceCompletionProposalIface
TYPE AS _GtkSourceCompletionProvider GtkSourceCompletionProvider
TYPE AS _GtkSourceCompletionProviderIface GtkSourceCompletionProviderIface
TYPE AS _GtkSourceCompletionWords GtkSourceCompletionWords
TYPE AS _GtkSourceCompletionWordsClass GtkSourceCompletionWordsClass
TYPE AS _GtkSourceCompletionWordsPrivate GtkSourceCompletionWordsPrivate
TYPE AS LONG GtkSourceCompressionType
ENUM
  GTK_SOURCE_COMPRESSION_TYPE_NONE = 0
  GTK_SOURCE_COMPRESSION_TYPE_GZIP = 1
END ENUM
TYPE AS LONG GtkSourceDrawSpacesFlags
ENUM
  GTK_SOURCE_DRAW_SPACES_SPACE = 1
  GTK_SOURCE_DRAW_SPACES_TAB = 2
  GTK_SOURCE_DRAW_SPACES_NEWLINE = 4
  GTK_SOURCE_DRAW_SPACES_NBSP = 8
  GTK_SOURCE_DRAW_SPACES_LEADING = 16
  GTK_SOURCE_DRAW_SPACES_TEXT = 32
  GTK_SOURCE_DRAW_SPACES_TRAILING = 64
  GTK_SOURCE_DRAW_SPACES_ALL = 127
END ENUM
TYPE AS _GtkSourceEncoding GtkSourceEncoding
TYPE AS _GtkSourceFile GtkSourceFile
TYPE AS _GtkSourceFileClass GtkSourceFileClass
TYPE AS _GtkSourceFileLoader GtkSourceFileLoader
TYPE AS _GtkSourceFileLoaderClass GtkSourceFileLoaderClass
TYPE AS LONG GtkSourceFileLoaderError
ENUM
  GTK_SOURCE_FILE_LOADER_ERROR_TOO_BIG = 0
  GTK_SOURCE_FILE_LOADER_ERROR_ENCODING_AUTO_DETECTION_FAILED = 1
  GTK_SOURCE_FILE_LOADER_ERROR_CONVERSION_FALLBACK = 2
END ENUM
TYPE AS _GtkSourceFileLoaderPrivate GtkSourceFileLoaderPrivate
TYPE AS _GtkSourceFilePrivate GtkSourceFilePrivate
TYPE AS _GtkSourceFileSaver GtkSourceFileSaver
TYPE AS _GtkSourceFileSaverClass GtkSourceFileSaverClass
TYPE AS LONG GtkSourceFileSaverError
ENUM
  GTK_SOURCE_FILE_SAVER_ERROR_INVALID_CHARS = 0
  GTK_SOURCE_FILE_SAVER_ERROR_EXTERNALLY_MODIFIED = 1
END ENUM
TYPE AS LONG GtkSourceFileSaverFlags
ENUM
  GTK_SOURCE_FILE_SAVER_FLAGS_NONE = 0
  GTK_SOURCE_FILE_SAVER_FLAGS_IGNORE_INVALID_CHARS = 1
  GTK_SOURCE_FILE_SAVER_FLAGS_IGNORE_MODIFICATION_TIME = 2
  GTK_SOURCE_FILE_SAVER_FLAGS_CREATE_BACKUP = 4
END ENUM
TYPE AS _GtkSourceFileSaverPrivate GtkSourceFileSaverPrivate
TYPE AS _GtkSourceGutter GtkSourceGutter
TYPE AS _GtkSourceGutterClass GtkSourceGutterClass
TYPE AS _GtkSourceGutterPrivate GtkSourceGutterPrivate
TYPE AS _GtkSourceGutterRenderer GtkSourceGutterRenderer
TYPE AS LONG GtkSourceGutterRendererAlignmentMode
ENUM
  GTK_SOURCE_GUTTER_RENDERER_ALIGNMENT_MODE_CELL = 0
  GTK_SOURCE_GUTTER_RENDERER_ALIGNMENT_MODE_FIRST = 1
  GTK_SOURCE_GUTTER_RENDERER_ALIGNMENT_MODE_LAST = 2
END ENUM
TYPE AS _GtkSourceGutterRendererClass GtkSourceGutterRendererClass
TYPE AS _GtkSourceGutterRendererPixbuf GtkSourceGutterRendererPixbuf
TYPE AS _GtkSourceGutterRendererPixbufClass GtkSourceGutterRendererPixbufClass
TYPE AS _GtkSourceGutterRendererPixbufPrivate GtkSourceGutterRendererPixbufPrivate
TYPE AS _GtkSourceGutterRendererPrivate GtkSourceGutterRendererPrivate
TYPE AS LONG GtkSourceGutterRendererState
ENUM
  GTK_SOURCE_GUTTER_RENDERER_STATE_NORMAL = 0
  GTK_SOURCE_GUTTER_RENDERER_STATE_CURSOR = 1
  GTK_SOURCE_GUTTER_RENDERER_STATE_PRELIT = 2
  GTK_SOURCE_GUTTER_RENDERER_STATE_SELECTED = 4
END ENUM
TYPE AS _GtkSourceGutterRendererText GtkSourceGutterRendererText
TYPE AS _GtkSourceGutterRendererTextClass GtkSourceGutterRendererTextClass
TYPE AS _GtkSourceGutterRendererTextPrivate GtkSourceGutterRendererTextPrivate
TYPE AS _GtkSourceLanguage GtkSourceLanguage
TYPE AS _GtkSourceLanguageClass GtkSourceLanguageClass
TYPE AS _GtkSourceLanguageManager GtkSourceLanguageManager
TYPE AS _GtkSourceLanguageManagerClass GtkSourceLanguageManagerClass
TYPE AS _GtkSourceLanguageManagerPrivate GtkSourceLanguageManagerPrivate
TYPE AS _GtkSourceLanguagePrivate GtkSourceLanguagePrivate
TYPE AS _GtkSourceMap GtkSourceMap
TYPE AS _GtkSourceMapClass GtkSourceMapClass
TYPE AS _GtkSourceMark GtkSourceMark
TYPE AS _GtkSourceMarkAttributes GtkSourceMarkAttributes
TYPE AS _GtkSourceMarkAttributesClass GtkSourceMarkAttributesClass
TYPE AS _GtkSourceMarkAttributesPrivate GtkSourceMarkAttributesPrivate
TYPE AS _GtkSourceMarkClass GtkSourceMarkClass
TYPE AS _GtkSourceMarkPrivate GtkSourceMarkPrivate
TYPE AS LONG GtkSourceNewlineType
ENUM
  GTK_SOURCE_NEWLINE_TYPE_LF = 0
  GTK_SOURCE_NEWLINE_TYPE_CR = 1
  GTK_SOURCE_NEWLINE_TYPE_CR_LF = 2
END ENUM
TYPE AS _GtkSourcePrintCompositor GtkSourcePrintCompositor
TYPE AS _GtkSourcePrintCompositorClass GtkSourcePrintCompositorClass
TYPE AS _GtkSourcePrintCompositorPrivate GtkSourcePrintCompositorPrivate
TYPE AS _GtkSourceRegion GtkSourceRegion
TYPE AS _GtkSourceRegionClass GtkSourceRegionClass
TYPE AS _GtkSourceRegionIter GtkSourceRegionIter
TYPE AS _GtkSourceSearchContext GtkSourceSearchContext
TYPE AS _GtkSourceSearchContextClass GtkSourceSearchContextClass
TYPE AS _GtkSourceSearchContextPrivate GtkSourceSearchContextPrivate
TYPE AS _GtkSourceSearchSettings GtkSourceSearchSettings
TYPE AS _GtkSourceSearchSettingsClass GtkSourceSearchSettingsClass
TYPE AS _GtkSourceSearchSettingsPrivate GtkSourceSearchSettingsPrivate
TYPE AS LONG GtkSourceSmartHomeEndType
ENUM
  GTK_SOURCE_SMART_HOME_END_DISABLED = 0
  GTK_SOURCE_SMART_HOME_END_BEFORE = 1
  GTK_SOURCE_SMART_HOME_END_AFTER = 2
  GTK_SOURCE_SMART_HOME_END_ALWAYS = 3
END ENUM
TYPE AS LONG GtkSourceSortFlags
ENUM
  GTK_SOURCE_SORT_FLAGS_NONE = 0
  GTK_SOURCE_SORT_FLAGS_CASE_SENSITIVE = 1
  GTK_SOURCE_SORT_FLAGS_REVERSE_ORDER = 2
  GTK_SOURCE_SORT_FLAGS_REMOVE_DUPLICATES = 4
END ENUM
TYPE AS _GtkSourceSpaceDrawer GtkSourceSpaceDrawer
TYPE AS _GtkSourceSpaceDrawerClass GtkSourceSpaceDrawerClass
TYPE AS _GtkSourceSpaceDrawerPrivate GtkSourceSpaceDrawerPrivate
TYPE AS LONG GtkSourceSpaceLocationFlags
ENUM
  GTK_SOURCE_SPACE_LOCATION_NONE = 0
  GTK_SOURCE_SPACE_LOCATION_LEADING = 1
  GTK_SOURCE_SPACE_LOCATION_INSIDE_TEXT = 2
  GTK_SOURCE_SPACE_LOCATION_TRAILING = 4
  GTK_SOURCE_SPACE_LOCATION_ALL = 7
END ENUM
TYPE AS LONG GtkSourceSpaceTypeFlags
ENUM
  GTK_SOURCE_SPACE_TYPE_NONE = 0
  GTK_SOURCE_SPACE_TYPE_SPACE = 1
  GTK_SOURCE_SPACE_TYPE_TAB = 2
  GTK_SOURCE_SPACE_TYPE_NEWLINE = 4
  GTK_SOURCE_SPACE_TYPE_NBSP = 8
  GTK_SOURCE_SPACE_TYPE_ALL = 15
END ENUM
TYPE AS _GtkSourceStyle GtkSourceStyle
TYPE AS _GtkSourceStyleClass GtkSourceStyleClass
TYPE AS _GtkSourceStyleScheme GtkSourceStyleScheme
TYPE AS _GtkSourceStyleSchemeChooser GtkSourceStyleSchemeChooser
TYPE AS _GtkSourceStyleSchemeChooserButton GtkSourceStyleSchemeChooserButton
TYPE AS _GtkSourceStyleSchemeChooserButtonClass GtkSourceStyleSchemeChooserButtonClass
TYPE AS _GtkSourceStyleSchemeChooserInterface GtkSourceStyleSchemeChooserInterface
TYPE AS _GtkSourceStyleSchemeChooserWidget GtkSourceStyleSchemeChooserWidget
TYPE AS _GtkSourceStyleSchemeChooserWidgetClass GtkSourceStyleSchemeChooserWidgetClass
TYPE AS _GtkSourceStyleSchemeClass GtkSourceStyleSchemeClass
TYPE AS _GtkSourceStyleSchemeManager GtkSourceStyleSchemeManager
TYPE AS _GtkSourceStyleSchemeManagerClass GtkSourceStyleSchemeManagerClass
TYPE AS _GtkSourceStyleSchemeManagerPrivate GtkSourceStyleSchemeManagerPrivate
TYPE AS _GtkSourceStyleSchemePrivate GtkSourceStyleSchemePrivate
TYPE AS _GtkSourceTag GtkSourceTag
TYPE AS _GtkSourceTagClass GtkSourceTagClass
TYPE AS _GtkSourceUndoManager GtkSourceUndoManager
TYPE AS _GtkSourceUndoManagerIface GtkSourceUndoManagerIface
TYPE AS _GtkSourceView GtkSourceView
TYPE AS _GtkSourceViewClass GtkSourceViewClass
TYPE AS LONG GtkSourceViewGutterPosition
ENUM
  GTK_SOURCE_VIEW_GUTTER_POSITION_LINES = -30
  GTK_SOURCE_VIEW_GUTTER_POSITION_MARKS = -20
END ENUM
TYPE AS _GtkSourceViewPrivate GtkSourceViewPrivate
EXTERN "C" LIB "gtksourceview-3.0"
' P_X

TYPE GtkSourceMountOperationFactory AS FUNCTION CDECL(BYVAL AS GtkSourceFile PTR, BYVAL AS gpointer) AS GMountOperation PTR
TYPE _GtkSourceView
  AS GtkTextView parent
  AS GtkSourceViewPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_view_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_VIEW (gtk_source_view_get_type())
#DEFINE GTKSOURCE_SOURCE_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_VIEW, GtkSourceView))
#DEFINE GTKSOURCE_SOURCE_VIEW_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_VIEW, GtkSourceViewClass))
#DEFINE GTKSOURCE_IS_SOURCE_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_VIEW))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_VIEW(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_VIEW))
#DEFINE GTKSOURCE_SOURCE_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_VIEW, GtkSourceViewClass))
DECLARE FUNCTION gtk_source_view_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_source_view_new_with_buffer(BYVAL AS GtkSourceBuffer PTR) AS GtkWidget PTR
DECLARE FUNCTION gtk_source_view_get_auto_indent(BYVAL AS GtkSourceView PTR) AS gboolean
DECLARE FUNCTION gtk_source_view_get_background_pattern(BYVAL AS GtkSourceView PTR) AS GtkSourceBackgroundPatternType
DECLARE FUNCTION gtk_source_view_get_completion(BYVAL AS GtkSourceView PTR) AS GtkSourceCompletion PTR
DECLARE FUNCTION gtk_source_view_get_draw_spaces(BYVAL AS GtkSourceView PTR) AS GtkSourceDrawSpacesFlags
DECLARE FUNCTION gtk_source_view_get_gutter(BYVAL AS GtkSourceView PTR, BYVAL AS GtkTextWindowType) AS GtkSourceGutter PTR
DECLARE FUNCTION gtk_source_view_get_highlight_current_line(BYVAL AS GtkSourceView PTR) AS gboolean
DECLARE FUNCTION gtk_source_view_get_indent_on_tab(BYVAL AS GtkSourceView PTR) AS gboolean
DECLARE FUNCTION gtk_source_view_get_indent_width(BYVAL AS GtkSourceView PTR) AS gint
DECLARE FUNCTION gtk_source_view_get_insert_spaces_instead_of_tabs(BYVAL AS GtkSourceView PTR) AS gboolean
DECLARE FUNCTION gtk_source_view_get_mark_attributes(BYVAL AS GtkSourceView PTR, BYVAL AS const gchar PTR, BYVAL AS gint PTR) AS GtkSourceMarkAttributes PTR
DECLARE FUNCTION gtk_source_view_get_right_margin_position(BYVAL AS GtkSourceView PTR) AS guint
DECLARE FUNCTION gtk_source_view_get_show_line_marks(BYVAL AS GtkSourceView PTR) AS gboolean
DECLARE FUNCTION gtk_source_view_get_show_line_numbers(BYVAL AS GtkSourceView PTR) AS gboolean
DECLARE FUNCTION gtk_source_view_get_show_right_margin(BYVAL AS GtkSourceView PTR) AS gboolean
DECLARE FUNCTION gtk_source_view_get_smart_backspace(BYVAL AS GtkSourceView PTR) AS gboolean
DECLARE FUNCTION gtk_source_view_get_smart_home_end(BYVAL AS GtkSourceView PTR) AS GtkSourceSmartHomeEndType
DECLARE FUNCTION gtk_source_view_get_space_drawer(BYVAL AS GtkSourceView PTR) AS GtkSourceSpaceDrawer PTR
DECLARE FUNCTION gtk_source_view_get_tab_width(BYVAL AS GtkSourceView PTR) AS guint
DECLARE FUNCTION gtk_source_view_get_visual_column(BYVAL AS GtkSourceView PTR, BYVAL AS const GtkTextIter PTR) AS guint
DECLARE SUB gtk_source_view_indent_lines(BYVAL AS GtkSourceView PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR)
DECLARE SUB gtk_source_view_set_auto_indent(BYVAL AS GtkSourceView PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_view_set_background_pattern(BYVAL AS GtkSourceView PTR, BYVAL AS GtkSourceBackgroundPatternType)
DECLARE SUB gtk_source_view_set_draw_spaces(BYVAL AS GtkSourceView PTR, BYVAL AS GtkSourceDrawSpacesFlags)
DECLARE SUB gtk_source_view_set_highlight_current_line(BYVAL AS GtkSourceView PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_view_set_indent_on_tab(BYVAL AS GtkSourceView PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_view_set_indent_width(BYVAL AS GtkSourceView PTR, BYVAL AS gint)
DECLARE SUB gtk_source_view_set_insert_spaces_instead_of_tabs(BYVAL AS GtkSourceView PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_view_set_mark_attributes(BYVAL AS GtkSourceView PTR, BYVAL AS const gchar PTR, BYVAL AS GtkSourceMarkAttributes PTR, BYVAL AS gint)
DECLARE SUB gtk_source_view_set_right_margin_position(BYVAL AS GtkSourceView PTR, BYVAL AS guint)
DECLARE SUB gtk_source_view_set_show_line_marks(BYVAL AS GtkSourceView PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_view_set_show_line_numbers(BYVAL AS GtkSourceView PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_view_set_show_right_margin(BYVAL AS GtkSourceView PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_view_set_smart_backspace(BYVAL AS GtkSourceView PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_view_set_smart_home_end(BYVAL AS GtkSourceView PTR, BYVAL AS GtkSourceSmartHomeEndType)
DECLARE SUB gtk_source_view_set_tab_width(BYVAL AS GtkSourceView PTR, BYVAL AS guint)
DECLARE SUB gtk_source_view_unindent_lines(BYVAL AS GtkSourceView PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR)
TYPE _GtkSourceViewClass
  AS GtkTextViewClass parent_class
  undo AS SUB CDECL(BYVAL AS GtkSourceView PTR)
  redo AS SUB CDECL(BYVAL AS GtkSourceView PTR)
  line_mark_activated AS SUB CDECL(BYVAL AS GtkSourceView PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GdkEvent PTR)
  show_completion AS SUB CDECL(BYVAL AS GtkSourceView PTR)
  move_lines AS SUB CDECL(BYVAL AS GtkSourceView PTR, BYVAL AS gboolean, BYVAL AS gint)
  move_words AS SUB CDECL(BYVAL AS GtkSourceView PTR, BYVAL AS gint)
END TYPE
' P_3

TYPE _GtkSourceBuffer
  AS GtkTextBuffer parent_instance
  AS GtkSourceBufferPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_background_pattern_type_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_BACKGROUND_PATTERN_TYPE (gtk_source_background_pattern_type_get_type())
DECLARE FUNCTION gtk_source_bracket_match_type_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_BRACKET_MATCH_TYPE (gtk_source_bracket_match_type_get_type())
DECLARE FUNCTION gtk_source_buffer_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_BUFFER (gtk_source_buffer_get_type())
#DEFINE GTKSOURCE_SOURCE_BUFFER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_BUFFER, GtkSourceBuffer))
#DEFINE GTKSOURCE_SOURCE_BUFFER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_BUFFER, GtkSourceBufferClass))
#DEFINE GTKSOURCE_IS_SOURCE_BUFFER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_BUFFER))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_BUFFER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_BUFFER))
#DEFINE GTKSOURCE_SOURCE_BUFFER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_BUFFER, GtkSourceBufferClass))
DECLARE FUNCTION gtk_source_buffer_new(BYVAL AS GtkTextTagTable PTR) AS GtkSourceBuffer PTR
DECLARE FUNCTION gtk_source_buffer_new_with_language(BYVAL AS GtkSourceLanguage PTR) AS GtkSourceBuffer PTR
DECLARE FUNCTION gtk_source_buffer_backward_iter_to_source_mark(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS const gchar PTR) AS gboolean
DECLARE SUB gtk_source_buffer_begin_not_undoable_action(BYVAL AS GtkSourceBuffer PTR)
DECLARE FUNCTION gtk_source_buffer_can_redo(BYVAL AS GtkSourceBuffer PTR) AS gboolean
DECLARE FUNCTION gtk_source_buffer_can_undo(BYVAL AS GtkSourceBuffer PTR) AS gboolean
DECLARE SUB gtk_source_buffer_change_case(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkSourceChangeCaseType, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR)
DECLARE FUNCTION gtk_source_buffer_create_source_mark(BYVAL AS GtkSourceBuffer PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS const GtkTextIter PTR) AS GtkSourceMark PTR
DECLARE FUNCTION gtk_source_buffer_create_source_tag(BYVAL AS GtkSourceBuffer PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, ...) AS GtkTextTag PTR
DECLARE SUB gtk_source_buffer_end_not_undoable_action(BYVAL AS GtkSourceBuffer PTR)
DECLARE SUB gtk_source_buffer_ensure_highlight(BYVAL AS GtkSourceBuffer PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS const GtkTextIter PTR)
DECLARE FUNCTION gtk_source_buffer_forward_iter_to_source_mark(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS const gchar PTR) AS gboolean
DECLARE FUNCTION gtk_source_buffer_get_context_classes_at_iter(BYVAL AS GtkSourceBuffer PTR, BYVAL AS const GtkTextIter PTR) AS gchar PTR PTR
DECLARE FUNCTION gtk_source_buffer_get_highlight_matching_brackets(BYVAL AS GtkSourceBuffer PTR) AS gboolean
DECLARE FUNCTION gtk_source_buffer_get_highlight_syntax(BYVAL AS GtkSourceBuffer PTR) AS gboolean
DECLARE FUNCTION gtk_source_buffer_get_implicit_trailing_newline(BYVAL AS GtkSourceBuffer PTR) AS gboolean
DECLARE FUNCTION gtk_source_buffer_get_language(BYVAL AS GtkSourceBuffer PTR) AS GtkSourceLanguage PTR
DECLARE FUNCTION gtk_source_buffer_get_max_undo_levels(BYVAL AS GtkSourceBuffer PTR) AS gint
DECLARE FUNCTION gtk_source_buffer_get_source_marks_at_iter(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS const gchar PTR) AS GSList PTR
DECLARE FUNCTION gtk_source_buffer_get_source_marks_at_line(BYVAL AS GtkSourceBuffer PTR, BYVAL AS gint, BYVAL AS const gchar PTR) AS GSList PTR
DECLARE FUNCTION gtk_source_buffer_get_style_scheme(BYVAL AS GtkSourceBuffer PTR) AS GtkSourceStyleScheme PTR
DECLARE FUNCTION gtk_source_buffer_get_undo_manager(BYVAL AS GtkSourceBuffer PTR) AS GtkSourceUndoManager PTR
DECLARE FUNCTION gtk_source_buffer_iter_backward_to_context_class_toggle(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS const gchar PTR) AS gboolean
DECLARE FUNCTION gtk_source_buffer_iter_forward_to_context_class_toggle(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS const gchar PTR) AS gboolean
DECLARE FUNCTION gtk_source_buffer_iter_has_context_class(BYVAL AS GtkSourceBuffer PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS const gchar PTR) AS gboolean
DECLARE SUB gtk_source_buffer_join_lines(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR)
DECLARE SUB gtk_source_buffer_redo(BYVAL AS GtkSourceBuffer PTR)
DECLARE SUB gtk_source_buffer_remove_source_marks(BYVAL AS GtkSourceBuffer PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_buffer_set_highlight_matching_brackets(BYVAL AS GtkSourceBuffer PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_buffer_set_highlight_syntax(BYVAL AS GtkSourceBuffer PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_buffer_set_implicit_trailing_newline(BYVAL AS GtkSourceBuffer PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_buffer_set_language(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkSourceLanguage PTR)
DECLARE SUB gtk_source_buffer_set_max_undo_levels(BYVAL AS GtkSourceBuffer PTR, BYVAL AS gint)
DECLARE SUB gtk_source_buffer_set_style_scheme(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkSourceStyleScheme PTR)
DECLARE SUB gtk_source_buffer_set_undo_manager(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkSourceUndoManager PTR)
DECLARE SUB gtk_source_buffer_sort_lines(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkSourceSortFlags, BYVAL AS gint)
DECLARE SUB gtk_source_buffer_undo(BYVAL AS GtkSourceBuffer PTR)
TYPE _GtkSourceBufferClass
  AS GtkTextBufferClass parent_class
  undo AS SUB CDECL(BYVAL AS GtkSourceBuffer PTR)
  redo AS SUB CDECL(BYVAL AS GtkSourceBuffer PTR)
  bracket_matched AS SUB CDECL(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkSourceBracketMatchType)
  _gtk_source_reserved1 AS SUB CDECL()
  _gtk_source_reserved2 AS SUB CDECL()
  _gtk_source_reserved3 AS SUB CDECL()
END TYPE
TYPE _GtkSourceCompletion
  AS GObject parent_instance
  AS GtkSourceCompletionPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_change_case_type_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_CHANGE_CASE_TYPE (gtk_source_change_case_type_get_type())
DECLARE FUNCTION gtk_source_completion_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_COMPLETION (gtk_source_completion_get_type())
#DEFINE GTKSOURCE_SOURCE_COMPLETION(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION, GtkSourceCompletion))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION, GtkSourceCompletionClass))
#DEFINE GTKSOURCE_IS_SOURCE_COMPLETION(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_COMPLETION(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION, GtkSourceCompletionClass))
DECLARE FUNCTION gtk_source_completion_add_provider(BYVAL AS GtkSourceCompletion PTR, BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE SUB gtk_source_completion_block_interactive(BYVAL AS GtkSourceCompletion PTR)
DECLARE FUNCTION gtk_source_completion_create_context(BYVAL AS GtkSourceCompletion PTR, BYVAL AS GtkTextIter PTR) AS GtkSourceCompletionContext PTR
DECLARE FUNCTION gtk_source_completion_get_info_window(BYVAL AS GtkSourceCompletion PTR) AS GtkSourceCompletionInfo PTR
DECLARE FUNCTION gtk_source_completion_get_providers(BYVAL AS GtkSourceCompletion PTR) AS GList PTR
DECLARE FUNCTION gtk_source_completion_get_view(BYVAL AS GtkSourceCompletion PTR) AS GtkSourceView PTR
DECLARE SUB gtk_source_completion_hide(BYVAL AS GtkSourceCompletion PTR)
DECLARE SUB gtk_source_completion_move_window(BYVAL AS GtkSourceCompletion PTR, BYVAL AS GtkTextIter PTR)
DECLARE FUNCTION gtk_source_completion_remove_provider(BYVAL AS GtkSourceCompletion PTR, BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION gtk_source_completion_show(BYVAL AS GtkSourceCompletion PTR, BYVAL AS GList PTR, BYVAL AS GtkSourceCompletionContext PTR) AS gboolean
DECLARE SUB gtk_source_completion_unblock_interactive(BYVAL AS GtkSourceCompletion PTR)
TYPE _GtkSourceCompletionClass
  AS GObjectClass parent_class
  proposal_activated AS FUNCTION CDECL(BYVAL AS GtkSourceCompletion PTR, BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionProposal PTR) AS gboolean
  show AS SUB CDECL(BYVAL AS GtkSourceCompletion PTR)
  hide AS SUB CDECL(BYVAL AS GtkSourceCompletion PTR)
  populate_context AS SUB CDECL(BYVAL AS GtkSourceCompletion PTR, BYVAL AS GtkSourceCompletionContext PTR)
  move_cursor AS SUB CDECL(BYVAL AS GtkSourceCompletion PTR, BYVAL AS GtkScrollStep, BYVAL AS gint)
  move_page AS SUB CDECL(BYVAL AS GtkSourceCompletion PTR, BYVAL AS GtkScrollStep, BYVAL AS gint)
  activate_proposal AS SUB CDECL(BYVAL AS GtkSourceCompletion PTR)
END TYPE
TYPE _GtkSourceCompletionContext
  AS GInitiallyUnowned parent
  AS GtkSourceCompletionContextPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_completion_context_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_COMPLETION_CONTEXT (gtk_source_completion_context_get_type())
#DEFINE GTKSOURCE_SOURCE_COMPLETION_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_CONTEXT, GtkSourceCompletionContext))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_CONTEXT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_CONTEXT, GtkSourceCompletionContextClass))
#DEFINE GTKSOURCE_IS_SOURCE_COMPLETION_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_CONTEXT))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_COMPLETION_CONTEXT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_CONTEXT))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_CONTEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_CONTEXT, GtkSourceCompletionContextClass))
DECLARE SUB gtk_source_completion_context_add_proposals(BYVAL AS GtkSourceCompletionContext PTR, BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GList PTR, BYVAL AS gboolean)
DECLARE FUNCTION gtk_source_completion_context_get_activation(BYVAL AS GtkSourceCompletionContext PTR) AS GtkSourceCompletionActivation
DECLARE FUNCTION gtk_source_completion_context_get_iter(BYVAL AS GtkSourceCompletionContext PTR, BYVAL AS GtkTextIter PTR) AS gboolean
TYPE _GtkSourceCompletionContextClass
  AS GInitiallyUnownedClass parent_class
  cancelled AS SUB CDECL(BYVAL AS GtkSourceCompletionContext PTR)
  _gtk_source_reserved1 AS SUB CDECL()
  _gtk_source_reserved2 AS SUB CDECL()
  _gtk_source_reserved3 AS SUB CDECL()
END TYPE
TYPE _GtkSourceCompletionInfo
  AS GtkWindow parent
  AS GtkSourceCompletionInfoPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_completion_error_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_COMPLETION_ERROR (gtk_source_completion_error_get_type())
DECLARE FUNCTION gtk_source_completion_info_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_COMPLETION_INFO (gtk_source_completion_info_get_type())
#DEFINE GTKSOURCE_SOURCE_COMPLETION_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_INFO, GtkSourceCompletionInfo))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_INFO_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_INFO, GtkSourceCompletionInfoClass))
#DEFINE GTKSOURCE_IS_SOURCE_COMPLETION_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_INFO))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_COMPLETION_INFO(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_INFO))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_INFO, GtkSourceCompletionInfoClass))
DECLARE FUNCTION gtk_source_completion_info_new() AS GtkSourceCompletionInfo PTR
DECLARE FUNCTION gtk_source_completion_info_get_widget(BYVAL AS GtkSourceCompletionInfo PTR) AS GtkWidget PTR
DECLARE SUB gtk_source_completion_info_move_to_iter(BYVAL AS GtkSourceCompletionInfo PTR, BYVAL AS GtkTextView PTR, BYVAL AS GtkTextIter PTR)
DECLARE SUB gtk_source_completion_info_set_widget(BYVAL AS GtkSourceCompletionInfo PTR, BYVAL AS GtkWidget PTR)
TYPE _GtkSourceCompletionInfoClass
  AS GtkWindowClass parent_class
  before_show AS SUB CDECL(BYVAL AS GtkSourceCompletionInfo PTR)
END TYPE
TYPE _GtkSourceCompletionItem
  AS GObject parent
  AS GtkSourceCompletionItemPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_completion_item_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_COMPLETION_ITEM (gtk_source_completion_item_get_type())
#DEFINE GTKSOURCE_SOURCE_COMPLETION_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_ITEM, GtkSourceCompletionItem))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_ITEM_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_ITEM, GtkSourceCompletionItemClass))
#DEFINE GTKSOURCE_IS_SOURCE_COMPLETION_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_ITEM))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_COMPLETION_ITEM(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_ITEM))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_ITEM, GtkSourceCompletionItemClass))
DECLARE FUNCTION gtk_source_completion_item_new(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS GdkPixbuf PTR, BYVAL AS const gchar PTR) AS GtkSourceCompletionItem PTR
DECLARE FUNCTION gtk_source_completion_item_new_from_stock(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR) AS GtkSourceCompletionItem PTR
DECLARE FUNCTION gtk_source_completion_item_new_with_markup(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS GdkPixbuf PTR, BYVAL AS const gchar PTR) AS GtkSourceCompletionItem PTR
DECLARE FUNCTION gtk_source_completion_item_new2() AS GtkSourceCompletionItem PTR
DECLARE SUB gtk_source_completion_item_set_gicon(BYVAL AS GtkSourceCompletionItem PTR, BYVAL AS GIcon PTR)
DECLARE SUB gtk_source_completion_item_set_icon(BYVAL AS GtkSourceCompletionItem PTR, BYVAL AS GdkPixbuf PTR)
DECLARE SUB gtk_source_completion_item_set_icon_name(BYVAL AS GtkSourceCompletionItem PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_completion_item_set_info(BYVAL AS GtkSourceCompletionItem PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_completion_item_set_label(BYVAL AS GtkSourceCompletionItem PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_completion_item_set_markup(BYVAL AS GtkSourceCompletionItem PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_completion_item_set_text(BYVAL AS GtkSourceCompletionItem PTR, BYVAL AS const gchar PTR)
TYPE _GtkSourceCompletionItemClass
  AS GObjectClass parent_class
END TYPE
DECLARE FUNCTION gtk_source_completion_proposal_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_COMPLETION_PROPOSAL (gtk_source_completion_proposal_get_type())
#DEFINE GTKSOURCE_SOURCE_COMPLETION_PROPOSAL(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_PROPOSAL, GtkSourceCompletionProposal))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_PROPOSAL_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_PROPOSAL, GtkSourceCompletionProposalIface))
#DEFINE GTKSOURCE_IS_SOURCE_COMPLETION_PROPOSAL(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_PROPOSAL))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_PROPOSAL_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_PROPOSAL, GtkSourceCompletionProposalIface))
DECLARE SUB gtk_source_completion_proposal_changed(BYVAL AS GtkSourceCompletionProposal PTR)
DECLARE FUNCTION gtk_source_completion_proposal_equal(BYVAL AS GtkSourceCompletionProposal PTR, BYVAL AS GtkSourceCompletionProposal PTR) AS gboolean
DECLARE FUNCTION gtk_source_completion_proposal_get_gicon(BYVAL AS GtkSourceCompletionProposal PTR) AS GIcon PTR
DECLARE FUNCTION gtk_source_completion_proposal_get_icon(BYVAL AS GtkSourceCompletionProposal PTR) AS GdkPixbuf PTR
DECLARE FUNCTION gtk_source_completion_proposal_get_icon_name(BYVAL AS GtkSourceCompletionProposal PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_completion_proposal_get_info(BYVAL AS GtkSourceCompletionProposal PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_completion_proposal_get_label(BYVAL AS GtkSourceCompletionProposal PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_completion_proposal_get_markup(BYVAL AS GtkSourceCompletionProposal PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_completion_proposal_get_text(BYVAL AS GtkSourceCompletionProposal PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_completion_proposal_hash(BYVAL AS GtkSourceCompletionProposal PTR) AS guint
TYPE _GtkSourceCompletionProposalIface
  AS GTypeInterface parent
  get_label AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProposal PTR) AS gchar PTR
  get_markup AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProposal PTR) AS gchar PTR
  get_text AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProposal PTR) AS gchar PTR
  get_icon AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProposal PTR) AS GdkPixbuf PTR
  get_icon_name AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProposal PTR) AS const gchar PTR
  get_gicon AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProposal PTR) AS GIcon PTR
  get_info AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProposal PTR) AS gchar PTR
  hash AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProposal PTR) AS guint
  equal AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProposal PTR, BYVAL AS GtkSourceCompletionProposal PTR) AS gboolean
  changed AS SUB CDECL(BYVAL AS GtkSourceCompletionProposal PTR)
END TYPE
DECLARE FUNCTION gtk_source_completion_provider_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_COMPLETION_PROVIDER (gtk_source_completion_provider_get_type())
#DEFINE GTKSOURCE_SOURCE_COMPLETION_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_PROVIDER, GtkSourceCompletionProvider))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_PROVIDER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_PROVIDER, GtkSourceCompletionProviderIface))
#DEFINE GTKSOURCE_IS_SOURCE_COMPLETION_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_PROVIDER))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_PROVIDER_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_PROVIDER, GtkSourceCompletionProviderIface))
DECLARE FUNCTION gtk_source_completion_provider_activate_proposal(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionProposal PTR, BYVAL AS GtkTextIter PTR) AS gboolean
DECLARE FUNCTION gtk_source_completion_provider_get_activation(BYVAL AS GtkSourceCompletionProvider PTR) AS GtkSourceCompletionActivation
DECLARE FUNCTION gtk_source_completion_provider_get_gicon(BYVAL AS GtkSourceCompletionProvider PTR) AS GIcon PTR
DECLARE FUNCTION gtk_source_completion_provider_get_icon(BYVAL AS GtkSourceCompletionProvider PTR) AS GdkPixbuf PTR
DECLARE FUNCTION gtk_source_completion_provider_get_icon_name(BYVAL AS GtkSourceCompletionProvider PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_completion_provider_get_info_widget(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionProposal PTR) AS GtkWidget PTR
DECLARE FUNCTION gtk_source_completion_provider_get_interactive_delay(BYVAL AS GtkSourceCompletionProvider PTR) AS gint
DECLARE FUNCTION gtk_source_completion_provider_get_name(BYVAL AS GtkSourceCompletionProvider PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_completion_provider_get_priority(BYVAL AS GtkSourceCompletionProvider PTR) AS gint
DECLARE FUNCTION gtk_source_completion_provider_get_start_iter(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionContext PTR, BYVAL AS GtkSourceCompletionProposal PTR, BYVAL AS GtkTextIter PTR) AS gboolean
DECLARE FUNCTION gtk_source_completion_provider_match(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionContext PTR) AS gboolean
DECLARE SUB gtk_source_completion_provider_populate(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionContext PTR)
DECLARE SUB gtk_source_completion_provider_update_info(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionProposal PTR, BYVAL AS GtkSourceCompletionInfo PTR)
TYPE _GtkSourceCompletionProviderIface
  AS GTypeInterface g_iface
  get_name AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR) AS gchar PTR
  get_icon AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR) AS GdkPixbuf PTR
  get_icon_name AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR) AS const gchar PTR
  get_gicon AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR) AS GIcon PTR
  populate AS SUB CDECL(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionContext PTR)
  match AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionContext PTR) AS gboolean
  get_activation AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR) AS GtkSourceCompletionActivation
  get_info_widget AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionProposal PTR) AS GtkWidget PTR
  update_info AS SUB CDECL(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionProposal PTR, BYVAL AS GtkSourceCompletionInfo PTR)
  get_start_iter AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionContext PTR, BYVAL AS GtkSourceCompletionProposal PTR, BYVAL AS GtkTextIter PTR) AS gboolean
  activate_proposal AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR, BYVAL AS GtkSourceCompletionProposal PTR, BYVAL AS GtkTextIter PTR) AS gboolean
  get_interactive_delay AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR) AS gint
  get_priority AS FUNCTION CDECL(BYVAL AS GtkSourceCompletionProvider PTR) AS gint
END TYPE
TYPE _GtkSourceCompletionWords
  AS GObject parent
  AS GtkSourceCompletionWordsPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_completion_words_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_COMPLETION_WORDS (gtk_source_completion_words_get_type())
#DEFINE GTKSOURCE_SOURCE_COMPLETION_WORDS(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_WORDS, GtkSourceCompletionWords))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_WORDS_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_WORDS, GtkSourceCompletionWordsClass))
#DEFINE GTKSOURCE_IS_SOURCE_COMPLETION_WORDS(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_WORDS))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_COMPLETION_WORDS(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_WORDS))
#DEFINE GTKSOURCE_SOURCE_COMPLETION_WORDS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_COMPLETION_WORDS, GtkSourceCompletionWordsClass))
DECLARE FUNCTION gtk_source_completion_words_new(BYVAL AS const gchar PTR, BYVAL AS GdkPixbuf PTR) AS GtkSourceCompletionWords PTR
DECLARE SUB gtk_source_completion_words_register(BYVAL AS GtkSourceCompletionWords PTR, BYVAL AS GtkTextBuffer PTR)
DECLARE SUB gtk_source_completion_words_unregister(BYVAL AS GtkSourceCompletionWords PTR, BYVAL AS GtkTextBuffer PTR)
TYPE _GtkSourceCompletionWordsClass
  AS GObjectClass parent_class
END TYPE
DECLARE FUNCTION gtk_source_compression_type_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_COMPRESSION_TYPE (gtk_source_compression_type_get_type())
DECLARE FUNCTION gtk_source_encoding_copy(BYVAL AS const GtkSourceEncoding PTR) AS GtkSourceEncoding PTR
DECLARE SUB gtk_source_encoding_free(BYVAL AS GtkSourceEncoding PTR)
DECLARE FUNCTION gtk_source_encoding_get_charset(BYVAL AS const GtkSourceEncoding PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_encoding_get_name(BYVAL AS const GtkSourceEncoding PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_encoding_to_string(BYVAL AS const GtkSourceEncoding PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_encoding_get_all() AS GSList PTR
DECLARE FUNCTION gtk_source_encoding_get_current() AS const GtkSourceEncoding PTR
DECLARE FUNCTION gtk_source_encoding_get_default_candidates() AS GSList PTR
DECLARE FUNCTION gtk_source_encoding_get_from_charset(BYVAL AS const gchar PTR) AS const GtkSourceEncoding PTR
DECLARE FUNCTION gtk_source_encoding_get_utf8() AS const GtkSourceEncoding PTR
TYPE _GtkSourceFile
  AS GObject parent
  AS GtkSourceFilePrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_file_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_FILE (gtk_source_file_get_type())
#DEFINE GTKSOURCE_SOURCE_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_FILE, GtkSourceFile))
#DEFINE GTKSOURCE_SOURCE_FILE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_FILE, GtkSourceFileClass))
#DEFINE GTKSOURCE_IS_SOURCE_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_FILE))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_FILE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_FILE))
#DEFINE GTKSOURCE_SOURCE_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_FILE, GtkSourceFileClass))
DECLARE FUNCTION gtk_source_file_new() AS GtkSourceFile PTR
DECLARE SUB gtk_source_file_check_file_on_disk(BYVAL AS GtkSourceFile PTR)
DECLARE FUNCTION gtk_source_file_get_compression_type(BYVAL AS GtkSourceFile PTR) AS GtkSourceCompressionType
DECLARE FUNCTION gtk_source_file_get_encoding(BYVAL AS GtkSourceFile PTR) AS const GtkSourceEncoding PTR
DECLARE FUNCTION gtk_source_file_get_location(BYVAL AS GtkSourceFile PTR) AS GFile PTR
DECLARE FUNCTION gtk_source_file_get_newline_type(BYVAL AS GtkSourceFile PTR) AS GtkSourceNewlineType
DECLARE FUNCTION gtk_source_file_is_deleted(BYVAL AS GtkSourceFile PTR) AS gboolean
DECLARE FUNCTION gtk_source_file_is_externally_modified(BYVAL AS GtkSourceFile PTR) AS gboolean
DECLARE FUNCTION gtk_source_file_is_local(BYVAL AS GtkSourceFile PTR) AS gboolean
DECLARE FUNCTION gtk_source_file_is_readonly(BYVAL AS GtkSourceFile PTR) AS gboolean
DECLARE SUB gtk_source_file_set_location(BYVAL AS GtkSourceFile PTR, BYVAL AS GFile PTR)
DECLARE SUB gtk_source_file_set_mount_operation_factory(BYVAL AS GtkSourceFile PTR, BYVAL AS GtkSourceMountOperationFactory, BYVAL AS gpointer, BYVAL AS GDestroyNotify)
TYPE _GtkSourceFileClass
  AS GObjectClass parent_class
  AS gpointer padding(9)
END TYPE
TYPE _GtkSourceFileLoader
  AS GObject parent
  AS GtkSourceFileLoaderPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_file_loader_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_FILE_LOADER (gtk_source_file_loader_get_type())
#DEFINE GTKSOURCE_SOURCE_FILE_LOADER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_FILE_LOADER, GtkSourceFileLoader))
#DEFINE GTKSOURCE_SOURCE_FILE_LOADER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_FILE_LOADER, GtkSourceFileLoaderClass))
#DEFINE GTKSOURCE_IS_SOURCE_FILE_LOADER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_FILE_LOADER))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_FILE_LOADER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_FILE_LOADER))
#DEFINE GTKSOURCE_SOURCE_FILE_LOADER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_FILE_LOADER, GtkSourceFileLoaderClass))
DECLARE FUNCTION gtk_source_file_loader_new(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkSourceFile PTR) AS GtkSourceFileLoader PTR
DECLARE FUNCTION gtk_source_file_loader_new_from_stream(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkSourceFile PTR, BYVAL AS GInputStream PTR) AS GtkSourceFileLoader PTR
DECLARE FUNCTION gtk_source_file_loader_get_buffer(BYVAL AS GtkSourceFileLoader PTR) AS GtkSourceBuffer PTR
DECLARE FUNCTION gtk_source_file_loader_get_compression_type(BYVAL AS GtkSourceFileLoader PTR) AS GtkSourceCompressionType
DECLARE FUNCTION gtk_source_file_loader_get_encoding(BYVAL AS GtkSourceFileLoader PTR) AS const GtkSourceEncoding PTR
DECLARE FUNCTION gtk_source_file_loader_get_file(BYVAL AS GtkSourceFileLoader PTR) AS GtkSourceFile PTR
DECLARE FUNCTION gtk_source_file_loader_get_input_stream(BYVAL AS GtkSourceFileLoader PTR) AS GInputStream PTR
DECLARE FUNCTION gtk_source_file_loader_get_location(BYVAL AS GtkSourceFileLoader PTR) AS GFile PTR
DECLARE FUNCTION gtk_source_file_loader_get_newline_type(BYVAL AS GtkSourceFileLoader PTR) AS GtkSourceNewlineType
DECLARE SUB gtk_source_file_loader_load_async(BYVAL AS GtkSourceFileLoader PTR, BYVAL AS gint, BYVAL AS GCancellable PTR, BYVAL AS GFileProgressCallback, BYVAL AS gpointer, BYVAL AS GDestroyNotify, BYVAL AS GAsyncReadyCallback, BYVAL AS gpointer)
DECLARE FUNCTION gtk_source_file_loader_load_finish(BYVAL AS GtkSourceFileLoader PTR, BYVAL AS GAsyncResult PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE SUB gtk_source_file_loader_set_candidate_encodings(BYVAL AS GtkSourceFileLoader PTR, BYVAL AS GSList PTR)
TYPE _GtkSourceFileLoaderClass
  AS GObjectClass parent_class
  AS gpointer padding(9)
END TYPE
DECLARE FUNCTION gtk_source_file_loader_error_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_FILE_LOADER_ERROR (gtk_source_file_loader_error_get_type())
TYPE _GtkSourceFileSaver
  AS GObject object
  AS GtkSourceFileSaverPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_file_saver_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_FILE_SAVER (gtk_source_file_saver_get_type())
#DEFINE GTKSOURCE_SOURCE_FILE_SAVER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_FILE_SAVER, GtkSourceFileSaver))
#DEFINE GTKSOURCE_SOURCE_FILE_SAVER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_FILE_SAVER, GtkSourceFileSaverClass))
#DEFINE GTKSOURCE_IS_SOURCE_FILE_SAVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_FILE_SAVER))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_FILE_SAVER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_FILE_SAVER))
#DEFINE GTKSOURCE_SOURCE_FILE_SAVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_FILE_SAVER, GtkSourceFileSaverClass))
DECLARE FUNCTION gtk_source_file_saver_new(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkSourceFile PTR) AS GtkSourceFileSaver PTR
DECLARE FUNCTION gtk_source_file_saver_new_with_target(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkSourceFile PTR, BYVAL AS GFile PTR) AS GtkSourceFileSaver PTR
DECLARE FUNCTION gtk_source_file_saver_get_buffer(BYVAL AS GtkSourceFileSaver PTR) AS GtkSourceBuffer PTR
DECLARE FUNCTION gtk_source_file_saver_get_compression_type(BYVAL AS GtkSourceFileSaver PTR) AS GtkSourceCompressionType
DECLARE FUNCTION gtk_source_file_saver_get_encoding(BYVAL AS GtkSourceFileSaver PTR) AS const GtkSourceEncoding PTR
DECLARE FUNCTION gtk_source_file_saver_get_file(BYVAL AS GtkSourceFileSaver PTR) AS GtkSourceFile PTR
DECLARE FUNCTION gtk_source_file_saver_get_flags(BYVAL AS GtkSourceFileSaver PTR) AS GtkSourceFileSaverFlags
DECLARE FUNCTION gtk_source_file_saver_get_location(BYVAL AS GtkSourceFileSaver PTR) AS GFile PTR
DECLARE FUNCTION gtk_source_file_saver_get_newline_type(BYVAL AS GtkSourceFileSaver PTR) AS GtkSourceNewlineType
DECLARE SUB gtk_source_file_saver_save_async(BYVAL AS GtkSourceFileSaver PTR, BYVAL AS gint, BYVAL AS GCancellable PTR, BYVAL AS GFileProgressCallback, BYVAL AS gpointer, BYVAL AS GDestroyNotify, BYVAL AS GAsyncReadyCallback, BYVAL AS gpointer)
DECLARE FUNCTION gtk_source_file_saver_save_finish(BYVAL AS GtkSourceFileSaver PTR, BYVAL AS GAsyncResult PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE SUB gtk_source_file_saver_set_compression_type(BYVAL AS GtkSourceFileSaver PTR, BYVAL AS GtkSourceCompressionType)
DECLARE SUB gtk_source_file_saver_set_encoding(BYVAL AS GtkSourceFileSaver PTR, BYVAL AS const GtkSourceEncoding PTR)
DECLARE SUB gtk_source_file_saver_set_flags(BYVAL AS GtkSourceFileSaver PTR, BYVAL AS GtkSourceFileSaverFlags)
DECLARE SUB gtk_source_file_saver_set_newline_type(BYVAL AS GtkSourceFileSaver PTR, BYVAL AS GtkSourceNewlineType)
TYPE _GtkSourceFileSaverClass
  AS GObjectClass parent_class
  AS gpointer padding(9)
END TYPE
DECLARE FUNCTION gtk_source_file_saver_error_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_FILE_SAVER_ERROR (gtk_source_file_saver_error_get_type())
TYPE _GtkSourceGutter
  AS GObject parent
  AS GtkSourceGutterPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_gutter_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_GUTTER (gtk_source_gutter_get_type())
#DEFINE GTKSOURCE_SOURCE_GUTTER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_GUTTER, GtkSourceGutter))
#DEFINE GTKSOURCE_SOURCE_GUTTER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_GUTTER, GtkSourceGutterClass))
#DEFINE GTKSOURCE_IS_SOURCE_GUTTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_GUTTER))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_GUTTER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_GUTTER))
#DEFINE GTKSOURCE_SOURCE_GUTTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_GUTTER, GtkSourceGutterClass))
DECLARE SUB gtk_source_gutter_get_padding(BYVAL AS GtkSourceGutter PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE FUNCTION gtk_source_gutter_get_renderer_at_pos(BYVAL AS GtkSourceGutter PTR, BYVAL AS gint, BYVAL AS gint) AS GtkSourceGutterRenderer PTR
DECLARE FUNCTION gtk_source_gutter_get_view(BYVAL AS GtkSourceGutter PTR) AS GtkSourceView PTR
DECLARE FUNCTION gtk_source_gutter_get_window(BYVAL AS GtkSourceGutter PTR) AS GdkWindow PTR
DECLARE FUNCTION gtk_source_gutter_get_window_type(BYVAL AS GtkSourceGutter PTR) AS GtkTextWindowType
DECLARE FUNCTION gtk_source_gutter_insert(BYVAL AS GtkSourceGutter PTR, BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS gint) AS gboolean
DECLARE SUB gtk_source_gutter_queue_draw(BYVAL AS GtkSourceGutter PTR)
DECLARE SUB gtk_source_gutter_remove(BYVAL AS GtkSourceGutter PTR, BYVAL AS GtkSourceGutterRenderer PTR)
DECLARE SUB gtk_source_gutter_reorder(BYVAL AS GtkSourceGutter PTR, BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS gint)
DECLARE SUB gtk_source_gutter_set_padding(BYVAL AS GtkSourceGutter PTR, BYVAL AS gint, BYVAL AS gint)
TYPE _GtkSourceGutterClass
  AS GObjectClass parent_class
END TYPE
TYPE _GtkSourceGutterRenderer
  AS GInitiallyUnowned parent
  AS GtkSourceGutterRendererPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_gutter_renderer_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER (gtk_source_gutter_renderer_get_type())
#DEFINE GTKSOURCE_SOURCE_GUTTER_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER, GtkSourceGutterRenderer))
#DEFINE GTKSOURCE_SOURCE_GUTTER_RENDERER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER, GtkSourceGutterRendererClass))
#DEFINE GTKSOURCE_IS_SOURCE_GUTTER_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_GUTTER_RENDERER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER))
#DEFINE GTKSOURCE_SOURCE_GUTTER_RENDERER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER, GtkSourceGutterRendererClass))
DECLARE SUB gtk_source_gutter_renderer_activate(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GdkEvent PTR)
DECLARE SUB gtk_source_gutter_renderer_begin(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS cairo_t PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR)
DECLARE SUB gtk_source_gutter_renderer_draw(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS cairo_t PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkSourceGutterRendererState)
DECLARE SUB gtk_source_gutter_renderer_end(BYVAL AS GtkSourceGutterRenderer PTR)
DECLARE SUB gtk_source_gutter_renderer_get_alignment(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS gfloat PTR, BYVAL AS gfloat PTR)
DECLARE FUNCTION gtk_source_gutter_renderer_get_alignment_mode(BYVAL AS GtkSourceGutterRenderer PTR) AS GtkSourceGutterRendererAlignmentMode
DECLARE FUNCTION gtk_source_gutter_renderer_get_background(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GdkRGBA PTR) AS gboolean
DECLARE SUB gtk_source_gutter_renderer_get_padding(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE FUNCTION gtk_source_gutter_renderer_get_size(BYVAL AS GtkSourceGutterRenderer PTR) AS gint
DECLARE FUNCTION gtk_source_gutter_renderer_get_view(BYVAL AS GtkSourceGutterRenderer PTR) AS GtkTextView PTR
DECLARE FUNCTION gtk_source_gutter_renderer_get_visible(BYVAL AS GtkSourceGutterRenderer PTR) AS gboolean
DECLARE FUNCTION gtk_source_gutter_renderer_get_window_type(BYVAL AS GtkSourceGutterRenderer PTR) AS GtkTextWindowType
DECLARE FUNCTION gtk_source_gutter_renderer_query_activatable(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GdkEvent PTR) AS gboolean
DECLARE SUB gtk_source_gutter_renderer_query_data(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkSourceGutterRendererState)
DECLARE FUNCTION gtk_source_gutter_renderer_query_tooltip(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GdkRectangle PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GtkTooltip PTR) AS gboolean
DECLARE SUB gtk_source_gutter_renderer_queue_draw(BYVAL AS GtkSourceGutterRenderer PTR)
DECLARE SUB gtk_source_gutter_renderer_set_alignment(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS gfloat, BYVAL AS gfloat)
DECLARE SUB gtk_source_gutter_renderer_set_alignment_mode(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkSourceGutterRendererAlignmentMode)
DECLARE SUB gtk_source_gutter_renderer_set_background(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS const GdkRGBA PTR)
DECLARE SUB gtk_source_gutter_renderer_set_padding(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS gint, BYVAL AS gint)
DECLARE SUB gtk_source_gutter_renderer_set_size(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS gint)
DECLARE SUB gtk_source_gutter_renderer_set_visible(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS gboolean)
TYPE _GtkSourceGutterRendererClass
  AS GInitiallyUnownedClass parent_class
  begin AS SUB CDECL(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS cairo_t PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR)
  draw AS SUB CDECL(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS cairo_t PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkSourceGutterRendererState)
  end AS SUB CDECL(BYVAL AS GtkSourceGutterRenderer PTR)
  change_view AS SUB CDECL(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkTextView PTR)
  change_buffer AS SUB CDECL(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkTextBuffer PTR)
  query_activatable AS FUNCTION CDECL(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GdkEvent PTR) AS gboolean
  activate AS SUB CDECL(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GdkRectangle PTR, BYVAL AS GdkEvent PTR)
  queue_draw AS SUB CDECL(BYVAL AS GtkSourceGutterRenderer PTR)
  query_tooltip AS FUNCTION CDECL(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GdkRectangle PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GtkTooltip PTR) AS gboolean
  query_data AS SUB CDECL(BYVAL AS GtkSourceGutterRenderer PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkSourceGutterRendererState)
END TYPE
DECLARE FUNCTION gtk_source_gutter_renderer_alignment_mode_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_GUTTER_RENDERER_ALIGNMENT_MODE (gtk_source_gutter_renderer_alignment_mode_get_type())
TYPE _GtkSourceGutterRendererPixbuf
  AS GtkSourceGutterRenderer parent
  AS GtkSourceGutterRendererPixbufPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_gutter_renderer_pixbuf_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_PIXBUF (gtk_source_gutter_renderer_pixbuf_get_type())
#DEFINE GTKSOURCE_SOURCE_GUTTER_RENDERER_PIXBUF(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_PIXBUF, GtkSourceGutterRendererPixbuf))
#DEFINE GTKSOURCE_SOURCE_GUTTER_RENDERER_PIXBUF_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_PIXBUF, GtkSourceGutterRendererPixbufClass))
#DEFINE GTKSOURCE_IS_SOURCE_GUTTER_RENDERER_PIXBUF(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_PIXBUF))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_GUTTER_RENDERER_PIXBUF(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_PIXBUF))
#DEFINE GTKSOURCE_SOURCE_GUTTER_RENDERER_PIXBUF_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_PIXBUF, GtkSourceGutterRendererPixbufClass))
DECLARE FUNCTION gtk_source_gutter_renderer_pixbuf_new() AS GtkSourceGutterRenderer PTR
DECLARE FUNCTION gtk_source_gutter_renderer_pixbuf_get_gicon(BYVAL AS GtkSourceGutterRendererPixbuf PTR) AS GIcon PTR
DECLARE FUNCTION gtk_source_gutter_renderer_pixbuf_get_icon_name(BYVAL AS GtkSourceGutterRendererPixbuf PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_gutter_renderer_pixbuf_get_pixbuf(BYVAL AS GtkSourceGutterRendererPixbuf PTR) AS GdkPixbuf PTR
DECLARE FUNCTION gtk_source_gutter_renderer_pixbuf_get_stock_id(BYVAL AS GtkSourceGutterRendererPixbuf PTR) AS const gchar PTR
DECLARE SUB gtk_source_gutter_renderer_pixbuf_set_gicon(BYVAL AS GtkSourceGutterRendererPixbuf PTR, BYVAL AS GIcon PTR)
DECLARE SUB gtk_source_gutter_renderer_pixbuf_set_icon_name(BYVAL AS GtkSourceGutterRendererPixbuf PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_gutter_renderer_pixbuf_set_pixbuf(BYVAL AS GtkSourceGutterRendererPixbuf PTR, BYVAL AS GdkPixbuf PTR)
DECLARE SUB gtk_source_gutter_renderer_pixbuf_set_stock_id(BYVAL AS GtkSourceGutterRendererPixbuf PTR, BYVAL AS const gchar PTR)
TYPE _GtkSourceGutterRendererPixbufClass
  AS GtkSourceGutterRendererClass parent_class
END TYPE
TYPE _GtkSourceGutterRendererText
  AS GtkSourceGutterRenderer parent
  AS GtkSourceGutterRendererTextPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_gutter_renderer_text_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_TEXT (gtk_source_gutter_renderer_text_get_type())
#DEFINE GTKSOURCE_SOURCE_GUTTER_RENDERER_TEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_TEXT, GtkSourceGutterRendererText))
#DEFINE GTKSOURCE_SOURCE_GUTTER_RENDERER_TEXT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_TEXT, GtkSourceGutterRendererTextClass))
#DEFINE GTKSOURCE_IS_SOURCE_GUTTER_RENDERER_TEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_TEXT))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_GUTTER_RENDERER_TEXT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_TEXT))
#DEFINE GTKSOURCE_SOURCE_GUTTER_RENDERER_TEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_GUTTER_RENDERER_TEXT, GtkSourceGutterRendererTextClass))
DECLARE FUNCTION gtk_source_gutter_renderer_text_new() AS GtkSourceGutterRenderer PTR
DECLARE SUB gtk_source_gutter_renderer_text_measure(BYVAL AS GtkSourceGutterRendererText PTR, BYVAL AS const gchar PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE SUB gtk_source_gutter_renderer_text_measure_markup(BYVAL AS GtkSourceGutterRendererText PTR, BYVAL AS const gchar PTR, BYVAL AS gint PTR, BYVAL AS gint PTR)
DECLARE SUB gtk_source_gutter_renderer_text_set_markup(BYVAL AS GtkSourceGutterRendererText PTR, BYVAL AS const gchar PTR, BYVAL AS gint)
DECLARE SUB gtk_source_gutter_renderer_text_set_text(BYVAL AS GtkSourceGutterRendererText PTR, BYVAL AS const gchar PTR, BYVAL AS gint)
TYPE _GtkSourceGutterRendererTextClass
  AS GtkSourceGutterRendererClass parent_class
END TYPE
TYPE _GtkSourceLanguage
  AS GObject parent_instance
  AS GtkSourceLanguagePrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_language_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_LANGUAGE (gtk_source_language_get_type())
#DEFINE GTKSOURCE_SOURCE_LANGUAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_LANGUAGE, GtkSourceLanguage))
#DEFINE GTKSOURCE_SOURCE_LANGUAGE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_LANGUAGE, GtkSourceLanguageClass))
#DEFINE GTKSOURCE_IS_SOURCE_LANGUAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_LANGUAGE))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_LANGUAGE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_LANGUAGE))
#DEFINE GTKSOURCE_SOURCE_LANGUAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_LANGUAGE, GtkSourceLanguageClass))
DECLARE FUNCTION gtk_source_language_get_globs(BYVAL AS GtkSourceLanguage PTR) AS gchar PTR PTR
DECLARE FUNCTION gtk_source_language_get_hidden(BYVAL AS GtkSourceLanguage PTR) AS gboolean
DECLARE FUNCTION gtk_source_language_get_id(BYVAL AS GtkSourceLanguage PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_language_get_metadata(BYVAL AS GtkSourceLanguage PTR, BYVAL AS const gchar PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_language_get_mime_types(BYVAL AS GtkSourceLanguage PTR) AS gchar PTR PTR
DECLARE FUNCTION gtk_source_language_get_name(BYVAL AS GtkSourceLanguage PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_language_get_section(BYVAL AS GtkSourceLanguage PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_language_get_style_fallback(BYVAL AS GtkSourceLanguage PTR, BYVAL AS const gchar PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_language_get_style_ids(BYVAL AS GtkSourceLanguage PTR) AS gchar PTR PTR
DECLARE FUNCTION gtk_source_language_get_style_name(BYVAL AS GtkSourceLanguage PTR, BYVAL AS const gchar PTR) AS const gchar PTR
TYPE _GtkSourceLanguageClass
  AS GObjectClass parent_class
  _gtk_source_reserved1 AS SUB CDECL()
  _gtk_source_reserved2 AS SUB CDECL()
END TYPE
TYPE _GtkSourceLanguageManager
  AS GObject parent_instance
  AS GtkSourceLanguageManagerPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_language_manager_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_LANGUAGE_MANAGER (gtk_source_language_manager_get_type())
#DEFINE GTKSOURCE_SOURCE_LANGUAGE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_LANGUAGE_MANAGER, GtkSourceLanguageManager))
#DEFINE GTKSOURCE_SOURCE_LANGUAGE_MANAGER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_LANGUAGE_MANAGER, GtkSourceLanguageManagerClass))
#DEFINE GTKSOURCE_IS_SOURCE_LANGUAGE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_LANGUAGE_MANAGER))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_LANGUAGE_MANAGER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_LANGUAGE_MANAGER))
#DEFINE GTKSOURCE_SOURCE_LANGUAGE_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_LANGUAGE_MANAGER, GtkSourceLanguageManagerClass))
DECLARE FUNCTION gtk_source_language_manager_new() AS GtkSourceLanguageManager PTR
DECLARE FUNCTION gtk_source_language_manager_get_default() AS GtkSourceLanguageManager PTR
DECLARE FUNCTION gtk_source_language_manager_get_language(BYVAL AS GtkSourceLanguageManager PTR, BYVAL AS const gchar PTR) AS GtkSourceLanguage PTR
DECLARE FUNCTION gtk_source_language_manager_get_language_ids(BYVAL AS GtkSourceLanguageManager PTR) AS const gchar ptr const /'const gchar* const'/ PTR
DECLARE FUNCTION gtk_source_language_manager_get_search_path(BYVAL AS GtkSourceLanguageManager PTR) AS const gchar ptr const /'const gchar* const'/ PTR
DECLARE FUNCTION gtk_source_language_manager_guess_language(BYVAL AS GtkSourceLanguageManager PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR) AS GtkSourceLanguage PTR
DECLARE SUB gtk_source_language_manager_set_search_path(BYVAL AS GtkSourceLanguageManager PTR, BYVAL AS gchar PTR PTR)
TYPE _GtkSourceLanguageManagerClass
  AS GObjectClass parent_class
  _gtk_source_reserved1 AS SUB CDECL()
  _gtk_source_reserved2 AS SUB CDECL()
  _gtk_source_reserved3 AS SUB CDECL()
  _gtk_source_reserved4 AS SUB CDECL()
END TYPE
TYPE _GtkSourceMap
  AS GtkSourceView parent_instance
END TYPE
DECLARE FUNCTION gtk_source_map_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_MAP (gtk_source_map_get_type())
#DEFINE GTKSOURCE_SOURCE_MAP(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_MAP, GtkSourceMap))
#DEFINE GTKSOURCE_SOURCE_MAP_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_MAP, GtkSourceMapClass))
#DEFINE GTKSOURCE_IS_SOURCE_MAP(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_MAP))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_MAP(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_MAP))
#DEFINE GTKSOURCE_SOURCE_MAP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_MAP, GtkSourceMapClass))
DECLARE FUNCTION gtk_source_map_new() AS GtkWidget PTR
DECLARE FUNCTION gtk_source_map_get_view(BYVAL AS GtkSourceMap PTR) AS GtkSourceView PTR
DECLARE SUB gtk_source_map_set_view(BYVAL AS GtkSourceMap PTR, BYVAL AS GtkSourceView PTR)
TYPE _GtkSourceMapClass
  AS GtkSourceViewClass parent_class
  AS gpointer padding(9)
END TYPE
TYPE _GtkSourceMark
  AS GtkTextMark parent_instance
  AS GtkSourceMarkPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_mark_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_MARK (gtk_source_mark_get_type())
#DEFINE GTKSOURCE_SOURCE_MARK(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_MARK, GtkSourceMark))
#DEFINE GTKSOURCE_SOURCE_MARK_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_MARK, GtkSourceMarkClass))
#DEFINE GTKSOURCE_IS_SOURCE_MARK(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_MARK))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_MARK(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_MARK))
#DEFINE GTKSOURCE_SOURCE_MARK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_MARK, GtkSourceMarkClass))
DECLARE FUNCTION gtk_source_mark_new(BYVAL AS const gchar PTR, BYVAL AS const gchar PTR) AS GtkSourceMark PTR
DECLARE FUNCTION gtk_source_mark_get_category(BYVAL AS GtkSourceMark PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_mark_next(BYVAL AS GtkSourceMark PTR, BYVAL AS const gchar PTR) AS GtkSourceMark PTR
DECLARE FUNCTION gtk_source_mark_prev(BYVAL AS GtkSourceMark PTR, BYVAL AS const gchar PTR) AS GtkSourceMark PTR
TYPE _GtkSourceMarkAttributes
  AS GObject parent
  AS GtkSourceMarkAttributesPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_mark_attributes_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_MARK_ATTRIBUTES (gtk_source_mark_attributes_get_type())
#DEFINE GTKSOURCE_SOURCE_MARK_ATTRIBUTES(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_MARK_ATTRIBUTES, GtkSourceMarkAttributes))
#DEFINE GTKSOURCE_SOURCE_MARK_ATTRIBUTES_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_MARK_ATTRIBUTES, GtkSourceMarkAttributesClass))
#DEFINE GTKSOURCE_IS_SOURCE_MARK_ATTRIBUTES(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_MARK_ATTRIBUTES))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_MARK_ATTRIBUTES(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_MARK_ATTRIBUTES))
#DEFINE GTKSOURCE_SOURCE_MARK_ATTRIBUTES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_MARK_ATTRIBUTES, GtkSourceMarkAttributesClass))
DECLARE FUNCTION gtk_source_mark_attributes_new() AS GtkSourceMarkAttributes PTR
DECLARE FUNCTION gtk_source_mark_attributes_get_background(BYVAL AS GtkSourceMarkAttributes PTR, BYVAL AS GdkRGBA PTR) AS gboolean
DECLARE FUNCTION gtk_source_mark_attributes_get_gicon(BYVAL AS GtkSourceMarkAttributes PTR) AS GIcon PTR
DECLARE FUNCTION gtk_source_mark_attributes_get_icon_name(BYVAL AS GtkSourceMarkAttributes PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_mark_attributes_get_pixbuf(BYVAL AS GtkSourceMarkAttributes PTR) AS const GdkPixbuf PTR
DECLARE FUNCTION gtk_source_mark_attributes_get_stock_id(BYVAL AS GtkSourceMarkAttributes PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_mark_attributes_get_tooltip_markup(BYVAL AS GtkSourceMarkAttributes PTR, BYVAL AS GtkSourceMark PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_mark_attributes_get_tooltip_text(BYVAL AS GtkSourceMarkAttributes PTR, BYVAL AS GtkSourceMark PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_mark_attributes_render_icon(BYVAL AS GtkSourceMarkAttributes PTR, BYVAL AS GtkWidget PTR, BYVAL AS gint) AS const GdkPixbuf PTR
DECLARE SUB gtk_source_mark_attributes_set_background(BYVAL AS GtkSourceMarkAttributes PTR, BYVAL AS const GdkRGBA PTR)
DECLARE SUB gtk_source_mark_attributes_set_gicon(BYVAL AS GtkSourceMarkAttributes PTR, BYVAL AS GIcon PTR)
DECLARE SUB gtk_source_mark_attributes_set_icon_name(BYVAL AS GtkSourceMarkAttributes PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_mark_attributes_set_pixbuf(BYVAL AS GtkSourceMarkAttributes PTR, BYVAL AS const GdkPixbuf PTR)
DECLARE SUB gtk_source_mark_attributes_set_stock_id(BYVAL AS GtkSourceMarkAttributes PTR, BYVAL AS const gchar PTR)
TYPE _GtkSourceMarkAttributesClass
  AS GObjectClass parent_class
END TYPE
TYPE _GtkSourceMarkClass
  AS GtkTextMarkClass parent_class
  _gtk_source_reserved1 AS SUB CDECL()
  _gtk_source_reserved2 AS SUB CDECL()
END TYPE
TYPE _GtkSourcePrintCompositor
  AS GObject parent_instance
  AS GtkSourcePrintCompositorPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_newline_type_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_NEWLINE_TYPE (gtk_source_newline_type_get_type())
DECLARE FUNCTION gtk_source_print_compositor_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_PRINT_COMPOSITOR (gtk_source_print_compositor_get_type())
#DEFINE GTKSOURCE_SOURCE_PRINT_COMPOSITOR(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_PRINT_COMPOSITOR, GtkSourcePrintCompositor))
#DEFINE GTKSOURCE_SOURCE_PRINT_COMPOSITOR_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_PRINT_COMPOSITOR, GtkSourcePrintCompositorClass))
#DEFINE GTKSOURCE_IS_SOURCE_PRINT_COMPOSITOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_PRINT_COMPOSITOR))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_PRINT_COMPOSITOR(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_PRINT_COMPOSITOR))
#DEFINE GTKSOURCE_SOURCE_PRINT_COMPOSITOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_PRINT_COMPOSITOR, GtkSourcePrintCompositorClass))
DECLARE FUNCTION gtk_source_print_compositor_new(BYVAL AS GtkSourceBuffer PTR) AS GtkSourcePrintCompositor PTR
DECLARE FUNCTION gtk_source_print_compositor_new_from_view(BYVAL AS GtkSourceView PTR) AS GtkSourcePrintCompositor PTR
DECLARE SUB gtk_source_print_compositor_draw_page(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS GtkPrintContext PTR, BYVAL AS gint)
DECLARE FUNCTION gtk_source_print_compositor_get_body_font_name(BYVAL AS GtkSourcePrintCompositor PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_print_compositor_get_bottom_margin(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS GtkUnit) AS gdouble
DECLARE FUNCTION gtk_source_print_compositor_get_buffer(BYVAL AS GtkSourcePrintCompositor PTR) AS GtkSourceBuffer PTR
DECLARE FUNCTION gtk_source_print_compositor_get_footer_font_name(BYVAL AS GtkSourcePrintCompositor PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_print_compositor_get_header_font_name(BYVAL AS GtkSourcePrintCompositor PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_print_compositor_get_highlight_syntax(BYVAL AS GtkSourcePrintCompositor PTR) AS gboolean
DECLARE FUNCTION gtk_source_print_compositor_get_left_margin(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS GtkUnit) AS gdouble
DECLARE FUNCTION gtk_source_print_compositor_get_line_numbers_font_name(BYVAL AS GtkSourcePrintCompositor PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_print_compositor_get_n_pages(BYVAL AS GtkSourcePrintCompositor PTR) AS gint
DECLARE FUNCTION gtk_source_print_compositor_get_pagination_progress(BYVAL AS GtkSourcePrintCompositor PTR) AS gdouble
DECLARE FUNCTION gtk_source_print_compositor_get_print_footer(BYVAL AS GtkSourcePrintCompositor PTR) AS gboolean
DECLARE FUNCTION gtk_source_print_compositor_get_print_header(BYVAL AS GtkSourcePrintCompositor PTR) AS gboolean
DECLARE FUNCTION gtk_source_print_compositor_get_print_line_numbers(BYVAL AS GtkSourcePrintCompositor PTR) AS guint
DECLARE FUNCTION gtk_source_print_compositor_get_right_margin(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS GtkUnit) AS gdouble
DECLARE FUNCTION gtk_source_print_compositor_get_tab_width(BYVAL AS GtkSourcePrintCompositor PTR) AS guint
DECLARE FUNCTION gtk_source_print_compositor_get_top_margin(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS GtkUnit) AS gdouble
DECLARE FUNCTION gtk_source_print_compositor_get_wrap_mode(BYVAL AS GtkSourcePrintCompositor PTR) AS GtkWrapMode
DECLARE FUNCTION gtk_source_print_compositor_paginate(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS GtkPrintContext PTR) AS gboolean
DECLARE SUB gtk_source_print_compositor_set_body_font_name(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_print_compositor_set_bottom_margin(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS gdouble, BYVAL AS GtkUnit)
DECLARE SUB gtk_source_print_compositor_set_footer_font_name(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_print_compositor_set_footer_format(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS gboolean, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_print_compositor_set_header_font_name(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_print_compositor_set_header_format(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS gboolean, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_print_compositor_set_highlight_syntax(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_print_compositor_set_left_margin(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS gdouble, BYVAL AS GtkUnit)
DECLARE SUB gtk_source_print_compositor_set_line_numbers_font_name(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_print_compositor_set_print_footer(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_print_compositor_set_print_header(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_print_compositor_set_print_line_numbers(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS guint)
DECLARE SUB gtk_source_print_compositor_set_right_margin(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS gdouble, BYVAL AS GtkUnit)
DECLARE SUB gtk_source_print_compositor_set_tab_width(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS guint)
DECLARE SUB gtk_source_print_compositor_set_top_margin(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS gdouble, BYVAL AS GtkUnit)
DECLARE SUB gtk_source_print_compositor_set_wrap_mode(BYVAL AS GtkSourcePrintCompositor PTR, BYVAL AS GtkWrapMode)
TYPE _GtkSourcePrintCompositorClass
  AS GObjectClass parent_class
  _gtk_source_reserved1 AS SUB CDECL()
  _gtk_source_reserved2 AS SUB CDECL()
END TYPE
TYPE _GtkSourceRegion
  AS GObject parent_instance
END TYPE
DECLARE FUNCTION gtk_source_region_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_REGION (gtk_source_region_get_type())
#DEFINE GTKSOURCE_SOURCE_REGION(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_REGION, GtkSourceRegion))
#DEFINE GTKSOURCE_SOURCE_REGION_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_REGION, GtkSourceRegionClass))
#DEFINE GTKSOURCE_IS_SOURCE_REGION(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_REGION))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_REGION(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_REGION))
#DEFINE GTKSOURCE_SOURCE_REGION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_REGION, GtkSourceRegionClass))
DECLARE FUNCTION gtk_source_region_new(BYVAL AS GtkTextBuffer PTR) AS GtkSourceRegion PTR
DECLARE SUB gtk_source_region_add_region(BYVAL AS GtkSourceRegion PTR, BYVAL AS GtkSourceRegion PTR)
DECLARE SUB gtk_source_region_add_subregion(BYVAL AS GtkSourceRegion PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS const GtkTextIter PTR)
DECLARE FUNCTION gtk_source_region_get_bounds(BYVAL AS GtkSourceRegion PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR) AS gboolean
DECLARE FUNCTION gtk_source_region_get_buffer(BYVAL AS GtkSourceRegion PTR) AS GtkTextBuffer PTR
DECLARE SUB gtk_source_region_get_start_region_iter(BYVAL AS GtkSourceRegion PTR, BYVAL AS GtkSourceRegionIter PTR)
DECLARE FUNCTION gtk_source_region_intersect_region(BYVAL AS GtkSourceRegion PTR, BYVAL AS GtkSourceRegion PTR) AS GtkSourceRegion PTR
DECLARE FUNCTION gtk_source_region_intersect_subregion(BYVAL AS GtkSourceRegion PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS const GtkTextIter PTR) AS GtkSourceRegion PTR
DECLARE FUNCTION gtk_source_region_is_empty(BYVAL AS GtkSourceRegion PTR) AS gboolean
DECLARE SUB gtk_source_region_subtract_region(BYVAL AS GtkSourceRegion PTR, BYVAL AS GtkSourceRegion PTR)
DECLARE SUB gtk_source_region_subtract_subregion(BYVAL AS GtkSourceRegion PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS const GtkTextIter PTR)
DECLARE FUNCTION gtk_source_region_to_string(BYVAL AS GtkSourceRegion PTR) AS gchar PTR
TYPE _GtkSourceRegionClass
  AS GObjectClass parent_class
  AS gpointer padding(7)
END TYPE
TYPE _GtkSourceRegionIter
  AS gpointer dummy1
  AS guint32 dummy2
  AS gpointer dummy3
END TYPE
DECLARE FUNCTION gtk_source_region_iter_get_subregion(BYVAL AS GtkSourceRegionIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR) AS gboolean
DECLARE FUNCTION gtk_source_region_iter_is_end(BYVAL AS GtkSourceRegionIter PTR) AS gboolean
DECLARE FUNCTION gtk_source_region_iter_next(BYVAL AS GtkSourceRegionIter PTR) AS gboolean
TYPE _GtkSourceSearchContext
  AS GObject parent
  AS GtkSourceSearchContextPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_search_context_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_SEARCH_CONTEXT (gtk_source_search_context_get_type())
#DEFINE GTKSOURCE_SOURCE_SEARCH_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_SEARCH_CONTEXT, GtkSourceSearchContext))
#DEFINE GTKSOURCE_SOURCE_SEARCH_CONTEXT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_SEARCH_CONTEXT, GtkSourceSearchContextClass))
#DEFINE GTKSOURCE_IS_SOURCE_SEARCH_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_SEARCH_CONTEXT))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_SEARCH_CONTEXT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_SEARCH_CONTEXT))
#DEFINE GTKSOURCE_SOURCE_SEARCH_CONTEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_SEARCH_CONTEXT, GtkSourceSearchContextClass))
DECLARE FUNCTION gtk_source_search_context_new(BYVAL AS GtkSourceBuffer PTR, BYVAL AS GtkSourceSearchSettings PTR) AS GtkSourceSearchContext PTR
DECLARE FUNCTION gtk_source_search_context_backward(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_context_backward2(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS gboolean PTR) AS gboolean
DECLARE SUB gtk_source_search_context_backward_async(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS GCancellable PTR, BYVAL AS GAsyncReadyCallback, BYVAL AS gpointer)
DECLARE FUNCTION gtk_source_search_context_backward_finish(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS GAsyncResult PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_context_backward_finish2(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS GAsyncResult PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS gboolean PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_context_forward(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_context_forward2(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS gboolean PTR) AS gboolean
DECLARE SUB gtk_source_search_context_forward_async(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS GCancellable PTR, BYVAL AS GAsyncReadyCallback, BYVAL AS gpointer)
DECLARE FUNCTION gtk_source_search_context_forward_finish(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS GAsyncResult PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_context_forward_finish2(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS GAsyncResult PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS gboolean PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_context_get_buffer(BYVAL AS GtkSourceSearchContext PTR) AS GtkSourceBuffer PTR
DECLARE FUNCTION gtk_source_search_context_get_highlight(BYVAL AS GtkSourceSearchContext PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_context_get_match_style(BYVAL AS GtkSourceSearchContext PTR) AS GtkSourceStyle PTR
DECLARE FUNCTION gtk_source_search_context_get_occurrence_position(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS const GtkTextIter PTR) AS gint
DECLARE FUNCTION gtk_source_search_context_get_occurrences_count(BYVAL AS GtkSourceSearchContext PTR) AS gint
DECLARE FUNCTION gtk_source_search_context_get_regex_error(BYVAL AS GtkSourceSearchContext PTR) AS GError PTR
DECLARE FUNCTION gtk_source_search_context_get_settings(BYVAL AS GtkSourceSearchContext PTR) AS GtkSourceSearchSettings PTR
DECLARE FUNCTION gtk_source_search_context_replace(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS const GtkTextIter PTR, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_context_replace2(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS GtkTextIter PTR, BYVAL AS GtkTextIter PTR, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_context_replace_all(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS guint
DECLARE SUB gtk_source_search_context_set_highlight(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_search_context_set_match_style(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS GtkSourceStyle PTR)
DECLARE SUB gtk_source_search_context_set_settings(BYVAL AS GtkSourceSearchContext PTR, BYVAL AS GtkSourceSearchSettings PTR)
TYPE _GtkSourceSearchContextClass
  AS GObjectClass parent_class
  AS gpointer padding(9)
END TYPE
TYPE _GtkSourceSearchSettings
  AS GObject parent
  AS GtkSourceSearchSettingsPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_search_settings_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_SEARCH_SETTINGS (gtk_source_search_settings_get_type())
#DEFINE GTKSOURCE_SOURCE_SEARCH_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_SEARCH_SETTINGS, GtkSourceSearchSettings))
#DEFINE GTKSOURCE_SOURCE_SEARCH_SETTINGS_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_SEARCH_SETTINGS, GtkSourceSearchSettingsClass))
#DEFINE GTKSOURCE_IS_SOURCE_SEARCH_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_SEARCH_SETTINGS))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_SEARCH_SETTINGS(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_SEARCH_SETTINGS))
#DEFINE GTKSOURCE_SOURCE_SEARCH_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_SEARCH_SETTINGS, GtkSourceSearchSettingsClass))
DECLARE FUNCTION gtk_source_search_settings_new() AS GtkSourceSearchSettings PTR
DECLARE FUNCTION gtk_source_search_settings_get_at_word_boundaries(BYVAL AS GtkSourceSearchSettings PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_settings_get_case_sensitive(BYVAL AS GtkSourceSearchSettings PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_settings_get_regex_enabled(BYVAL AS GtkSourceSearchSettings PTR) AS gboolean
DECLARE FUNCTION gtk_source_search_settings_get_search_text(BYVAL AS GtkSourceSearchSettings PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_search_settings_get_wrap_around(BYVAL AS GtkSourceSearchSettings PTR) AS gboolean
DECLARE SUB gtk_source_search_settings_set_at_word_boundaries(BYVAL AS GtkSourceSearchSettings PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_search_settings_set_case_sensitive(BYVAL AS GtkSourceSearchSettings PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_search_settings_set_regex_enabled(BYVAL AS GtkSourceSearchSettings PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_search_settings_set_search_text(BYVAL AS GtkSourceSearchSettings PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_search_settings_set_wrap_around(BYVAL AS GtkSourceSearchSettings PTR, BYVAL AS gboolean)
TYPE _GtkSourceSearchSettingsClass
  AS GObjectClass parent_class
  AS gpointer padding(9)
END TYPE
TYPE _GtkSourceSpaceDrawer
  AS GObject parent
  AS GtkSourceSpaceDrawerPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_smart_home_end_type_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_SMART_HOME_END_TYPE (gtk_source_smart_home_end_type_get_type())
DECLARE FUNCTION gtk_source_space_drawer_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_SPACE_DRAWER (gtk_source_space_drawer_get_type())
#DEFINE GTKSOURCE_SOURCE_SPACE_DRAWER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_SPACE_DRAWER, GtkSourceSpaceDrawer))
#DEFINE GTKSOURCE_SOURCE_SPACE_DRAWER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_SPACE_DRAWER, GtkSourceSpaceDrawerClass))
#DEFINE GTKSOURCE_IS_SOURCE_SPACE_DRAWER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_SPACE_DRAWER))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_SPACE_DRAWER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_SPACE_DRAWER))
#DEFINE GTKSOURCE_SOURCE_SPACE_DRAWER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_SPACE_DRAWER, GtkSourceSpaceDrawerClass))
DECLARE FUNCTION gtk_source_space_drawer_new() AS GtkSourceSpaceDrawer PTR
DECLARE SUB gtk_source_space_drawer_bind_matrix_setting(BYVAL AS GtkSourceSpaceDrawer PTR, BYVAL AS GSettings PTR, BYVAL AS const gchar PTR, BYVAL AS GSettingsBindFlags)
DECLARE FUNCTION gtk_source_space_drawer_get_enable_matrix(BYVAL AS GtkSourceSpaceDrawer PTR) AS gboolean
DECLARE FUNCTION gtk_source_space_drawer_get_matrix(BYVAL AS GtkSourceSpaceDrawer PTR) AS GVariant PTR
DECLARE FUNCTION gtk_source_space_drawer_get_types_for_locations(BYVAL AS GtkSourceSpaceDrawer PTR, BYVAL AS GtkSourceSpaceLocationFlags) AS GtkSourceSpaceTypeFlags
DECLARE SUB gtk_source_space_drawer_set_enable_matrix(BYVAL AS GtkSourceSpaceDrawer PTR, BYVAL AS gboolean)
DECLARE SUB gtk_source_space_drawer_set_matrix(BYVAL AS GtkSourceSpaceDrawer PTR, BYVAL AS GVariant PTR)
DECLARE SUB gtk_source_space_drawer_set_types_for_locations(BYVAL AS GtkSourceSpaceDrawer PTR, BYVAL AS GtkSourceSpaceLocationFlags, BYVAL AS GtkSourceSpaceTypeFlags)
TYPE _GtkSourceSpaceDrawerClass
  AS GObjectClass parent_class
  AS gpointer padding(19)
END TYPE
DECLARE FUNCTION gtk_source_style_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_STYLE (gtk_source_style_get_type())
#DEFINE GTKSOURCE_SOURCE_STYLE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE, GtkSourceStyle))
#DEFINE GTKSOURCE_SOURCE_STYLE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE, GtkSourceStyleClass))
#DEFINE GTKSOURCE_IS_SOURCE_STYLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_STYLE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE))
#DEFINE GTKSOURCE_SOURCE_STYLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_STYLE, GtkSourceStyleClass))
DECLARE SUB gtk_source_style_apply(BYVAL AS const GtkSourceStyle PTR, BYVAL AS GtkTextTag PTR)
DECLARE FUNCTION gtk_source_style_copy(BYVAL AS const GtkSourceStyle PTR) AS GtkSourceStyle PTR
TYPE _GtkSourceStyleScheme
  AS GObject base
  AS GtkSourceStyleSchemePrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_style_scheme_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME (gtk_source_style_scheme_get_type())
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME, GtkSourceStyleScheme))
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME, GtkSourceStyleSchemeClass))
#DEFINE GTKSOURCE_IS_SOURCE_STYLE_SCHEME(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_STYLE_SCHEME(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME))
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME, GtkSourceStyleSchemeClass))
DECLARE FUNCTION gtk_source_style_scheme_get_authors(BYVAL AS GtkSourceStyleScheme PTR) AS const gchar ptr const /'const gchar* const'/ PTR
DECLARE FUNCTION gtk_source_style_scheme_get_description(BYVAL AS GtkSourceStyleScheme PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_style_scheme_get_filename(BYVAL AS GtkSourceStyleScheme PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_style_scheme_get_id(BYVAL AS GtkSourceStyleScheme PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_style_scheme_get_name(BYVAL AS GtkSourceStyleScheme PTR) AS const gchar PTR
DECLARE FUNCTION gtk_source_style_scheme_get_style(BYVAL AS GtkSourceStyleScheme PTR, BYVAL AS const gchar PTR) AS GtkSourceStyle PTR
DECLARE FUNCTION gtk_source_style_scheme_chooser_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER (gtk_source_style_scheme_chooser_get_type())
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_CHOOSER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER, GtkSourceStyleSchemeChooser))
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_CHOOSER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER, GtkSourceStyleSchemeChooserInterface))
#DEFINE GTKSOURCE_IS_SOURCE_STYLE_SCHEME_CHOOSER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER))
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_CHOOSER_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER, GtkSourceStyleSchemeChooserInterface))
DECLARE FUNCTION gtk_source_style_scheme_chooser_get_style_scheme(BYVAL AS GtkSourceStyleSchemeChooser PTR) AS GtkSourceStyleScheme PTR
DECLARE SUB gtk_source_style_scheme_chooser_set_style_scheme(BYVAL AS GtkSourceStyleSchemeChooser PTR, BYVAL AS GtkSourceStyleScheme PTR)
TYPE _GtkSourceStyleSchemeChooserButton
  AS GtkButton parent
END TYPE
DECLARE FUNCTION gtk_source_style_scheme_chooser_button_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON (gtk_source_style_scheme_chooser_button_get_type())
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON, GtkSourceStyleSchemeChooserButton))
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON, GtkSourceStyleSchemeChooserButtonClass))
#DEFINE GTKSOURCE_IS_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON))
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_BUTTON, GtkSourceStyleSchemeChooserButtonClass))
DECLARE FUNCTION gtk_source_style_scheme_chooser_button_new() AS GtkWidget PTR
TYPE _GtkSourceStyleSchemeChooserButtonClass
  AS GtkButtonClass parent
END TYPE
TYPE _GtkSourceStyleSchemeChooserInterface
  AS GTypeInterface base_interface
  get_style_scheme AS FUNCTION CDECL(BYVAL AS GtkSourceStyleSchemeChooser PTR) AS GtkSourceStyleScheme PTR
  set_style_scheme AS SUB CDECL(BYVAL AS GtkSourceStyleSchemeChooser PTR, BYVAL AS GtkSourceStyleScheme PTR)
  AS gpointer padding(11)
END TYPE
TYPE _GtkSourceStyleSchemeChooserWidget
  AS GtkBin parent
END TYPE
DECLARE FUNCTION gtk_source_style_scheme_chooser_widget_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET (gtk_source_style_scheme_chooser_widget_get_type())
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET, GtkSourceStyleSchemeChooserWidget))
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET, GtkSourceStyleSchemeChooserWidgetClass))
#DEFINE GTKSOURCE_IS_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET))
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_CHOOSER_WIDGET, GtkSourceStyleSchemeChooserWidgetClass))
DECLARE FUNCTION gtk_source_style_scheme_chooser_widget_new() AS GtkWidget PTR
TYPE _GtkSourceStyleSchemeChooserWidgetClass
  AS GtkBinClass parent
END TYPE
TYPE _GtkSourceStyleSchemeClass
  AS GObjectClass base_class
  _gtk_source_reserved1 AS SUB CDECL()
  _gtk_source_reserved2 AS SUB CDECL()
END TYPE
TYPE _GtkSourceStyleSchemeManager
  AS GObject parent
  AS GtkSourceStyleSchemeManagerPrivate PTR priv
END TYPE
DECLARE FUNCTION gtk_source_style_scheme_manager_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_MANAGER (gtk_source_style_scheme_manager_get_type())
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_MANAGER, GtkSourceStyleSchemeManager))
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_MANAGER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_MANAGER, GtkSourceStyleSchemeManagerClass))
#DEFINE GTKSOURCE_IS_SOURCE_STYLE_SCHEME_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_MANAGER))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_STYLE_SCHEME_MANAGER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_MANAGER))
#DEFINE GTKSOURCE_SOURCE_STYLE_SCHEME_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_STYLE_SCHEME_MANAGER, GtkSourceStyleSchemeManagerClass))
DECLARE FUNCTION gtk_source_style_scheme_manager_new() AS GtkSourceStyleSchemeManager PTR
DECLARE FUNCTION gtk_source_style_scheme_manager_get_default() AS GtkSourceStyleSchemeManager PTR
DECLARE SUB gtk_source_style_scheme_manager_append_search_path(BYVAL AS GtkSourceStyleSchemeManager PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_style_scheme_manager_force_rescan(BYVAL AS GtkSourceStyleSchemeManager PTR)
DECLARE FUNCTION gtk_source_style_scheme_manager_get_scheme(BYVAL AS GtkSourceStyleSchemeManager PTR, BYVAL AS const gchar PTR) AS GtkSourceStyleScheme PTR
DECLARE FUNCTION gtk_source_style_scheme_manager_get_scheme_ids(BYVAL AS GtkSourceStyleSchemeManager PTR) AS const gchar ptr const /'const gchar* const'/ PTR
DECLARE FUNCTION gtk_source_style_scheme_manager_get_search_path(BYVAL AS GtkSourceStyleSchemeManager PTR) AS const gchar ptr const /'const gchar* const'/ PTR
DECLARE SUB gtk_source_style_scheme_manager_prepend_search_path(BYVAL AS GtkSourceStyleSchemeManager PTR, BYVAL AS const gchar PTR)
DECLARE SUB gtk_source_style_scheme_manager_set_search_path(BYVAL AS GtkSourceStyleSchemeManager PTR, BYVAL AS gchar PTR PTR)
TYPE _GtkSourceStyleSchemeManagerClass
  AS GObjectClass parent_class
  _gtk_source_reserved1 AS SUB CDECL()
  _gtk_source_reserved2 AS SUB CDECL()
  _gtk_source_reserved3 AS SUB CDECL()
  _gtk_source_reserved4 AS SUB CDECL()
END TYPE
TYPE _GtkSourceTag
  AS GtkTextTag parent_instance
END TYPE
DECLARE FUNCTION gtk_source_tag_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_TAG (gtk_source_tag_get_type())
#DEFINE GTKSOURCE_SOURCE_TAG(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_TAG, GtkSourceTag))
#DEFINE GTKSOURCE_SOURCE_TAG_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_TAG, GtkSourceTagClass))
#DEFINE GTKSOURCE_IS_SOURCE_TAG(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_TAG))
#DEFINE GTKSOURCE_IS_CLASS_SOURCE_TAG(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), GTKSOURCE_TYPE_SOURCE_TAG))
#DEFINE GTKSOURCE_SOURCE_TAG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), GTKSOURCE_TYPE_SOURCE_TAG, GtkSourceTagClass))
DECLARE FUNCTION gtk_source_tag_new(BYVAL AS const gchar PTR) AS GtkTextTag PTR
TYPE _GtkSourceTagClass
  AS GtkTextTagClass parent_class
  AS gpointer padding(9)
END TYPE
DECLARE FUNCTION gtk_source_undo_manager_get_type() AS GType
#DEFINE GTKSOURCE_TYPE_SOURCE_UNDO_MANAGER (gtk_source_undo_manager_get_type())
#DEFINE GTKSOURCE_SOURCE_UNDO_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), GTKSOURCE_TYPE_SOURCE_UNDO_MANAGER, GtkSourceUndoManager))
#DEFINE GTKSOURCE_SOURCE_UNDO_MANAGER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), GTKSOURCE_TYPE_SOURCE_UNDO_MANAGER, GtkSourceUndoManagerIface))
#DEFINE GTKSOURCE_IS_SOURCE_UNDO_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), GTKSOURCE_TYPE_SOURCE_UNDO_MANAGER))
#DEFINE GTKSOURCE_SOURCE_UNDO_MANAGER_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), GTKSOURCE_TYPE_SOURCE_UNDO_MANAGER, GtkSourceUndoManagerIface))
DECLARE SUB gtk_source_undo_manager_begin_not_undoable_action(BYVAL AS GtkSourceUndoManager PTR)
DECLARE FUNCTION gtk_source_undo_manager_can_redo(BYVAL AS GtkSourceUndoManager PTR) AS gboolean
DECLARE SUB gtk_source_undo_manager_can_redo_changed(BYVAL AS GtkSourceUndoManager PTR)
DECLARE FUNCTION gtk_source_undo_manager_can_undo(BYVAL AS GtkSourceUndoManager PTR) AS gboolean
DECLARE SUB gtk_source_undo_manager_can_undo_changed(BYVAL AS GtkSourceUndoManager PTR)
DECLARE SUB gtk_source_undo_manager_end_not_undoable_action(BYVAL AS GtkSourceUndoManager PTR)
DECLARE SUB gtk_source_undo_manager_redo(BYVAL AS GtkSourceUndoManager PTR)
DECLARE SUB gtk_source_undo_manager_undo(BYVAL AS GtkSourceUndoManager PTR)
TYPE _GtkSourceUndoManagerIface
  AS GTypeInterface parent
  can_undo AS FUNCTION CDECL(BYVAL AS GtkSourceUndoManager PTR) AS gboolean
  can_redo AS FUNCTION CDECL(BYVAL AS GtkSourceUndoManager PTR) AS gboolean
  undo AS SUB CDECL(BYVAL AS GtkSourceUndoManager PTR)
  redo AS SUB CDECL(BYVAL AS GtkSourceUndoManager PTR)
  begin_not_undoable_action AS SUB CDECL(BYVAL AS GtkSourceUndoManager PTR)
  end_not_undoable_action AS SUB CDECL(BYVAL AS GtkSourceUndoManager PTR)
  can_undo_changed AS SUB CDECL(BYVAL AS GtkSourceUndoManager PTR)
  can_redo_changed AS SUB CDECL(BYVAL AS GtkSourceUndoManager PTR)
END TYPE
DECLARE FUNCTION gtk_source_view_gutter_position_get_type() AS GType
#DEFINE GTK_TYPE_SOURCE_VIEW_GUTTER_POSITION (gtk_source_view_gutter_position_get_type())
' P_4

DECLARE FUNCTION gtk_source_utils_escape_search_text(BYVAL AS const gchar PTR) AS gchar PTR
DECLARE FUNCTION gtk_source_utils_unescape_search_text(BYVAL AS const gchar PTR) AS gchar PTR
END EXTERN

