'            FreeBasic header file, auto-generated by
'                       ### girtobac ###
' LGPLv2.1 (C) 2013-2022 by Thomas{ doT ]Freiherr[ At ]gmx[ DoT }net
' Auto-translated from file /usr/share/gir-1.0/Graphene-1.0.gir
#INCLUDE ONCE "_GirToBac-0.0.bi"

#UNDEF true
#UNDEF false
TYPE AS BOOLEAN _Bool

' Repository version 1.2
#INCLUDE ONCE "GObject-2.0.bi"
TYPE AS _graphene_box_t graphene_box_t
TYPE AS _graphene_euler_t graphene_euler_t
TYPE AS LONG graphene_euler_order_t
ENUM
  GRAPHENE_EULER_ORDER_DEFAULT = -1
  GRAPHENE_EULER_ORDER_XYZ = 0
  GRAPHENE_EULER_ORDER_YZX = 1
  GRAPHENE_EULER_ORDER_ZXY = 2
  GRAPHENE_EULER_ORDER_XZY = 3
  GRAPHENE_EULER_ORDER_YXZ = 4
  GRAPHENE_EULER_ORDER_ZYX = 5
  GRAPHENE_EULER_ORDER_SXYZ = 6
  GRAPHENE_EULER_ORDER_SXYX = 7
  GRAPHENE_EULER_ORDER_SXZY = 8
  GRAPHENE_EULER_ORDER_SXZX = 9
  GRAPHENE_EULER_ORDER_SYZX = 10
  GRAPHENE_EULER_ORDER_SYZY = 11
  GRAPHENE_EULER_ORDER_SYXZ = 12
  GRAPHENE_EULER_ORDER_SYXY = 13
  GRAPHENE_EULER_ORDER_SZXY = 14
  GRAPHENE_EULER_ORDER_SZXZ = 15
  GRAPHENE_EULER_ORDER_SZYX = 16
  GRAPHENE_EULER_ORDER_SZYZ = 17
  GRAPHENE_EULER_ORDER_RZYX = 18
  GRAPHENE_EULER_ORDER_RXYX = 19
  GRAPHENE_EULER_ORDER_RYZX = 20
  GRAPHENE_EULER_ORDER_RXZX = 21
  GRAPHENE_EULER_ORDER_RXZY = 22
  GRAPHENE_EULER_ORDER_RYZY = 23
  GRAPHENE_EULER_ORDER_RZXY = 24
  GRAPHENE_EULER_ORDER_RYXY = 25
  GRAPHENE_EULER_ORDER_RYXZ = 26
  GRAPHENE_EULER_ORDER_RZXZ = 27
  GRAPHENE_EULER_ORDER_RXYZ = 28
  GRAPHENE_EULER_ORDER_RZYZ = 29
END ENUM
TYPE AS _graphene_frustum_t graphene_frustum_t
#DEFINE GRAPHENE_HAS_GCC 1
#DEFINE GRAPHENE_HAS_SCALAR 1
#DEFINE GRAPHENE_HAS_SSE 1
TYPE AS _graphene_matrix_t graphene_matrix_t
#DEFINE GRAPHENE_PI 3.141593
#DEFINE GRAPHENE_PI_2 1.570796
TYPE AS _graphene_plane_t graphene_plane_t
TYPE AS _graphene_point_t graphene_point_t
TYPE AS _graphene_point3d_t graphene_point3d_t
TYPE AS _graphene_quad_t graphene_quad_t
TYPE AS _graphene_quaternion_t graphene_quaternion_t
TYPE AS _graphene_ray_t graphene_ray_t
TYPE AS LONG graphene_ray_intersection_kind_t
ENUM
  GRAPHENE_RAY_INTERSECTION_KIND_NONE = 0
  GRAPHENE_RAY_INTERSECTION_KIND_ENTER = 1
  GRAPHENE_RAY_INTERSECTION_KIND_LEAVE = 2
END ENUM
TYPE AS _graphene_rect_t graphene_rect_t
#DEFINE GRAPHENE_SIMD_S @!"sse"
TYPE AS _graphene_simd4f_t graphene_simd4f_t
TYPE AS _graphene_simd4x4f_t graphene_simd4x4f_t
TYPE AS _graphene_size_t graphene_size_t
TYPE AS _graphene_sphere_t graphene_sphere_t
TYPE AS _graphene_triangle_t graphene_triangle_t
#DEFINE GRAPHENE_VEC2_LEN 2
#DEFINE GRAPHENE_VEC3_LEN 3
#DEFINE GRAPHENE_VEC4_LEN 4
TYPE AS _graphene_vec2_t graphene_vec2_t
TYPE AS _graphene_vec3_t graphene_vec3_t
TYPE AS _graphene_vec4_t graphene_vec4_t
#DEFINE false 0
#DEFINE true 1
EXTERN "C" LIB "graphene-1.0"
' P_X

TYPE _graphene_simd4f_t
  AS gfloat x
  AS gfloat y
  AS gfloat z
  AS gfloat w
END TYPE
TYPE _graphene_vec3_t
  AS graphene_simd4f_t value
END TYPE
DECLARE FUNCTION graphene_vec3_alloc() AS graphene_vec3_t PTR
DECLARE SUB graphene_vec3_add(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_vec3_cross(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_vec3_divide(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE FUNCTION graphene_vec3_dot(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR) AS gfloat
DECLARE FUNCTION graphene_vec3_equal(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR) AS _Bool
DECLARE SUB graphene_vec3_free(BYVAL AS graphene_vec3_t PTR)
DECLARE FUNCTION graphene_vec3_get_x(BYVAL AS const graphene_vec3_t PTR) AS gfloat
DECLARE SUB graphene_vec3_get_xy(BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE SUB graphene_vec3_get_xy0(BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_vec3_get_xyz0(BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE SUB graphene_vec3_get_xyz1(BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE SUB graphene_vec3_get_xyzw(BYVAL AS const graphene_vec3_t PTR, BYVAL AS gfloat, BYVAL AS graphene_vec4_t PTR)
DECLARE FUNCTION graphene_vec3_get_y(BYVAL AS const graphene_vec3_t PTR) AS gfloat
DECLARE FUNCTION graphene_vec3_get_z(BYVAL AS const graphene_vec3_t PTR) AS gfloat
DECLARE FUNCTION graphene_vec3_init(BYVAL AS graphene_vec3_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_vec3_t PTR
DECLARE FUNCTION graphene_vec3_init_from_float(BYVAL AS graphene_vec3_t PTR, BYVAL AS CONST gfloat PTR) AS graphene_vec3_t PTR
DECLARE FUNCTION graphene_vec3_init_from_vec3(BYVAL AS graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR) AS graphene_vec3_t PTR
DECLARE SUB graphene_vec3_interpolate(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS double, BYVAL AS graphene_vec3_t PTR)
DECLARE FUNCTION graphene_vec3_length(BYVAL AS const graphene_vec3_t PTR) AS gfloat
DECLARE SUB graphene_vec3_max(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_vec3_min(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_vec3_multiply(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE FUNCTION graphene_vec3_near(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS gfloat) AS _Bool
DECLARE SUB graphene_vec3_negate(BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_vec3_normalize(BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_vec3_scale(BYVAL AS const graphene_vec3_t PTR, BYVAL AS gfloat, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_vec3_subtract(BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_vec3_to_float(BYVAL AS const graphene_vec3_t PTR, BYVAL AS gfloat PTR)
DECLARE FUNCTION graphene_vec3_one() AS const graphene_vec3_t PTR
DECLARE FUNCTION graphene_vec3_x_axis() AS const graphene_vec3_t PTR
DECLARE FUNCTION graphene_vec3_y_axis() AS const graphene_vec3_t PTR
DECLARE FUNCTION graphene_vec3_z_axis() AS const graphene_vec3_t PTR
DECLARE FUNCTION graphene_vec3_zero() AS const graphene_vec3_t PTR
TYPE _graphene_plane_t
  AS graphene_vec3_t normal
  AS gfloat constant
END TYPE
DECLARE FUNCTION graphene_plane_alloc() AS graphene_plane_t PTR
DECLARE FUNCTION graphene_plane_distance(BYVAL AS const graphene_plane_t PTR, BYVAL AS const graphene_point3d_t PTR) AS gfloat
DECLARE FUNCTION graphene_plane_equal(BYVAL AS const graphene_plane_t PTR, BYVAL AS const graphene_plane_t PTR) AS _Bool
DECLARE SUB graphene_plane_free(BYVAL AS graphene_plane_t PTR)
DECLARE FUNCTION graphene_plane_get_constant(BYVAL AS const graphene_plane_t PTR) AS gfloat
DECLARE SUB graphene_plane_get_normal(BYVAL AS const graphene_plane_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE FUNCTION graphene_plane_init(BYVAL AS graphene_plane_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS gfloat) AS graphene_plane_t PTR
DECLARE FUNCTION graphene_plane_init_from_plane(BYVAL AS graphene_plane_t PTR, BYVAL AS const graphene_plane_t PTR) AS graphene_plane_t PTR
DECLARE FUNCTION graphene_plane_init_from_point(BYVAL AS graphene_plane_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_point3d_t PTR) AS graphene_plane_t PTR
DECLARE FUNCTION graphene_plane_init_from_points(BYVAL AS graphene_plane_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR) AS graphene_plane_t PTR
DECLARE FUNCTION graphene_plane_init_from_vec4(BYVAL AS graphene_plane_t PTR, BYVAL AS const graphene_vec4_t PTR) AS graphene_plane_t PTR
DECLARE SUB graphene_plane_negate(BYVAL AS const graphene_plane_t PTR, BYVAL AS graphene_plane_t PTR)
DECLARE SUB graphene_plane_normalize(BYVAL AS const graphene_plane_t PTR, BYVAL AS graphene_plane_t PTR)
DECLARE SUB graphene_plane_transform(BYVAL AS const graphene_plane_t PTR, BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_matrix_t PTR, BYVAL AS graphene_plane_t PTR)
TYPE _graphene_simd4x4f_t
  AS graphene_simd4f_t x
  AS graphene_simd4f_t y
  AS graphene_simd4f_t z
  AS graphene_simd4f_t w
END TYPE
TYPE _graphene_size_t
  AS gfloat width
  AS gfloat height
END TYPE
DECLARE FUNCTION graphene_size_alloc() AS graphene_size_t PTR
DECLARE FUNCTION graphene_size_equal(BYVAL AS const graphene_size_t PTR, BYVAL AS const graphene_size_t PTR) AS _Bool
DECLARE SUB graphene_size_free(BYVAL AS graphene_size_t PTR)
DECLARE FUNCTION graphene_size_init(BYVAL AS graphene_size_t PTR, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_size_t PTR
DECLARE FUNCTION graphene_size_init_from_size(BYVAL AS graphene_size_t PTR, BYVAL AS const graphene_size_t PTR) AS graphene_size_t PTR
DECLARE SUB graphene_size_interpolate(BYVAL AS const graphene_size_t PTR, BYVAL AS const graphene_size_t PTR, BYVAL AS double, BYVAL AS graphene_size_t PTR)
DECLARE SUB graphene_size_scale(BYVAL AS const graphene_size_t PTR, BYVAL AS gfloat, BYVAL AS graphene_size_t PTR)
DECLARE FUNCTION graphene_size_zero() AS const graphene_size_t PTR
' P_3

TYPE _graphene_box_t
  AS graphene_vec3_t min
  AS graphene_vec3_t max
END TYPE
DECLARE FUNCTION graphene_box_alloc() AS graphene_box_t PTR
DECLARE FUNCTION graphene_box_contains_box(BYVAL AS const graphene_box_t PTR, BYVAL AS const graphene_box_t PTR) AS _Bool
DECLARE FUNCTION graphene_box_contains_point(BYVAL AS const graphene_box_t PTR, BYVAL AS const graphene_point3d_t PTR) AS _Bool
DECLARE FUNCTION graphene_box_equal(BYVAL AS const graphene_box_t PTR, BYVAL AS const graphene_box_t PTR) AS _Bool
DECLARE SUB graphene_box_expand(BYVAL AS const graphene_box_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS graphene_box_t PTR)
DECLARE SUB graphene_box_expand_scalar(BYVAL AS const graphene_box_t PTR, BYVAL AS gfloat, BYVAL AS graphene_box_t PTR)
DECLARE SUB graphene_box_expand_vec3(BYVAL AS const graphene_box_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_box_t PTR)
DECLARE SUB graphene_box_free(BYVAL AS graphene_box_t PTR)
DECLARE SUB graphene_box_get_bounding_sphere(BYVAL AS const graphene_box_t PTR, BYVAL AS graphene_sphere_t PTR)
DECLARE SUB graphene_box_get_center(BYVAL AS const graphene_box_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE FUNCTION graphene_box_get_depth(BYVAL AS const graphene_box_t PTR) AS gfloat
DECLARE FUNCTION graphene_box_get_height(BYVAL AS const graphene_box_t PTR) AS gfloat
DECLARE SUB graphene_box_get_max(BYVAL AS const graphene_box_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE SUB graphene_box_get_min(BYVAL AS const graphene_box_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE SUB graphene_box_get_size(BYVAL AS const graphene_box_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_box_get_vertices(BYVAL AS const graphene_box_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE FUNCTION graphene_box_get_width(BYVAL AS const graphene_box_t PTR) AS gfloat
DECLARE FUNCTION graphene_box_init(BYVAL AS graphene_box_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR) AS graphene_box_t PTR
DECLARE FUNCTION graphene_box_init_from_box(BYVAL AS graphene_box_t PTR, BYVAL AS const graphene_box_t PTR) AS graphene_box_t PTR
DECLARE FUNCTION graphene_box_init_from_points(BYVAL AS graphene_box_t PTR, BYVAL AS guint, BYVAL AS const graphene_point3d_t PTR) AS graphene_box_t PTR
DECLARE FUNCTION graphene_box_init_from_vec3(BYVAL AS graphene_box_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR) AS graphene_box_t PTR
DECLARE FUNCTION graphene_box_init_from_vectors(BYVAL AS graphene_box_t PTR, BYVAL AS guint, BYVAL AS const graphene_vec3_t PTR) AS graphene_box_t PTR
DECLARE FUNCTION graphene_box_intersection(BYVAL AS const graphene_box_t PTR, BYVAL AS const graphene_box_t PTR, BYVAL AS graphene_box_t PTR) AS _Bool
DECLARE SUB graphene_box_union(BYVAL AS const graphene_box_t PTR, BYVAL AS const graphene_box_t PTR, BYVAL AS graphene_box_t PTR)
DECLARE FUNCTION graphene_box_empty() AS const graphene_box_t PTR
DECLARE FUNCTION graphene_box_infinite() AS const graphene_box_t PTR
DECLARE FUNCTION graphene_box_minus_one() AS const graphene_box_t PTR
DECLARE FUNCTION graphene_box_one() AS const graphene_box_t PTR
DECLARE FUNCTION graphene_box_one_minus_one() AS const graphene_box_t PTR
DECLARE FUNCTION graphene_box_zero() AS const graphene_box_t PTR
TYPE _graphene_euler_t
  AS graphene_vec3_t angles
  AS graphene_euler_order_t order
END TYPE
DECLARE FUNCTION graphene_euler_alloc() AS graphene_euler_t PTR
DECLARE FUNCTION graphene_euler_equal(BYVAL AS const graphene_euler_t PTR, BYVAL AS const graphene_euler_t PTR) AS _Bool
DECLARE SUB graphene_euler_free(BYVAL AS graphene_euler_t PTR)
DECLARE FUNCTION graphene_euler_get_alpha(BYVAL AS const graphene_euler_t PTR) AS gfloat
DECLARE FUNCTION graphene_euler_get_beta(BYVAL AS const graphene_euler_t PTR) AS gfloat
DECLARE FUNCTION graphene_euler_get_gamma(BYVAL AS const graphene_euler_t PTR) AS gfloat
DECLARE FUNCTION graphene_euler_get_order(BYVAL AS const graphene_euler_t PTR) AS graphene_euler_order_t
DECLARE FUNCTION graphene_euler_get_x(BYVAL AS const graphene_euler_t PTR) AS gfloat
DECLARE FUNCTION graphene_euler_get_y(BYVAL AS const graphene_euler_t PTR) AS gfloat
DECLARE FUNCTION graphene_euler_get_z(BYVAL AS const graphene_euler_t PTR) AS gfloat
DECLARE FUNCTION graphene_euler_init(BYVAL AS graphene_euler_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_euler_t PTR
DECLARE FUNCTION graphene_euler_init_from_euler(BYVAL AS graphene_euler_t PTR, BYVAL AS const graphene_euler_t PTR) AS graphene_euler_t PTR
DECLARE FUNCTION graphene_euler_init_from_matrix(BYVAL AS graphene_euler_t PTR, BYVAL AS const graphene_matrix_t PTR, BYVAL AS graphene_euler_order_t) AS graphene_euler_t PTR
DECLARE FUNCTION graphene_euler_init_from_quaternion(BYVAL AS graphene_euler_t PTR, BYVAL AS const graphene_quaternion_t PTR, BYVAL AS graphene_euler_order_t) AS graphene_euler_t PTR
DECLARE FUNCTION graphene_euler_init_from_radians(BYVAL AS graphene_euler_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS graphene_euler_order_t) AS graphene_euler_t PTR
DECLARE FUNCTION graphene_euler_init_from_vec3(BYVAL AS graphene_euler_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_euler_order_t) AS graphene_euler_t PTR
DECLARE FUNCTION graphene_euler_init_with_order(BYVAL AS graphene_euler_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS graphene_euler_order_t) AS graphene_euler_t PTR
DECLARE SUB graphene_euler_reorder(BYVAL AS const graphene_euler_t PTR, BYVAL AS graphene_euler_order_t, BYVAL AS graphene_euler_t PTR)
DECLARE SUB graphene_euler_to_matrix(BYVAL AS const graphene_euler_t PTR, BYVAL AS graphene_matrix_t PTR)
DECLARE SUB graphene_euler_to_quaternion(BYVAL AS const graphene_euler_t PTR, BYVAL AS graphene_quaternion_t PTR)
DECLARE SUB graphene_euler_to_vec3(BYVAL AS const graphene_euler_t PTR, BYVAL AS graphene_vec3_t PTR)
TYPE _graphene_frustum_t
  AS graphene_plane_t planes(5)
END TYPE
DECLARE FUNCTION graphene_frustum_alloc() AS graphene_frustum_t PTR
DECLARE FUNCTION graphene_frustum_contains_point(BYVAL AS const graphene_frustum_t PTR, BYVAL AS const graphene_point3d_t PTR) AS _Bool
DECLARE FUNCTION graphene_frustum_equal(BYVAL AS const graphene_frustum_t PTR, BYVAL AS const graphene_frustum_t PTR) AS _Bool
DECLARE SUB graphene_frustum_free(BYVAL AS graphene_frustum_t PTR)
DECLARE SUB graphene_frustum_get_planes(BYVAL AS const graphene_frustum_t PTR, BYVAL AS graphene_plane_t PTR)
DECLARE FUNCTION graphene_frustum_init(BYVAL AS graphene_frustum_t PTR, BYVAL AS const graphene_plane_t PTR, BYVAL AS const graphene_plane_t PTR, BYVAL AS const graphene_plane_t PTR, BYVAL AS const graphene_plane_t PTR, BYVAL AS const graphene_plane_t PTR, BYVAL AS const graphene_plane_t PTR) AS graphene_frustum_t PTR
DECLARE FUNCTION graphene_frustum_init_from_frustum(BYVAL AS graphene_frustum_t PTR, BYVAL AS const graphene_frustum_t PTR) AS graphene_frustum_t PTR
DECLARE FUNCTION graphene_frustum_init_from_matrix(BYVAL AS graphene_frustum_t PTR, BYVAL AS const graphene_matrix_t PTR) AS graphene_frustum_t PTR
DECLARE FUNCTION graphene_frustum_intersects_box(BYVAL AS const graphene_frustum_t PTR, BYVAL AS const graphene_box_t PTR) AS _Bool
DECLARE FUNCTION graphene_frustum_intersects_sphere(BYVAL AS const graphene_frustum_t PTR, BYVAL AS const graphene_sphere_t PTR) AS _Bool
TYPE _graphene_matrix_t
  AS graphene_simd4x4f_t value
END TYPE
DECLARE FUNCTION graphene_matrix_alloc() AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_decompose(BYVAL AS const graphene_matrix_t PTR, BYVAL AS graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR, BYVAL AS graphene_quaternion_t PTR, BYVAL AS graphene_vec3_t PTR, BYVAL AS graphene_vec4_t PTR) AS _Bool
DECLARE FUNCTION graphene_matrix_determinant(BYVAL AS const graphene_matrix_t PTR) AS gfloat
DECLARE FUNCTION graphene_matrix_equal(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_matrix_t PTR) AS _Bool
DECLARE FUNCTION graphene_matrix_equal_fast(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_matrix_t PTR) AS _Bool
DECLARE SUB graphene_matrix_free(BYVAL AS graphene_matrix_t PTR)
DECLARE SUB graphene_matrix_get_row(BYVAL AS const graphene_matrix_t PTR, BYVAL AS guint, BYVAL AS graphene_vec4_t PTR)
DECLARE FUNCTION graphene_matrix_get_value(BYVAL AS const graphene_matrix_t PTR, BYVAL AS guint, BYVAL AS guint) AS gfloat
DECLARE FUNCTION graphene_matrix_get_x_scale(BYVAL AS const graphene_matrix_t PTR) AS gfloat
DECLARE FUNCTION graphene_matrix_get_x_translation(BYVAL AS const graphene_matrix_t PTR) AS gfloat
DECLARE FUNCTION graphene_matrix_get_y_scale(BYVAL AS const graphene_matrix_t PTR) AS gfloat
DECLARE FUNCTION graphene_matrix_get_y_translation(BYVAL AS const graphene_matrix_t PTR) AS gfloat
DECLARE FUNCTION graphene_matrix_get_z_scale(BYVAL AS const graphene_matrix_t PTR) AS gfloat
DECLARE FUNCTION graphene_matrix_get_z_translation(BYVAL AS const graphene_matrix_t PTR) AS gfloat
DECLARE FUNCTION graphene_matrix_init_from_2d(BYVAL AS graphene_matrix_t PTR, BYVAL AS double, BYVAL AS double, BYVAL AS double, BYVAL AS double, BYVAL AS double, BYVAL AS double) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_from_float(BYVAL AS graphene_matrix_t PTR, BYVAL AS CONST gfloat PTR) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_from_matrix(BYVAL AS graphene_matrix_t PTR, BYVAL AS const graphene_matrix_t PTR) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_from_vec4(BYVAL AS graphene_matrix_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_frustum(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_identity(BYVAL AS graphene_matrix_t PTR) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_look_at(BYVAL AS graphene_matrix_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_ortho(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_perspective(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_rotate(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat, BYVAL AS const graphene_vec3_t PTR) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_scale(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_skew(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_matrix_t PTR
DECLARE FUNCTION graphene_matrix_init_translate(BYVAL AS graphene_matrix_t PTR, BYVAL AS const graphene_point3d_t PTR) AS graphene_matrix_t PTR
DECLARE SUB graphene_matrix_interpolate(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_matrix_t PTR, BYVAL AS double, BYVAL AS graphene_matrix_t PTR)
DECLARE FUNCTION graphene_matrix_inverse(BYVAL AS const graphene_matrix_t PTR, BYVAL AS graphene_matrix_t PTR) AS _Bool
DECLARE FUNCTION graphene_matrix_is_2d(BYVAL AS const graphene_matrix_t PTR) AS _Bool
DECLARE FUNCTION graphene_matrix_is_backface_visible(BYVAL AS const graphene_matrix_t PTR) AS _Bool
DECLARE FUNCTION graphene_matrix_is_identity(BYVAL AS const graphene_matrix_t PTR) AS _Bool
DECLARE FUNCTION graphene_matrix_is_singular(BYVAL AS const graphene_matrix_t PTR) AS _Bool
DECLARE SUB graphene_matrix_multiply(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_matrix_t PTR, BYVAL AS graphene_matrix_t PTR)
DECLARE FUNCTION graphene_matrix_near(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_matrix_t PTR, BYVAL AS gfloat) AS _Bool
DECLARE SUB graphene_matrix_normalize(BYVAL AS const graphene_matrix_t PTR, BYVAL AS graphene_matrix_t PTR)
DECLARE SUB graphene_matrix_perspective(BYVAL AS const graphene_matrix_t PTR, BYVAL AS gfloat, BYVAL AS graphene_matrix_t PTR)
DECLARE SUB graphene_matrix_print(BYVAL AS const graphene_matrix_t PTR)
DECLARE SUB graphene_matrix_project_point(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_point_t PTR, BYVAL AS graphene_point_t PTR)
DECLARE SUB graphene_matrix_project_rect(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_quad_t PTR)
DECLARE SUB graphene_matrix_project_rect_bounds(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_rect_t PTR)
DECLARE SUB graphene_matrix_rotate(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat, BYVAL AS const graphene_vec3_t PTR)
DECLARE SUB graphene_matrix_rotate_euler(BYVAL AS graphene_matrix_t PTR, BYVAL AS const graphene_euler_t PTR)
DECLARE SUB graphene_matrix_rotate_quaternion(BYVAL AS graphene_matrix_t PTR, BYVAL AS const graphene_quaternion_t PTR)
DECLARE SUB graphene_matrix_rotate_x(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat)
DECLARE SUB graphene_matrix_rotate_y(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat)
DECLARE SUB graphene_matrix_rotate_z(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat)
DECLARE SUB graphene_matrix_scale(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat)
DECLARE SUB graphene_matrix_skew_xy(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat)
DECLARE SUB graphene_matrix_skew_xz(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat)
DECLARE SUB graphene_matrix_skew_yz(BYVAL AS graphene_matrix_t PTR, BYVAL AS gfloat)
DECLARE FUNCTION graphene_matrix_to_2d(BYVAL AS const graphene_matrix_t PTR, BYVAL AS double PTR, BYVAL AS double PTR, BYVAL AS double PTR, BYVAL AS double PTR, BYVAL AS double PTR, BYVAL AS double PTR) AS _Bool
DECLARE SUB graphene_matrix_to_float(BYVAL AS const graphene_matrix_t PTR, BYVAL AS gfloat PTR)
DECLARE SUB graphene_matrix_transform_bounds(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_rect_t PTR)
DECLARE SUB graphene_matrix_transform_box(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_box_t PTR, BYVAL AS graphene_box_t PTR)
DECLARE SUB graphene_matrix_transform_point(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_point_t PTR, BYVAL AS graphene_point_t PTR)
DECLARE SUB graphene_matrix_transform_point3d(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE SUB graphene_matrix_transform_ray(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_ray_t PTR, BYVAL AS graphene_ray_t PTR)
DECLARE SUB graphene_matrix_transform_rect(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_quad_t PTR)
DECLARE SUB graphene_matrix_transform_sphere(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_sphere_t PTR, BYVAL AS graphene_sphere_t PTR)
DECLARE SUB graphene_matrix_transform_vec3(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_matrix_transform_vec4(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE SUB graphene_matrix_translate(BYVAL AS graphene_matrix_t PTR, BYVAL AS const graphene_point3d_t PTR)
DECLARE SUB graphene_matrix_transpose(BYVAL AS const graphene_matrix_t PTR, BYVAL AS graphene_matrix_t PTR)
DECLARE SUB graphene_matrix_unproject_point3d(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE SUB graphene_matrix_untransform_bounds(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_rect_t PTR)
DECLARE FUNCTION graphene_matrix_untransform_point(BYVAL AS const graphene_matrix_t PTR, BYVAL AS const graphene_point_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_point_t PTR) AS _Bool
TYPE _graphene_point_t
  AS gfloat x
  AS gfloat y
END TYPE
DECLARE FUNCTION graphene_point_alloc() AS graphene_point_t PTR
DECLARE FUNCTION graphene_point_distance(BYVAL AS const graphene_point_t PTR, BYVAL AS const graphene_point_t PTR, BYVAL AS gfloat PTR, BYVAL AS gfloat PTR) AS gfloat
DECLARE FUNCTION graphene_point_equal(BYVAL AS const graphene_point_t PTR, BYVAL AS const graphene_point_t PTR) AS _Bool
DECLARE SUB graphene_point_free(BYVAL AS graphene_point_t PTR)
DECLARE FUNCTION graphene_point_init(BYVAL AS graphene_point_t PTR, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_point_t PTR
DECLARE FUNCTION graphene_point_init_from_point(BYVAL AS graphene_point_t PTR, BYVAL AS const graphene_point_t PTR) AS graphene_point_t PTR
DECLARE FUNCTION graphene_point_init_from_vec2(BYVAL AS graphene_point_t PTR, BYVAL AS const graphene_vec2_t PTR) AS graphene_point_t PTR
DECLARE SUB graphene_point_interpolate(BYVAL AS const graphene_point_t PTR, BYVAL AS const graphene_point_t PTR, BYVAL AS double, BYVAL AS graphene_point_t PTR)
DECLARE FUNCTION graphene_point_near(BYVAL AS const graphene_point_t PTR, BYVAL AS const graphene_point_t PTR, BYVAL AS gfloat) AS _Bool
DECLARE SUB graphene_point_to_vec2(BYVAL AS const graphene_point_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE FUNCTION graphene_point_zero() AS const graphene_point_t PTR
TYPE _graphene_point3d_t
  AS gfloat x
  AS gfloat y
  AS gfloat z
END TYPE
DECLARE FUNCTION graphene_point3d_alloc() AS graphene_point3d_t PTR
DECLARE SUB graphene_point3d_cross(BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE FUNCTION graphene_point3d_distance(BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS graphene_vec3_t PTR) AS gfloat
DECLARE FUNCTION graphene_point3d_dot(BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR) AS gfloat
DECLARE FUNCTION graphene_point3d_equal(BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR) AS _Bool
DECLARE SUB graphene_point3d_free(BYVAL AS graphene_point3d_t PTR)
DECLARE FUNCTION graphene_point3d_init(BYVAL AS graphene_point3d_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_point3d_t PTR
DECLARE FUNCTION graphene_point3d_init_from_point(BYVAL AS graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR) AS graphene_point3d_t PTR
DECLARE FUNCTION graphene_point3d_init_from_vec3(BYVAL AS graphene_point3d_t PTR, BYVAL AS const graphene_vec3_t PTR) AS graphene_point3d_t PTR
DECLARE SUB graphene_point3d_interpolate(BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS double, BYVAL AS graphene_point3d_t PTR)
DECLARE FUNCTION graphene_point3d_length(BYVAL AS const graphene_point3d_t PTR) AS gfloat
DECLARE FUNCTION graphene_point3d_near(BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS gfloat) AS _Bool
DECLARE SUB graphene_point3d_normalize(BYVAL AS const graphene_point3d_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE SUB graphene_point3d_normalize_viewport(BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS graphene_point3d_t PTR)
DECLARE SUB graphene_point3d_scale(BYVAL AS const graphene_point3d_t PTR, BYVAL AS gfloat, BYVAL AS graphene_point3d_t PTR)
DECLARE SUB graphene_point3d_to_vec3(BYVAL AS const graphene_point3d_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE FUNCTION graphene_point3d_zero() AS const graphene_point3d_t PTR
TYPE _graphene_quad_t
  AS graphene_point_t points(3)
END TYPE
DECLARE FUNCTION graphene_quad_alloc() AS graphene_quad_t PTR
DECLARE SUB graphene_quad_bounds(BYVAL AS const graphene_quad_t PTR, BYVAL AS graphene_rect_t PTR)
DECLARE FUNCTION graphene_quad_contains(BYVAL AS const graphene_quad_t PTR, BYVAL AS const graphene_point_t PTR) AS _Bool
DECLARE SUB graphene_quad_free(BYVAL AS graphene_quad_t PTR)
DECLARE FUNCTION graphene_quad_get_point(BYVAL AS const graphene_quad_t PTR, BYVAL AS guint) AS const graphene_point_t PTR
DECLARE FUNCTION graphene_quad_init(BYVAL AS graphene_quad_t PTR, BYVAL AS const graphene_point_t PTR, BYVAL AS const graphene_point_t PTR, BYVAL AS const graphene_point_t PTR, BYVAL AS const graphene_point_t PTR) AS graphene_quad_t PTR
DECLARE FUNCTION graphene_quad_init_from_points(BYVAL AS graphene_quad_t PTR, BYVAL AS const graphene_point_t PTR) AS graphene_quad_t PTR
DECLARE FUNCTION graphene_quad_init_from_rect(BYVAL AS graphene_quad_t PTR, BYVAL AS const graphene_rect_t PTR) AS graphene_quad_t PTR
TYPE _graphene_quaternion_t
  AS gfloat x
  AS gfloat y
  AS gfloat z
  AS gfloat w
END TYPE
DECLARE FUNCTION graphene_quaternion_alloc() AS graphene_quaternion_t PTR
DECLARE SUB graphene_quaternion_add(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS const graphene_quaternion_t PTR, BYVAL AS graphene_quaternion_t PTR)
DECLARE FUNCTION graphene_quaternion_dot(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS const graphene_quaternion_t PTR) AS gfloat
DECLARE FUNCTION graphene_quaternion_equal(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS const graphene_quaternion_t PTR) AS _Bool
DECLARE SUB graphene_quaternion_free(BYVAL AS graphene_quaternion_t PTR)
DECLARE FUNCTION graphene_quaternion_init(BYVAL AS graphene_quaternion_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_quaternion_t PTR
DECLARE FUNCTION graphene_quaternion_init_from_angle_vec3(BYVAL AS graphene_quaternion_t PTR, BYVAL AS gfloat, BYVAL AS const graphene_vec3_t PTR) AS graphene_quaternion_t PTR
DECLARE FUNCTION graphene_quaternion_init_from_angles(BYVAL AS graphene_quaternion_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_quaternion_t PTR
DECLARE FUNCTION graphene_quaternion_init_from_euler(BYVAL AS graphene_quaternion_t PTR, BYVAL AS const graphene_euler_t PTR) AS graphene_quaternion_t PTR
DECLARE FUNCTION graphene_quaternion_init_from_matrix(BYVAL AS graphene_quaternion_t PTR, BYVAL AS const graphene_matrix_t PTR) AS graphene_quaternion_t PTR
DECLARE FUNCTION graphene_quaternion_init_from_quaternion(BYVAL AS graphene_quaternion_t PTR, BYVAL AS const graphene_quaternion_t PTR) AS graphene_quaternion_t PTR
DECLARE FUNCTION graphene_quaternion_init_from_radians(BYVAL AS graphene_quaternion_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_quaternion_t PTR
DECLARE FUNCTION graphene_quaternion_init_from_vec4(BYVAL AS graphene_quaternion_t PTR, BYVAL AS const graphene_vec4_t PTR) AS graphene_quaternion_t PTR
DECLARE FUNCTION graphene_quaternion_init_identity(BYVAL AS graphene_quaternion_t PTR) AS graphene_quaternion_t PTR
DECLARE SUB graphene_quaternion_invert(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS graphene_quaternion_t PTR)
DECLARE SUB graphene_quaternion_multiply(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS const graphene_quaternion_t PTR, BYVAL AS graphene_quaternion_t PTR)
DECLARE SUB graphene_quaternion_normalize(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS graphene_quaternion_t PTR)
DECLARE SUB graphene_quaternion_scale(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS gfloat, BYVAL AS graphene_quaternion_t PTR)
DECLARE SUB graphene_quaternion_slerp(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS const graphene_quaternion_t PTR, BYVAL AS gfloat, BYVAL AS graphene_quaternion_t PTR)
DECLARE SUB graphene_quaternion_to_angle_vec3(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS gfloat PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_quaternion_to_angles(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS gfloat PTR, BYVAL AS gfloat PTR, BYVAL AS gfloat PTR)
DECLARE SUB graphene_quaternion_to_matrix(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS graphene_matrix_t PTR)
DECLARE SUB graphene_quaternion_to_radians(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS gfloat PTR, BYVAL AS gfloat PTR, BYVAL AS gfloat PTR)
DECLARE SUB graphene_quaternion_to_vec4(BYVAL AS const graphene_quaternion_t PTR, BYVAL AS graphene_vec4_t PTR)
TYPE _graphene_ray_t
  AS graphene_vec3_t origin
  AS graphene_vec3_t direction
END TYPE
DECLARE FUNCTION graphene_ray_alloc() AS graphene_ray_t PTR
DECLARE FUNCTION graphene_ray_equal(BYVAL AS const graphene_ray_t PTR, BYVAL AS const graphene_ray_t PTR) AS _Bool
DECLARE SUB graphene_ray_free(BYVAL AS graphene_ray_t PTR)
DECLARE SUB graphene_ray_get_closest_point_to_point(BYVAL AS const graphene_ray_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE SUB graphene_ray_get_direction(BYVAL AS const graphene_ray_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE FUNCTION graphene_ray_get_distance_to_plane(BYVAL AS const graphene_ray_t PTR, BYVAL AS const graphene_plane_t PTR) AS gfloat
DECLARE FUNCTION graphene_ray_get_distance_to_point(BYVAL AS const graphene_ray_t PTR, BYVAL AS const graphene_point3d_t PTR) AS gfloat
DECLARE SUB graphene_ray_get_origin(BYVAL AS const graphene_ray_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE SUB graphene_ray_get_position_at(BYVAL AS const graphene_ray_t PTR, BYVAL AS gfloat, BYVAL AS graphene_point3d_t PTR)
DECLARE FUNCTION graphene_ray_init(BYVAL AS graphene_ray_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_vec3_t PTR) AS graphene_ray_t PTR
DECLARE FUNCTION graphene_ray_init_from_ray(BYVAL AS graphene_ray_t PTR, BYVAL AS const graphene_ray_t PTR) AS graphene_ray_t PTR
DECLARE FUNCTION graphene_ray_init_from_vec3(BYVAL AS graphene_ray_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR) AS graphene_ray_t PTR
DECLARE FUNCTION graphene_ray_intersect_box(BYVAL AS const graphene_ray_t PTR, BYVAL AS const graphene_box_t PTR, BYVAL AS gfloat PTR) AS graphene_ray_intersection_kind_t
DECLARE FUNCTION graphene_ray_intersect_sphere(BYVAL AS const graphene_ray_t PTR, BYVAL AS const graphene_sphere_t PTR, BYVAL AS gfloat PTR) AS graphene_ray_intersection_kind_t
DECLARE FUNCTION graphene_ray_intersect_triangle(BYVAL AS const graphene_ray_t PTR, BYVAL AS const graphene_triangle_t PTR, BYVAL AS gfloat PTR) AS graphene_ray_intersection_kind_t
DECLARE FUNCTION graphene_ray_intersects_box(BYVAL AS const graphene_ray_t PTR, BYVAL AS const graphene_box_t PTR) AS _Bool
DECLARE FUNCTION graphene_ray_intersects_sphere(BYVAL AS const graphene_ray_t PTR, BYVAL AS const graphene_sphere_t PTR) AS _Bool
DECLARE FUNCTION graphene_ray_intersects_triangle(BYVAL AS const graphene_ray_t PTR, BYVAL AS const graphene_triangle_t PTR) AS _Bool
TYPE _graphene_rect_t
  AS graphene_point_t origin
  AS graphene_size_t size
END TYPE
DECLARE FUNCTION graphene_rect_contains_point(BYVAL AS const graphene_rect_t PTR, BYVAL AS const graphene_point_t PTR) AS _Bool
DECLARE FUNCTION graphene_rect_contains_rect(BYVAL AS const graphene_rect_t PTR, BYVAL AS const graphene_rect_t PTR) AS _Bool
DECLARE FUNCTION graphene_rect_equal(BYVAL AS const graphene_rect_t PTR, BYVAL AS const graphene_rect_t PTR) AS _Bool
DECLARE SUB graphene_rect_expand(BYVAL AS const graphene_rect_t PTR, BYVAL AS const graphene_point_t PTR, BYVAL AS graphene_rect_t PTR)
DECLARE SUB graphene_rect_free(BYVAL AS graphene_rect_t PTR)
DECLARE FUNCTION graphene_rect_get_area(BYVAL AS const graphene_rect_t PTR) AS gfloat
DECLARE SUB graphene_rect_get_bottom_left(BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_point_t PTR)
DECLARE SUB graphene_rect_get_bottom_right(BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_point_t PTR)
DECLARE SUB graphene_rect_get_center(BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_point_t PTR)
DECLARE FUNCTION graphene_rect_get_height(BYVAL AS const graphene_rect_t PTR) AS gfloat
DECLARE SUB graphene_rect_get_top_left(BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_point_t PTR)
DECLARE SUB graphene_rect_get_top_right(BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_point_t PTR)
DECLARE SUB graphene_rect_get_vertices(BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE FUNCTION graphene_rect_get_width(BYVAL AS const graphene_rect_t PTR) AS gfloat
DECLARE FUNCTION graphene_rect_get_x(BYVAL AS const graphene_rect_t PTR) AS gfloat
DECLARE FUNCTION graphene_rect_get_y(BYVAL AS const graphene_rect_t PTR) AS gfloat
DECLARE FUNCTION graphene_rect_init(BYVAL AS graphene_rect_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_rect_t PTR
DECLARE FUNCTION graphene_rect_init_from_rect(BYVAL AS graphene_rect_t PTR, BYVAL AS const graphene_rect_t PTR) AS graphene_rect_t PTR
DECLARE FUNCTION graphene_rect_inset(BYVAL AS graphene_rect_t PTR, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_rect_t PTR
DECLARE SUB graphene_rect_inset_r(BYVAL AS const graphene_rect_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS graphene_rect_t PTR)
DECLARE SUB graphene_rect_interpolate(BYVAL AS const graphene_rect_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS double, BYVAL AS graphene_rect_t PTR)
DECLARE FUNCTION graphene_rect_intersection(BYVAL AS const graphene_rect_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_rect_t PTR) AS _Bool
DECLARE FUNCTION graphene_rect_normalize(BYVAL AS graphene_rect_t PTR) AS graphene_rect_t PTR
DECLARE SUB graphene_rect_normalize_r(BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_rect_t PTR)
DECLARE FUNCTION graphene_rect_offset(BYVAL AS graphene_rect_t PTR, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_rect_t PTR
DECLARE SUB graphene_rect_offset_r(BYVAL AS const graphene_rect_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS graphene_rect_t PTR)
DECLARE SUB graphene_rect_round(BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_rect_t PTR)
DECLARE SUB graphene_rect_round_extents(BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_rect_t PTR)
DECLARE FUNCTION graphene_rect_round_to_pixel(BYVAL AS graphene_rect_t PTR) AS graphene_rect_t PTR
DECLARE SUB graphene_rect_scale(BYVAL AS const graphene_rect_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS graphene_rect_t PTR)
DECLARE SUB graphene_rect_union(BYVAL AS const graphene_rect_t PTR, BYVAL AS const graphene_rect_t PTR, BYVAL AS graphene_rect_t PTR)
DECLARE FUNCTION graphene_rect_alloc() AS graphene_rect_t PTR
DECLARE FUNCTION graphene_rect_zero() AS const graphene_rect_t PTR
TYPE _graphene_sphere_t
  AS graphene_vec3_t center
  AS gfloat radius
END TYPE
DECLARE FUNCTION graphene_sphere_alloc() AS graphene_sphere_t PTR
DECLARE FUNCTION graphene_sphere_contains_point(BYVAL AS const graphene_sphere_t PTR, BYVAL AS const graphene_point3d_t PTR) AS _Bool
DECLARE FUNCTION graphene_sphere_distance(BYVAL AS const graphene_sphere_t PTR, BYVAL AS const graphene_point3d_t PTR) AS gfloat
DECLARE FUNCTION graphene_sphere_equal(BYVAL AS const graphene_sphere_t PTR, BYVAL AS const graphene_sphere_t PTR) AS _Bool
DECLARE SUB graphene_sphere_free(BYVAL AS graphene_sphere_t PTR)
DECLARE SUB graphene_sphere_get_bounding_box(BYVAL AS const graphene_sphere_t PTR, BYVAL AS graphene_box_t PTR)
DECLARE SUB graphene_sphere_get_center(BYVAL AS const graphene_sphere_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE FUNCTION graphene_sphere_get_radius(BYVAL AS const graphene_sphere_t PTR) AS gfloat
DECLARE FUNCTION graphene_sphere_init(BYVAL AS graphene_sphere_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS gfloat) AS graphene_sphere_t PTR
DECLARE FUNCTION graphene_sphere_init_from_points(BYVAL AS graphene_sphere_t PTR, BYVAL AS guint, BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR) AS graphene_sphere_t PTR
DECLARE FUNCTION graphene_sphere_init_from_vectors(BYVAL AS graphene_sphere_t PTR, BYVAL AS guint, BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_point3d_t PTR) AS graphene_sphere_t PTR
DECLARE FUNCTION graphene_sphere_is_empty(BYVAL AS const graphene_sphere_t PTR) AS _Bool
DECLARE SUB graphene_sphere_translate(BYVAL AS const graphene_sphere_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS graphene_sphere_t PTR)
TYPE _graphene_triangle_t
  AS graphene_vec3_t a
  AS graphene_vec3_t b
  AS graphene_vec3_t c
END TYPE
DECLARE FUNCTION graphene_triangle_alloc() AS graphene_triangle_t PTR
DECLARE FUNCTION graphene_triangle_contains_point(BYVAL AS const graphene_triangle_t PTR, BYVAL AS const graphene_point3d_t PTR) AS _Bool
DECLARE FUNCTION graphene_triangle_equal(BYVAL AS const graphene_triangle_t PTR, BYVAL AS const graphene_triangle_t PTR) AS _Bool
DECLARE SUB graphene_triangle_free(BYVAL AS graphene_triangle_t PTR)
DECLARE FUNCTION graphene_triangle_get_area(BYVAL AS const graphene_triangle_t PTR) AS gfloat
DECLARE FUNCTION graphene_triangle_get_barycoords(BYVAL AS const graphene_triangle_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS graphene_vec2_t PTR) AS _Bool
DECLARE SUB graphene_triangle_get_bounding_box(BYVAL AS const graphene_triangle_t PTR, BYVAL AS graphene_box_t PTR)
DECLARE SUB graphene_triangle_get_midpoint(BYVAL AS const graphene_triangle_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE SUB graphene_triangle_get_normal(BYVAL AS const graphene_triangle_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE SUB graphene_triangle_get_plane(BYVAL AS const graphene_triangle_t PTR, BYVAL AS graphene_plane_t PTR)
DECLARE SUB graphene_triangle_get_points(BYVAL AS const graphene_triangle_t PTR, BYVAL AS graphene_point3d_t PTR, BYVAL AS graphene_point3d_t PTR, BYVAL AS graphene_point3d_t PTR)
DECLARE FUNCTION graphene_triangle_get_uv(BYVAL AS const graphene_triangle_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS graphene_vec2_t PTR) AS _Bool
DECLARE SUB graphene_triangle_get_vertices(BYVAL AS const graphene_triangle_t PTR, BYVAL AS graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE FUNCTION graphene_triangle_init_from_float(BYVAL AS graphene_triangle_t PTR, BYVAL AS CONST gfloat PTR, BYVAL AS CONST gfloat PTR, BYVAL AS CONST gfloat PTR) AS graphene_triangle_t PTR
DECLARE FUNCTION graphene_triangle_init_from_point3d(BYVAL AS graphene_triangle_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR, BYVAL AS const graphene_point3d_t PTR) AS graphene_triangle_t PTR
DECLARE FUNCTION graphene_triangle_init_from_vec3(BYVAL AS graphene_triangle_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS const graphene_vec3_t PTR) AS graphene_triangle_t PTR
TYPE _graphene_vec2_t
  AS graphene_simd4f_t value
END TYPE
DECLARE FUNCTION graphene_vec2_alloc() AS graphene_vec2_t PTR
DECLARE SUB graphene_vec2_add(BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE SUB graphene_vec2_divide(BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE FUNCTION graphene_vec2_dot(BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR) AS gfloat
DECLARE FUNCTION graphene_vec2_equal(BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR) AS _Bool
DECLARE SUB graphene_vec2_free(BYVAL AS graphene_vec2_t PTR)
DECLARE FUNCTION graphene_vec2_get_x(BYVAL AS const graphene_vec2_t PTR) AS gfloat
DECLARE FUNCTION graphene_vec2_get_y(BYVAL AS const graphene_vec2_t PTR) AS gfloat
DECLARE FUNCTION graphene_vec2_init(BYVAL AS graphene_vec2_t PTR, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_vec2_t PTR
DECLARE FUNCTION graphene_vec2_init_from_float(BYVAL AS graphene_vec2_t PTR, BYVAL AS CONST gfloat PTR) AS graphene_vec2_t PTR
DECLARE FUNCTION graphene_vec2_init_from_vec2(BYVAL AS graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR) AS graphene_vec2_t PTR
DECLARE SUB graphene_vec2_interpolate(BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS double, BYVAL AS graphene_vec2_t PTR)
DECLARE FUNCTION graphene_vec2_length(BYVAL AS const graphene_vec2_t PTR) AS gfloat
DECLARE SUB graphene_vec2_max(BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE SUB graphene_vec2_min(BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE SUB graphene_vec2_multiply(BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE FUNCTION graphene_vec2_near(BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS gfloat) AS _Bool
DECLARE SUB graphene_vec2_negate(BYVAL AS const graphene_vec2_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE SUB graphene_vec2_normalize(BYVAL AS const graphene_vec2_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE SUB graphene_vec2_scale(BYVAL AS const graphene_vec2_t PTR, BYVAL AS gfloat, BYVAL AS graphene_vec2_t PTR)
DECLARE SUB graphene_vec2_subtract(BYVAL AS const graphene_vec2_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE SUB graphene_vec2_to_float(BYVAL AS const graphene_vec2_t PTR, BYVAL AS gfloat PTR)
DECLARE FUNCTION graphene_vec2_one() AS const graphene_vec2_t PTR
DECLARE FUNCTION graphene_vec2_x_axis() AS const graphene_vec2_t PTR
DECLARE FUNCTION graphene_vec2_y_axis() AS const graphene_vec2_t PTR
DECLARE FUNCTION graphene_vec2_zero() AS const graphene_vec2_t PTR
TYPE _graphene_vec4_t
  AS graphene_simd4f_t value
END TYPE
DECLARE FUNCTION graphene_vec4_alloc() AS graphene_vec4_t PTR
DECLARE SUB graphene_vec4_add(BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE SUB graphene_vec4_divide(BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE FUNCTION graphene_vec4_dot(BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR) AS gfloat
DECLARE FUNCTION graphene_vec4_equal(BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR) AS _Bool
DECLARE SUB graphene_vec4_free(BYVAL AS graphene_vec4_t PTR)
DECLARE FUNCTION graphene_vec4_get_w(BYVAL AS const graphene_vec4_t PTR) AS gfloat
DECLARE FUNCTION graphene_vec4_get_x(BYVAL AS const graphene_vec4_t PTR) AS gfloat
DECLARE SUB graphene_vec4_get_xy(BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec2_t PTR)
DECLARE SUB graphene_vec4_get_xyz(BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec3_t PTR)
DECLARE FUNCTION graphene_vec4_get_y(BYVAL AS const graphene_vec4_t PTR) AS gfloat
DECLARE FUNCTION graphene_vec4_get_z(BYVAL AS const graphene_vec4_t PTR) AS gfloat
DECLARE FUNCTION graphene_vec4_init(BYVAL AS graphene_vec4_t PTR, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_vec4_t PTR
DECLARE FUNCTION graphene_vec4_init_from_float(BYVAL AS graphene_vec4_t PTR, BYVAL AS CONST gfloat PTR) AS graphene_vec4_t PTR
DECLARE FUNCTION graphene_vec4_init_from_vec2(BYVAL AS graphene_vec4_t PTR, BYVAL AS const graphene_vec2_t PTR, BYVAL AS gfloat, BYVAL AS gfloat) AS graphene_vec4_t PTR
DECLARE FUNCTION graphene_vec4_init_from_vec3(BYVAL AS graphene_vec4_t PTR, BYVAL AS const graphene_vec3_t PTR, BYVAL AS gfloat) AS graphene_vec4_t PTR
DECLARE FUNCTION graphene_vec4_init_from_vec4(BYVAL AS graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR) AS graphene_vec4_t PTR
DECLARE SUB graphene_vec4_interpolate(BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS double, BYVAL AS graphene_vec4_t PTR)
DECLARE FUNCTION graphene_vec4_length(BYVAL AS const graphene_vec4_t PTR) AS gfloat
DECLARE SUB graphene_vec4_max(BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE SUB graphene_vec4_min(BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE SUB graphene_vec4_multiply(BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE FUNCTION graphene_vec4_near(BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS gfloat) AS _Bool
DECLARE SUB graphene_vec4_negate(BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE SUB graphene_vec4_normalize(BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE SUB graphene_vec4_scale(BYVAL AS const graphene_vec4_t PTR, BYVAL AS gfloat, BYVAL AS graphene_vec4_t PTR)
DECLARE SUB graphene_vec4_subtract(BYVAL AS const graphene_vec4_t PTR, BYVAL AS const graphene_vec4_t PTR, BYVAL AS graphene_vec4_t PTR)
DECLARE SUB graphene_vec4_to_float(BYVAL AS const graphene_vec4_t PTR, BYVAL AS gfloat PTR)
DECLARE FUNCTION graphene_vec4_one() AS const graphene_vec4_t PTR
DECLARE FUNCTION graphene_vec4_w_axis() AS const graphene_vec4_t PTR
DECLARE FUNCTION graphene_vec4_x_axis() AS const graphene_vec4_t PTR
DECLARE FUNCTION graphene_vec4_y_axis() AS const graphene_vec4_t PTR
DECLARE FUNCTION graphene_vec4_z_axis() AS const graphene_vec4_t PTR
DECLARE FUNCTION graphene_vec4_zero() AS const graphene_vec4_t PTR
' P_4

END EXTERN

