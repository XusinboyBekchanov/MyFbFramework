'            FreeBasic header file, auto-generated by
'                       ### girtobac ###
' LGPLv2.1 (C) 2013-2022 by Thomas{ doT ]Freiherr[ At ]gmx[ DoT }net
' Auto-translated from file /usr/share/gir-1.0/Atspi-2.0.gir
#INCLUDE ONCE "_GirToBac-0.0.bi"

#INCLUDE ONCE "crt/time.bi"
TYPE AS _DBusServer DBusServer
TYPE AS _DBusConnection DBusConnection
#IFNDEF timeval ' from crt/sys/linux/time.bi
TYPE timeval
	tv_sec AS __time_t
	tv_usec AS __suseconds_t
END TYPE
#ENDIF

' Repository version 1.2
#INCLUDE ONCE "DBus-1.0.bi"
#INCLUDE ONCE "GLib-2.0.bi"
#INCLUDE ONCE "GObject-2.0.bi"
TYPE AS guint AtspiControllerEventMask
TYPE AS guint AtspiDeviceEventMask
TYPE AS guint AtspiKeyEventMask
TYPE AS guint AtspiKeyMaskType
TYPE AS any /'void'/ AtspiKeystrokeListener
TYPE AS _AtspiAccessible AtspiAccessible
TYPE AS _AtspiAccessibleClass AtspiAccessibleClass
TYPE AS _AtspiAccessiblePrivate AtspiAccessiblePrivate
TYPE AS _AtspiAction AtspiAction
TYPE AS _AtspiApplication AtspiApplication
TYPE AS _AtspiApplicationClass AtspiApplicationClass
#DEFINE ATSPI_COMPONENTLAYER_COUNT 9
#DEFINE ATSPI_COORD_TYPE_COUNT 3
TYPE AS LONG AtspiCache
ENUM
  ATSPI_CACHE_NONE = 0
  ATSPI_CACHE_PARENT = 1
  ATSPI_CACHE_CHILDREN = 2
  ATSPI_CACHE_NAME = 4
  ATSPI_CACHE_DESCRIPTION = 8
  ATSPI_CACHE_STATES = 16
  ATSPI_CACHE_ROLE = 32
  ATSPI_CACHE_INTERFACES = 64
  ATSPI_CACHE_ATTRIBUTES = 128
  ATSPI_CACHE_ALL = 1073741823
  ATSPI_CACHE_DEFAULT = 127
  ATSPI_CACHE_UNDEFINED = 1073741824
END ENUM
TYPE AS _AtspiCollection AtspiCollection
TYPE AS LONG AtspiCollectionMatchType
ENUM
  ATSPI_Collection_MATCH_INVALID = 0
  ATSPI_Collection_MATCH_ALL = 1
  ATSPI_Collection_MATCH_ANY = 2
  ATSPI_Collection_MATCH_NONE = 3
  ATSPI_Collection_MATCH_EMPTY = 4
  ATSPI_Collection_MATCH_LAST_DEFINED = 5
END ENUM
TYPE AS LONG AtspiCollectionSortOrder
ENUM
  ATSPI_Collection_SORT_ORDER_INVALID = 0
  ATSPI_Collection_SORT_ORDER_CANONICAL = 1
  ATSPI_Collection_SORT_ORDER_FLOW = 2
  ATSPI_Collection_SORT_ORDER_TAB = 3
  ATSPI_Collection_SORT_ORDER_REVERSE_CANONICAL = 4
  ATSPI_Collection_SORT_ORDER_REVERSE_FLOW = 5
  ATSPI_Collection_SORT_ORDER_REVERSE_TAB = 6
  ATSPI_Collection_SORT_ORDER_LAST_DEFINED = 7
END ENUM
TYPE AS LONG AtspiCollectionTreeTraversalType
ENUM
  ATSPI_Collection_TREE_RESTRICT_CHILDREN = 0
  ATSPI_Collection_TREE_RESTRICT_SIBLING = 1
  ATSPI_Collection_TREE_INORDER = 2
  ATSPI_Collection_TREE_LAST_DEFINED = 3
END ENUM
TYPE AS _AtspiComponent AtspiComponent
TYPE AS LONG AtspiComponentLayer
ENUM
  ATSPI_LAYER_INVALID = 0
  ATSPI_LAYER_BACKGROUND = 1
  ATSPI_LAYER_CANVAS = 2
  ATSPI_LAYER_WIDGET = 3
  ATSPI_LAYER_MDI = 4
  ATSPI_LAYER_POPUP = 5
  ATSPI_LAYER_OVERLAY = 6
  ATSPI_LAYER_WINDOW = 7
  ATSPI_LAYER_LAST_DEFINED = 8
END ENUM
TYPE AS LONG AtspiCoordType
ENUM
  ATSPI_COORD_TYPE_SCREEN = 0
  ATSPI_COORD_TYPE_WINDOW = 1
  ATSPI_COORD_TYPE_PARENT = 2
END ENUM
#DEFINE ATSPI_DBUS_INTERFACE_ACCESSIBLE @!"org.a11y.atspi.Accessible"
#DEFINE ATSPI_DBUS_INTERFACE_ACTION @!"org.a11y.atspi.Action"
#DEFINE ATSPI_DBUS_INTERFACE_APPLICATION @!"org.a11y.atspi.Application"
#DEFINE ATSPI_DBUS_INTERFACE_CACHE @!"org.a11y.atspi.Cache"
#DEFINE ATSPI_DBUS_INTERFACE_COLLECTION @!"org.a11y.atspi.Collection"
#DEFINE ATSPI_DBUS_INTERFACE_COMPONENT @!"org.a11y.atspi.Component"
#DEFINE ATSPI_DBUS_INTERFACE_DEC @!"org.a11y.atspi.DeviceEventController"
#DEFINE ATSPI_DBUS_INTERFACE_DEVICE_EVENT_LISTENER @!"org.a11y.atspi.DeviceEventListener"
#DEFINE ATSPI_DBUS_INTERFACE_DOCUMENT @!"org.a11y.atspi.Document"
#DEFINE ATSPI_DBUS_INTERFACE_EDITABLE_TEXT @!"org.a11y.atspi.EditableText"
#DEFINE ATSPI_DBUS_INTERFACE_EVENT_KEYBOARD @!"org.a11y.atspi.Event.Keyboard"
#DEFINE ATSPI_DBUS_INTERFACE_EVENT_MOUSE @!"org.a11y.atspi.Event.Mouse"
#DEFINE ATSPI_DBUS_INTERFACE_EVENT_OBJECT @!"org.a11y.atspi.Event.Object"
#DEFINE ATSPI_DBUS_INTERFACE_EVENT_SCREEN_READER @!"org.a11y.atspi.Event.ScreenReader"
#DEFINE ATSPI_DBUS_INTERFACE_HYPERLINK @!"org.a11y.atspi.Hyperlink"
#DEFINE ATSPI_DBUS_INTERFACE_HYPERTEXT @!"org.a11y.atspi.Hypertext"
#DEFINE ATSPI_DBUS_INTERFACE_IMAGE @!"org.a11y.atspi.Image"
#DEFINE ATSPI_DBUS_INTERFACE_REGISTRY @!"org.a11y.atspi.Registry"
#DEFINE ATSPI_DBUS_INTERFACE_SELECTION @!"org.a11y.atspi.Selection"
#DEFINE ATSPI_DBUS_INTERFACE_SOCKET @!"org.a11y.atspi.Socket"
#DEFINE ATSPI_DBUS_INTERFACE_TABLE @!"org.a11y.atspi.Table"
#DEFINE ATSPI_DBUS_INTERFACE_TABLE_CELL @!"org.a11y.atspi.TableCell"
#DEFINE ATSPI_DBUS_INTERFACE_TEXT @!"org.a11y.atspi.Text"
#DEFINE ATSPI_DBUS_INTERFACE_VALUE @!"org.a11y.atspi.Value"
#DEFINE ATSPI_DBUS_NAME_REGISTRY @!"org.a11y.atspi.Registry"
#DEFINE ATSPI_DBUS_PATH_DEC @!"/org/a11y/atspi/registry/deviceeventcontroller"
#DEFINE ATSPI_DBUS_PATH_NULL @!"/org/a11y/atspi/null"
#DEFINE ATSPI_DBUS_PATH_REGISTRY @!"/org/a11y/atspi/registry"
#DEFINE ATSPI_DBUS_PATH_ROOT @!"/org/a11y/atspi/accessible/root"
#DEFINE ATSPI_DBUS_PATH_SCREEN_READER @!"/org/a11y/atspi/screenreader"
TYPE AS _AtspiDeviceEvent AtspiDeviceEvent
TYPE AS _AtspiDeviceListener AtspiDeviceListener
TYPE AS _AtspiDeviceListenerClass AtspiDeviceListenerClass
TYPE AS _AtspiDocument AtspiDocument
#DEFINE ATSPI_EVENTTYPE_COUNT 4
TYPE AS _AtspiEditableText AtspiEditableText
TYPE AS _AtspiEvent AtspiEvent
TYPE AS _AtspiEventListener AtspiEventListener
TYPE AS _AtspiEventListenerClass AtspiEventListenerClass
TYPE AS _AtspiEventListenerMode AtspiEventListenerMode
TYPE AS LONG AtspiEventType
ENUM
  ATSPI_KEY_PRESSED_EVENT = 0
  ATSPI_KEY_RELEASED_EVENT = 1
  ATSPI_BUTTON_PRESSED_EVENT = 2
  ATSPI_BUTTON_RELEASED_EVENT = 3
END ENUM
TYPE AS _AtspiHyperlink AtspiHyperlink
TYPE AS _AtspiHyperlinkClass AtspiHyperlinkClass
TYPE AS _AtspiHypertext AtspiHypertext
TYPE AS _AtspiImage AtspiImage
#DEFINE ATSPI_KEYEVENTTYPE_COUNT 2
#DEFINE ATSPI_KEYSYNTHTYPE_COUNT 5
TYPE AS _AtspiKeyDefinition AtspiKeyDefinition
TYPE AS LONG AtspiKeyEventType
ENUM
  ATSPI_KEY_PRESSED = 0
  ATSPI_KEY_RELEASED = 1
END ENUM
TYPE AS LONG AtspiKeyListenerSyncType
ENUM
  ATSPI_KEYLISTENER_NOSYNC = 0
  ATSPI_KEYLISTENER_SYNCHRONOUS = 1
  ATSPI_KEYLISTENER_CANCONSUME = 2
  ATSPI_KEYLISTENER_ALL_WINDOWS = 4
END ENUM
TYPE AS _AtspiKeySet AtspiKeySet
TYPE AS LONG AtspiKeySynthType
ENUM
  ATSPI_KEY_PRESS = 0
  ATSPI_KEY_RELEASE = 1
  ATSPI_KEY_PRESSRELEASE = 2
  ATSPI_KEY_SYM = 3
  ATSPI_KEY_STRING = 4
  ATSPI_KEY_LOCKMODIFIERS = 5
  ATSPI_KEY_UNLOCKMODIFIERS = 6
END ENUM
TYPE AS LONG AtspiLocaleType
ENUM
  ATSPI_LOCALE_TYPE_MESSAGES = 0
  ATSPI_LOCALE_TYPE_COLLATE = 1
  ATSPI_LOCALE_TYPE_CTYPE = 2
  ATSPI_LOCALE_TYPE_MONETARY = 3
  ATSPI_LOCALE_TYPE_NUMERIC = 4
  ATSPI_LOCALE_TYPE_TIME = 5
END ENUM
#DEFINE ATSPI_MATCHTYPES_COUNT 6
#DEFINE ATSPI_MODIFIERTYPE_COUNT 8
TYPE AS _AtspiMatchRule AtspiMatchRule
TYPE AS _AtspiMatchRuleClass AtspiMatchRuleClass
TYPE AS LONG AtspiModifierType
ENUM
  ATSPI_MODIFIER_SHIFT = 0
  ATSPI_MODIFIER_SHIFTLOCK = 1
  ATSPI_MODIFIER_CONTROL = 2
  ATSPI_MODIFIER_ALT = 3
  ATSPI_MODIFIER_META = 4
  ATSPI_MODIFIER_META2 = 5
  ATSPI_MODIFIER_META3 = 6
  ATSPI_MODIFIER_NUMLOCK = 14
END ENUM
TYPE AS _AtspiObject AtspiObject
TYPE AS _AtspiObjectClass AtspiObjectClass
TYPE AS _AtspiPoint AtspiPoint
#DEFINE ATSPI_RELATIONTYPE_COUNT 24
#DEFINE ATSPI_ROLE_COUNT 130
TYPE AS _AtspiRange AtspiRange
TYPE AS _AtspiRect AtspiRect
TYPE AS _AtspiRelation AtspiRelation
TYPE AS _AtspiRelationClass AtspiRelationClass
TYPE AS LONG AtspiRelationType
ENUM
  ATSPI_RELATION_NULL = 0
  ATSPI_RELATION_LABEL_FOR = 1
  ATSPI_RELATION_LABELLED_BY = 2
  ATSPI_RELATION_CONTROLLER_FOR = 3
  ATSPI_RELATION_CONTROLLED_BY = 4
  ATSPI_RELATION_MEMBER_OF = 5
  ATSPI_RELATION_TOOLTIP_FOR = 6
  ATSPI_RELATION_NODE_CHILD_OF = 7
  ATSPI_RELATION_NODE_PARENT_OF = 8
  ATSPI_RELATION_EXTENDED = 9
  ATSPI_RELATION_FLOWS_TO = 10
  ATSPI_RELATION_FLOWS_FROM = 11
  ATSPI_RELATION_SUBWINDOW_OF = 12
  ATSPI_RELATION_EMBEDS = 13
  ATSPI_RELATION_EMBEDDED_BY = 14
  ATSPI_RELATION_POPUP_FOR = 15
  ATSPI_RELATION_PARENT_WINDOW_OF = 16
  ATSPI_RELATION_DESCRIPTION_FOR = 17
  ATSPI_RELATION_DESCRIBED_BY = 18
  ATSPI_RELATION_DETAILS = 19
  ATSPI_RELATION_DETAILS_FOR = 20
  ATSPI_RELATION_ERROR_MESSAGE = 21
  ATSPI_RELATION_ERROR_FOR = 22
  ATSPI_RELATION_LAST_DEFINED = 23
END ENUM
TYPE AS LONG AtspiRole
ENUM
  ATSPI_ROLE_INVALID = 0
  ATSPI_ROLE_ACCELERATOR_LABEL = 1
  ATSPI_ROLE_ALERT = 2
  ATSPI_ROLE_ANIMATION = 3
  ATSPI_ROLE_ARROW = 4
  ATSPI_ROLE_CALENDAR = 5
  ATSPI_ROLE_CANVAS = 6
  ATSPI_ROLE_CHECK_BOX = 7
  ATSPI_ROLE_CHECK_MENU_ITEM = 8
  ATSPI_ROLE_COLOR_CHOOSER = 9
  ATSPI_ROLE_COLUMN_HEADER = 10
  ATSPI_ROLE_COMBO_BOX = 11
  ATSPI_ROLE_DATE_EDITOR = 12
  ATSPI_ROLE_DESKTOP_ICON = 13
  ATSPI_ROLE_DESKTOP_FRAME = 14
  ATSPI_ROLE_DIAL = 15
  ATSPI_ROLE_DIALOG = 16
  ATSPI_ROLE_DIRECTORY_PANE = 17
  ATSPI_ROLE_DRAWING_AREA = 18
  ATSPI_ROLE_FILE_CHOOSER = 19
  ATSPI_ROLE_FILLER = 20
  ATSPI_ROLE_FOCUS_TRAVERSABLE = 21
  ATSPI_ROLE_FONT_CHOOSER = 22
  ATSPI_ROLE_FRAME = 23
  ATSPI_ROLE_GLASS_PANE = 24
  ATSPI_ROLE_HTML_CONTAINER = 25
  ATSPI_ROLE_ICON = 26
  ATSPI_ROLE_IMAGE = 27
  ATSPI_ROLE_INTERNAL_FRAME = 28
  ATSPI_ROLE_LABEL = 29
  ATSPI_ROLE_LAYERED_PANE = 30
  ATSPI_ROLE_LIST = 31
  ATSPI_ROLE_LIST_ITEM = 32
  ATSPI_ROLE_MENU = 33
  ATSPI_ROLE_MENU_BAR = 34
  ATSPI_ROLE_MENU_ITEM = 35
  ATSPI_ROLE_OPTION_PANE = 36
  ATSPI_ROLE_PAGE_TAB = 37
  ATSPI_ROLE_PAGE_TAB_LIST = 38
  ATSPI_ROLE_PANEL = 39
  ATSPI_ROLE_PASSWORD_TEXT = 40
  ATSPI_ROLE_POPUP_MENU = 41
  ATSPI_ROLE_PROGRESS_BAR = 42
  ATSPI_ROLE_PUSH_BUTTON = 43
  ATSPI_ROLE_RADIO_BUTTON = 44
  ATSPI_ROLE_RADIO_MENU_ITEM = 45
  ATSPI_ROLE_ROOT_PANE = 46
  ATSPI_ROLE_ROW_HEADER = 47
  ATSPI_ROLE_SCROLL_BAR = 48
  ATSPI_ROLE_SCROLL_PANE = 49
  ATSPI_ROLE_SEPARATOR = 50
  ATSPI_ROLE_SLIDER = 51
  ATSPI_ROLE_SPIN_BUTTON = 52
  ATSPI_ROLE_SPLIT_PANE = 53
  ATSPI_ROLE_STATUS_BAR = 54
  ATSPI_ROLE_TABLE = 55
  ATSPI_ROLE_TABLE_CELL = 56
  ATSPI_ROLE_TABLE_COLUMN_HEADER = 57
  ATSPI_ROLE_TABLE_ROW_HEADER = 58
  ATSPI_ROLE_TEAROFF_MENU_ITEM = 59
  ATSPI_ROLE_TERMINAL = 60
  ATSPI_ROLE_TEXT = 61
  ATSPI_ROLE_TOGGLE_BUTTON = 62
  ATSPI_ROLE_TOOL_BAR = 63
  ATSPI_ROLE_TOOL_TIP = 64
  ATSPI_ROLE_TREE = 65
  ATSPI_ROLE_TREE_TABLE = 66
  ATSPI_ROLE_UNKNOWN = 67
  ATSPI_ROLE_VIEWPORT = 68
  ATSPI_ROLE_WINDOW = 69
  ATSPI_ROLE_EXTENDED = 70
  ATSPI_ROLE_HEADER = 71
  ATSPI_ROLE_FOOTER = 72
  ATSPI_ROLE_PARAGRAPH = 73
  ATSPI_ROLE_RULER = 74
  ATSPI_ROLE_APPLICATION = 75
  ATSPI_ROLE_AUTOCOMPLETE = 76
  ATSPI_ROLE_EDITBAR = 77
  ATSPI_ROLE_EMBEDDED = 78
  ATSPI_ROLE_ENTRY = 79
  ATSPI_ROLE_CHART = 80
  ATSPI_ROLE_CAPTION = 81
  ATSPI_ROLE_DOCUMENT_FRAME = 82
  ATSPI_ROLE_HEADING = 83
  ATSPI_ROLE_PAGE = 84
  ATSPI_ROLE_SECTION = 85
  ATSPI_ROLE_REDUNDANT_OBJECT = 86
  ATSPI_ROLE_FORM = 87
  ATSPI_ROLE_LINK = 88
  ATSPI_ROLE_INPUT_METHOD_WINDOW = 89
  ATSPI_ROLE_TABLE_ROW = 90
  ATSPI_ROLE_TREE_ITEM = 91
  ATSPI_ROLE_DOCUMENT_SPREADSHEET = 92
  ATSPI_ROLE_DOCUMENT_PRESENTATION = 93
  ATSPI_ROLE_DOCUMENT_TEXT = 94
  ATSPI_ROLE_DOCUMENT_WEB = 95
  ATSPI_ROLE_DOCUMENT_EMAIL = 96
  ATSPI_ROLE_COMMENT = 97
  ATSPI_ROLE_LIST_BOX = 98
  ATSPI_ROLE_GROUPING = 99
  ATSPI_ROLE_IMAGE_MAP = 100
  ATSPI_ROLE_NOTIFICATION = 101
  ATSPI_ROLE_INFO_BAR = 102
  ATSPI_ROLE_LEVEL_BAR = 103
  ATSPI_ROLE_TITLE_BAR = 104
  ATSPI_ROLE_BLOCK_QUOTE = 105
  ATSPI_ROLE_AUDIO = 106
  ATSPI_ROLE_VIDEO = 107
  ATSPI_ROLE_DEFINITION = 108
  ATSPI_ROLE_ARTICLE = 109
  ATSPI_ROLE_LANDMARK = 110
  ATSPI_ROLE_LOG = 111
  ATSPI_ROLE_MARQUEE = 112
  ATSPI_ROLE_MATH = 113
  ATSPI_ROLE_RATING = 114
  ATSPI_ROLE_TIMER = 115
  ATSPI_ROLE_STATIC = 116
  ATSPI_ROLE_MATH_FRACTION = 117
  ATSPI_ROLE_MATH_ROOT = 118
  ATSPI_ROLE_SUBSCRIPT = 119
  ATSPI_ROLE_SUPERSCRIPT = 120
  ATSPI_ROLE_DESCRIPTION_LIST = 121
  ATSPI_ROLE_DESCRIPTION_TERM = 122
  ATSPI_ROLE_DESCRIPTION_VALUE = 123
  ATSPI_ROLE_FOOTNOTE = 124
  ATSPI_ROLE_CONTENT_DELETION = 125
  ATSPI_ROLE_CONTENT_INSERTION = 126
  ATSPI_ROLE_MARK = 127
  ATSPI_ROLE_SUGGESTION = 128
  ATSPI_ROLE_LAST_DEFINED = 129
END ENUM
#DEFINE ATSPI_SCROLLTYPE_COUNT 7
#DEFINE ATSPI_SORTORDER_COUNT 8
#DEFINE ATSPI_STATETYPE_COUNT 42
TYPE AS LONG AtspiScrollType
ENUM
  ATSPI_SCROLL_TOP_LEFT = 0
  ATSPI_SCROLL_BOTTOM_RIGHT = 1
  ATSPI_SCROLL_TOP_EDGE = 2
  ATSPI_SCROLL_BOTTOM_EDGE = 3
  ATSPI_SCROLL_LEFT_EDGE = 4
  ATSPI_SCROLL_RIGHT_EDGE = 5
  ATSPI_SCROLL_ANYWHERE = 6
END ENUM
TYPE AS _AtspiSelection AtspiSelection
TYPE AS _AtspiStateSet AtspiStateSet
TYPE AS _AtspiStateSetClass AtspiStateSetClass
TYPE AS LONG AtspiStateType
ENUM
  ATSPI_STATE_INVALID = 0
  ATSPI_STATE_ACTIVE = 1
  ATSPI_STATE_ARMED = 2
  ATSPI_STATE_BUSY = 3
  ATSPI_STATE_CHECKED = 4
  ATSPI_STATE_COLLAPSED = 5
  ATSPI_STATE_DEFUNCT = 6
  ATSPI_STATE_EDITABLE = 7
  ATSPI_STATE_ENABLED = 8
  ATSPI_STATE_EXPANDABLE = 9
  ATSPI_STATE_EXPANDED = 10
  ATSPI_STATE_FOCUSABLE = 11
  ATSPI_STATE_FOCUSED = 12
  ATSPI_STATE_HAS_TOOLTIP = 13
  ATSPI_STATE_HORIZONTAL = 14
  ATSPI_STATE_ICONIFIED = 15
  ATSPI_STATE_MODAL = 16
  ATSPI_STATE_MULTI_LINE = 17
  ATSPI_STATE_MULTISELECTABLE = 18
  ATSPI_STATE_OPAQUE = 19
  ATSPI_STATE_PRESSED = 20
  ATSPI_STATE_RESIZABLE = 21
  ATSPI_STATE_SELECTABLE = 22
  ATSPI_STATE_SELECTED = 23
  ATSPI_STATE_SENSITIVE = 24
  ATSPI_STATE_SHOWING = 25
  ATSPI_STATE_SINGLE_LINE = 26
  ATSPI_STATE_STALE = 27
  ATSPI_STATE_TRANSIENT = 28
  ATSPI_STATE_VERTICAL = 29
  ATSPI_STATE_VISIBLE = 30
  ATSPI_STATE_MANAGES_DESCENDANTS = 31
  ATSPI_STATE_INDETERMINATE = 32
  ATSPI_STATE_REQUIRED = 33
  ATSPI_STATE_TRUNCATED = 34
  ATSPI_STATE_ANIMATED = 35
  ATSPI_STATE_INVALID_ENTRY = 36
  ATSPI_STATE_SUPPORTS_AUTOCOMPLETION = 37
  ATSPI_STATE_SELECTABLE_TEXT = 38
  ATSPI_STATE_IS_DEFAULT = 39
  ATSPI_STATE_VISITED = 40
  ATSPI_STATE_CHECKABLE = 41
  ATSPI_STATE_HAS_POPUP = 42
  ATSPI_STATE_READ_ONLY = 43
  ATSPI_STATE_LAST_DEFINED = 44
END ENUM
#DEFINE ATSPI_TEXT_BOUNDARY_TYPE_COUNT 7
#DEFINE ATSPI_TEXT_CLIP_TYPE_COUNT 4
TYPE AS _AtspiTable AtspiTable
TYPE AS _AtspiTableCell AtspiTableCell
TYPE AS _AtspiText AtspiText
TYPE AS LONG AtspiTextBoundaryType
ENUM
  ATSPI_TEXT_BOUNDARY_CHAR = 0
  ATSPI_TEXT_BOUNDARY_WORD_START = 1
  ATSPI_TEXT_BOUNDARY_WORD_END = 2
  ATSPI_TEXT_BOUNDARY_SENTENCE_START = 3
  ATSPI_TEXT_BOUNDARY_SENTENCE_END = 4
  ATSPI_TEXT_BOUNDARY_LINE_START = 5
  ATSPI_TEXT_BOUNDARY_LINE_END = 6
END ENUM
TYPE AS LONG AtspiTextClipType
ENUM
  ATSPI_TEXT_CLIP_NONE = 0
  ATSPI_TEXT_CLIP_MIN = 1
  ATSPI_TEXT_CLIP_MAX = 2
  ATSPI_TEXT_CLIP_BOTH = 3
END ENUM
TYPE AS LONG AtspiTextGranularity
ENUM
  ATSPI_TEXT_GRANULARITY_CHAR = 0
  ATSPI_TEXT_GRANULARITY_WORD = 1
  ATSPI_TEXT_GRANULARITY_SENTENCE = 2
  ATSPI_TEXT_GRANULARITY_LINE = 3
  ATSPI_TEXT_GRANULARITY_PARAGRAPH = 4
END ENUM
TYPE AS _AtspiTextRange AtspiTextRange
TYPE AS _AtspiValue AtspiValue
EXTERN "C" LIB "atspi"
' P_X

TYPE _AtspiObject
  AS GObject parent
  AS AtspiApplication PTR app
  AS char PTR path
END TYPE
DECLARE FUNCTION atspi_object_get_type() AS GType
#DEFINE ATSPI_TYPE_OBJECT (atspi_object_get_type())
#DEFINE ATSPI_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_OBJECT, AtspiObject))
#DEFINE ATSPI_OBJECT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_OBJECT, AtspiObjectClass))
#DEFINE ATSPI_IS_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_OBJECT))
#DEFINE ATSPI_IS_CLASS_OBJECT(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), ATSPI_TYPE_OBJECT))
#DEFINE ATSPI_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), ATSPI_TYPE_OBJECT, AtspiObjectClass))
TYPE _AtspiObjectClass
  AS GObjectClass parent_class
END TYPE
TYPE AtspiDeviceListenerCB AS FUNCTION CDECL(BYVAL AS const AtspiDeviceEvent PTR, BYVAL AS any /'void'/ PTR) AS gboolean
TYPE AtspiDeviceListenerSimpleCB AS FUNCTION CDECL(BYVAL AS const AtspiDeviceEvent PTR) AS gboolean
TYPE AtspiEventListenerCB AS SUB CDECL(BYVAL AS AtspiEvent PTR, BYVAL AS any /'void'/ PTR)
TYPE AtspiEventListenerSimpleCB AS SUB CDECL(BYVAL AS const AtspiEvent PTR)
' P_3

TYPE _AtspiAccessible
  AS AtspiObject parent
  AS AtspiAccessible PTR accessible_parent
  AS GPtrArray PTR children
  AS AtspiRole role
  AS gint interfaces
  AS char PTR name
  AS char PTR description
  AS AtspiStateSet PTR states
  AS GHashTable PTR attributes
  AS guint cached_properties
  AS AtspiAccessiblePrivate PTR priv
END TYPE
DECLARE FUNCTION atspi_accessible_get_type() AS GType
#DEFINE ATSPI_TYPE_ACCESSIBLE (atspi_accessible_get_type())
#DEFINE ATSPI_ACCESSIBLE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_ACCESSIBLE, AtspiAccessible))
#DEFINE ATSPI_ACCESSIBLE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_ACCESSIBLE, AtspiAccessibleClass))
#DEFINE ATSPI_IS_ACCESSIBLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_ACCESSIBLE))
#DEFINE ATSPI_IS_CLASS_ACCESSIBLE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), ATSPI_TYPE_ACCESSIBLE))
#DEFINE ATSPI_ACCESSIBLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), ATSPI_TYPE_ACCESSIBLE, AtspiAccessibleClass))
DECLARE SUB atspi_accessible_clear_cache(BYVAL AS AtspiAccessible PTR)
DECLARE FUNCTION atspi_accessible_get_accessible_id(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_accessible_get_action(BYVAL AS AtspiAccessible PTR) AS AtspiAction PTR
DECLARE FUNCTION atspi_accessible_get_action_iface(BYVAL AS AtspiAccessible PTR) AS AtspiAction PTR
DECLARE FUNCTION atspi_accessible_get_application(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_accessible_get_atspi_version(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_accessible_get_attributes(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS GHashTable PTR
DECLARE FUNCTION atspi_accessible_get_attributes_as_array(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS GArray PTR
DECLARE FUNCTION atspi_accessible_get_child_at_index(BYVAL AS AtspiAccessible PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_accessible_get_child_count(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_accessible_get_collection(BYVAL AS AtspiAccessible PTR) AS AtspiCollection PTR
DECLARE FUNCTION atspi_accessible_get_collection_iface(BYVAL AS AtspiAccessible PTR) AS AtspiCollection PTR
DECLARE FUNCTION atspi_accessible_get_component(BYVAL AS AtspiAccessible PTR) AS AtspiComponent PTR
DECLARE FUNCTION atspi_accessible_get_component_iface(BYVAL AS AtspiAccessible PTR) AS AtspiComponent PTR
DECLARE FUNCTION atspi_accessible_get_description(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_accessible_get_document(BYVAL AS AtspiAccessible PTR) AS AtspiDocument PTR
DECLARE FUNCTION atspi_accessible_get_document_iface(BYVAL AS AtspiAccessible PTR) AS AtspiDocument PTR
DECLARE FUNCTION atspi_accessible_get_editable_text(BYVAL AS AtspiAccessible PTR) AS AtspiEditableText PTR
DECLARE FUNCTION atspi_accessible_get_editable_text_iface(BYVAL AS AtspiAccessible PTR) AS AtspiEditableText PTR
DECLARE FUNCTION atspi_accessible_get_hyperlink(BYVAL AS AtspiAccessible PTR) AS AtspiHyperlink PTR
DECLARE FUNCTION atspi_accessible_get_hypertext(BYVAL AS AtspiAccessible PTR) AS AtspiHypertext PTR
DECLARE FUNCTION atspi_accessible_get_hypertext_iface(BYVAL AS AtspiAccessible PTR) AS AtspiHypertext PTR
DECLARE FUNCTION atspi_accessible_get_id(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_accessible_get_image(BYVAL AS AtspiAccessible PTR) AS AtspiImage PTR
DECLARE FUNCTION atspi_accessible_get_image_iface(BYVAL AS AtspiAccessible PTR) AS AtspiImage PTR
DECLARE FUNCTION atspi_accessible_get_index_in_parent(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_accessible_get_interfaces(BYVAL AS AtspiAccessible PTR) AS GArray PTR
DECLARE FUNCTION atspi_accessible_get_localized_role_name(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_accessible_get_name(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_accessible_get_object_locale(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS const gchar PTR
DECLARE FUNCTION atspi_accessible_get_parent(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_accessible_get_process_id(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS guint
DECLARE FUNCTION atspi_accessible_get_relation_set(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS GArray PTR
DECLARE FUNCTION atspi_accessible_get_role(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS AtspiRole
DECLARE FUNCTION atspi_accessible_get_role_name(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_accessible_get_selection(BYVAL AS AtspiAccessible PTR) AS AtspiSelection PTR
DECLARE FUNCTION atspi_accessible_get_selection_iface(BYVAL AS AtspiAccessible PTR) AS AtspiSelection PTR
DECLARE FUNCTION atspi_accessible_get_state_set(BYVAL AS AtspiAccessible PTR) AS AtspiStateSet PTR
DECLARE FUNCTION atspi_accessible_get_table(BYVAL AS AtspiAccessible PTR) AS AtspiTable PTR
DECLARE FUNCTION atspi_accessible_get_table_cell(BYVAL AS AtspiAccessible PTR) AS AtspiTableCell PTR
DECLARE FUNCTION atspi_accessible_get_table_iface(BYVAL AS AtspiAccessible PTR) AS AtspiTable PTR
DECLARE FUNCTION atspi_accessible_get_text(BYVAL AS AtspiAccessible PTR) AS AtspiText PTR
DECLARE FUNCTION atspi_accessible_get_text_iface(BYVAL AS AtspiAccessible PTR) AS AtspiText PTR
DECLARE FUNCTION atspi_accessible_get_toolkit_name(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_accessible_get_toolkit_version(BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_accessible_get_value(BYVAL AS AtspiAccessible PTR) AS AtspiValue PTR
DECLARE FUNCTION atspi_accessible_get_value_iface(BYVAL AS AtspiAccessible PTR) AS AtspiValue PTR
DECLARE SUB atspi_accessible_set_cache_mask(BYVAL AS AtspiAccessible PTR, BYVAL AS AtspiCache)
TYPE _AtspiAccessibleClass
  AS AtspiObjectClass parent_class
  region_changed AS SUB CDECL(BYVAL AS AtspiAccessible PTR, BYVAL AS gint, BYVAL AS gint)
END TYPE
DECLARE FUNCTION atspi_action_get_type() AS GType
#DEFINE ATSPI_TYPE_ACTION (atspi_action_get_type())
#DEFINE ATSPI_ACTION(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_ACTION, AtspiAction))
#DEFINE ATSPI_ACTION_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_ACTION, Atspi))
#DEFINE ATSPI_IS_ACTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_ACTION))
#DEFINE ATSPI_ACTION_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_ACTION, Atspi))
DECLARE FUNCTION atspi_action_do_action(BYVAL AS AtspiAction PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_action_get_action_description(BYVAL AS AtspiAction PTR, BYVAL AS gint /'int'/, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_action_get_action_name(BYVAL AS AtspiAction PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_action_get_description(BYVAL AS AtspiAction PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_action_get_key_binding(BYVAL AS AtspiAction PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_action_get_localized_name(BYVAL AS AtspiAction PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_action_get_n_actions(BYVAL AS AtspiAction PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_action_get_name(BYVAL AS AtspiAction PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gchar PTR
TYPE _AtspiApplication
  AS GObject parent
  AS GHashTable PTR hash
  AS char PTR bus_name
  AS DBusConnection PTR bus
  AS _AtspiAccessible PTR root
  AS AtspiCache cache
  AS gchar PTR toolkit_name
  AS gchar PTR toolkit_version
  AS gchar PTR atspi_version
  AS timeval time_added
END TYPE
DECLARE FUNCTION atspi_application_get_type() AS GType
#DEFINE ATSPI_TYPE_APPLICATION (atspi_application_get_type())
#DEFINE ATSPI_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_APPLICATION, AtspiApplication))
#DEFINE ATSPI_APPLICATION_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_APPLICATION, AtspiApplicationClass))
#DEFINE ATSPI_IS_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_APPLICATION))
#DEFINE ATSPI_IS_CLASS_APPLICATION(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), ATSPI_TYPE_APPLICATION))
#DEFINE ATSPI_APPLICATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), ATSPI_TYPE_APPLICATION, AtspiApplicationClass))
TYPE _AtspiApplicationClass
  AS GObjectClass parent_class
END TYPE
DECLARE FUNCTION atspi_collection_get_type() AS GType
#DEFINE ATSPI_TYPE_COLLECTION (atspi_collection_get_type())
#DEFINE ATSPI_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_COLLECTION, AtspiCollection))
#DEFINE ATSPI_COLLECTION_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_COLLECTION, Atspi))
#DEFINE ATSPI_IS_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_COLLECTION))
#DEFINE ATSPI_COLLECTION_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_COLLECTION, Atspi))
DECLARE FUNCTION atspi_collection_get_active_descendant(BYVAL AS AtspiCollection PTR, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_collection_get_matches(BYVAL AS AtspiCollection PTR, BYVAL AS AtspiMatchRule PTR, BYVAL AS AtspiCollectionSortOrder, BYVAL AS gint, BYVAL AS gboolean, BYVAL AS GError PTR PTR) AS GArray PTR
DECLARE FUNCTION atspi_collection_get_matches_from(BYVAL AS AtspiCollection PTR, BYVAL AS AtspiAccessible PTR, BYVAL AS AtspiMatchRule PTR, BYVAL AS AtspiCollectionSortOrder, BYVAL AS AtspiCollectionTreeTraversalType, BYVAL AS gint, BYVAL AS gboolean, BYVAL AS GError PTR PTR) AS GArray PTR
DECLARE FUNCTION atspi_collection_get_matches_to(BYVAL AS AtspiCollection PTR, BYVAL AS AtspiAccessible PTR, BYVAL AS AtspiMatchRule PTR, BYVAL AS AtspiCollectionSortOrder, BYVAL AS AtspiCollectionTreeTraversalType, BYVAL AS gboolean, BYVAL AS gint, BYVAL AS gboolean, BYVAL AS GError PTR PTR) AS GArray PTR
DECLARE FUNCTION atspi_collection_is_ancestor_of(BYVAL AS AtspiCollection PTR, BYVAL AS AtspiAccessible PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_collection_match_type_get_type() AS GType
#DEFINE ATSPI_TYPE_COLLECTION_MATCH_TYPE (atspi_collection_match_type_get_type())
DECLARE FUNCTION atspi_collection_sort_order_get_type() AS GType
#DEFINE ATSPI_TYPE_COLLECTION_SORT_ORDER (atspi_collection_sort_order_get_type())
DECLARE FUNCTION atspi_collection_tree_traversal_type_get_type() AS GType
#DEFINE ATSPI_TYPE_COLLECTION_TREE_TRAVERSAL_TYPE (atspi_collection_tree_traversal_type_get_type())
DECLARE FUNCTION atspi_component_get_type() AS GType
#DEFINE ATSPI_TYPE_COMPONENT (atspi_component_get_type())
#DEFINE ATSPI_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_COMPONENT, AtspiComponent))
#DEFINE ATSPI_COMPONENT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_COMPONENT, Atspi))
#DEFINE ATSPI_IS_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_COMPONENT))
#DEFINE ATSPI_COMPONENT_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_COMPONENT, Atspi))
DECLARE FUNCTION atspi_component_contains(BYVAL AS AtspiComponent PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_component_get_accessible_at_point(BYVAL AS AtspiComponent PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_component_get_alpha(BYVAL AS AtspiComponent PTR, BYVAL AS GError PTR PTR) AS gdouble
DECLARE FUNCTION atspi_component_get_extents(BYVAL AS AtspiComponent PTR, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS AtspiRect PTR
DECLARE FUNCTION atspi_component_get_layer(BYVAL AS AtspiComponent PTR, BYVAL AS GError PTR PTR) AS AtspiComponentLayer
DECLARE FUNCTION atspi_component_get_mdi_z_order(BYVAL AS AtspiComponent PTR, BYVAL AS GError PTR PTR) AS gshort
DECLARE FUNCTION atspi_component_get_position(BYVAL AS AtspiComponent PTR, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS AtspiPoint PTR
DECLARE FUNCTION atspi_component_get_size(BYVAL AS AtspiComponent PTR, BYVAL AS GError PTR PTR) AS AtspiPoint PTR
DECLARE FUNCTION atspi_component_grab_focus(BYVAL AS AtspiComponent PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_component_scroll_to(BYVAL AS AtspiComponent PTR, BYVAL AS AtspiScrollType, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_component_scroll_to_point(BYVAL AS AtspiComponent PTR, BYVAL AS AtspiCoordType, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_component_set_extents(BYVAL AS AtspiComponent PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_component_set_position(BYVAL AS AtspiComponent PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_component_set_size(BYVAL AS AtspiComponent PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
TYPE _AtspiDeviceEvent
  AS AtspiEventType type
  AS guint id
  AS gushort hw_code
  AS gushort modifiers
  AS guint timestamp
  AS gchar PTR event_string
  AS gboolean is_text
END TYPE
DECLARE FUNCTION atspi_component_layer_get_type() AS GType
#DEFINE ATSPI_TYPE_COMPONENT_LAYER (atspi_component_layer_get_type())
DECLARE FUNCTION atspi_coord_type_get_type() AS GType
#DEFINE ATSPI_TYPE_COORD_TYPE (atspi_coord_type_get_type())
TYPE _AtspiDeviceListener
  AS GObject parent
  AS guint id
  AS GList PTR callbacks
END TYPE
DECLARE FUNCTION atspi_device_listener_get_type() AS GType
#DEFINE ATSPI_TYPE_DEVICE_LISTENER (atspi_device_listener_get_type())
#DEFINE ATSPI_DEVICE_LISTENER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_DEVICE_LISTENER, AtspiDeviceListener))
#DEFINE ATSPI_DEVICE_LISTENER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_DEVICE_LISTENER, AtspiDeviceListenerClass))
#DEFINE ATSPI_IS_DEVICE_LISTENER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_DEVICE_LISTENER))
#DEFINE ATSPI_IS_CLASS_DEVICE_LISTENER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), ATSPI_TYPE_DEVICE_LISTENER))
#DEFINE ATSPI_DEVICE_LISTENER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), ATSPI_TYPE_DEVICE_LISTENER, AtspiDeviceListenerClass))
DECLARE FUNCTION atspi_device_listener_new(BYVAL AS AtspiDeviceListenerCB, BYVAL AS any /'void'/ PTR, BYVAL AS GDestroyNotify) AS AtspiDeviceListener PTR
DECLARE FUNCTION atspi_device_listener_new_simple(BYVAL AS AtspiDeviceListenerSimpleCB, BYVAL AS GDestroyNotify) AS AtspiDeviceListener PTR
DECLARE SUB atspi_device_listener_add_callback(BYVAL AS AtspiDeviceListener PTR, BYVAL AS AtspiDeviceListenerCB, BYVAL AS GDestroyNotify, BYVAL AS any /'void'/ PTR)
DECLARE SUB atspi_device_listener_remove_callback(BYVAL AS AtspiDeviceListener PTR, BYVAL AS AtspiDeviceListenerCB)
TYPE _AtspiDeviceListenerClass
  AS GObjectClass parent_class
  device_event AS FUNCTION CDECL(BYVAL AS AtspiDeviceListener PTR, BYVAL AS const AtspiDeviceEvent PTR) AS gboolean
END TYPE
DECLARE FUNCTION atspi_document_get_type() AS GType
#DEFINE ATSPI_TYPE_DOCUMENT (atspi_document_get_type())
#DEFINE ATSPI_DOCUMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_DOCUMENT, AtspiDocument))
#DEFINE ATSPI_DOCUMENT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_DOCUMENT, Atspi))
#DEFINE ATSPI_IS_DOCUMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_DOCUMENT))
#DEFINE ATSPI_DOCUMENT_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_DOCUMENT, Atspi))
DECLARE FUNCTION atspi_document_get_attribute_value(BYVAL AS AtspiDocument PTR, BYVAL AS gchar PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_document_get_attributes(BYVAL AS AtspiDocument PTR, BYVAL AS GError PTR PTR) AS GHashTable PTR
DECLARE FUNCTION atspi_document_get_current_page_number(BYVAL AS AtspiDocument PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_document_get_document_attribute_value(BYVAL AS AtspiDocument PTR, BYVAL AS gchar PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_document_get_document_attributes(BYVAL AS AtspiDocument PTR, BYVAL AS GError PTR PTR) AS GHashTable PTR
DECLARE FUNCTION atspi_document_get_locale(BYVAL AS AtspiDocument PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_document_get_page_count(BYVAL AS AtspiDocument PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_editable_text_get_type() AS GType
#DEFINE ATSPI_TYPE_EDITABLE_TEXT (atspi_editable_text_get_type())
#DEFINE ATSPI_EDITABLE_TEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_EDITABLE_TEXT, AtspiEditableText))
#DEFINE ATSPI_EDITABLE_TEXT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_EDITABLE_TEXT, Atspi))
#DEFINE ATSPI_IS_EDITABLE_TEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_EDITABLE_TEXT))
#DEFINE ATSPI_EDITABLE_TEXT_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_EDITABLE_TEXT, Atspi))
DECLARE FUNCTION atspi_editable_text_copy_text(BYVAL AS AtspiEditableText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_editable_text_cut_text(BYVAL AS AtspiEditableText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_editable_text_delete_text(BYVAL AS AtspiEditableText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_editable_text_insert_text(BYVAL AS AtspiEditableText PTR, BYVAL AS gint, BYVAL AS const gchar PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_editable_text_paste_text(BYVAL AS AtspiEditableText PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_editable_text_set_text_contents(BYVAL AS AtspiEditableText PTR, BYVAL AS const gchar PTR, BYVAL AS GError PTR PTR) AS gboolean
TYPE _AtspiEvent
  AS gchar PTR type
  AS AtspiAccessible PTR source
  AS gint detail1
  AS gint detail2
  AS GValue any_data
  AS AtspiAccessible PTR sender
END TYPE
DECLARE SUB atspi_event_main()
DECLARE SUB atspi_event_quit()
TYPE _AtspiEventListener
  AS GObject parent
  AS AtspiEventListenerCB callback
  AS any /'void'/ PTR user_data
  AS GDestroyNotify cb_destroyed
END TYPE
DECLARE FUNCTION atspi_event_listener_get_type() AS GType
#DEFINE ATSPI_TYPE_EVENT_LISTENER (atspi_event_listener_get_type())
#DEFINE ATSPI_EVENT_LISTENER(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_EVENT_LISTENER, AtspiEventListener))
#DEFINE ATSPI_EVENT_LISTENER_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_EVENT_LISTENER, AtspiEventListenerClass))
#DEFINE ATSPI_IS_EVENT_LISTENER(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_EVENT_LISTENER))
#DEFINE ATSPI_IS_CLASS_EVENT_LISTENER(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), ATSPI_TYPE_EVENT_LISTENER))
#DEFINE ATSPI_EVENT_LISTENER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), ATSPI_TYPE_EVENT_LISTENER, AtspiEventListenerClass))
DECLARE FUNCTION atspi_event_listener_new(BYVAL AS AtspiEventListenerCB, BYVAL AS gpointer, BYVAL AS GDestroyNotify) AS AtspiEventListener PTR
DECLARE FUNCTION atspi_event_listener_new_simple(BYVAL AS AtspiEventListenerSimpleCB, BYVAL AS GDestroyNotify) AS AtspiEventListener PTR
DECLARE FUNCTION atspi_event_listener_deregister_from_callback(BYVAL AS AtspiEventListenerCB, BYVAL AS any /'void'/ PTR, BYVAL AS const gchar PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_event_listener_deregister_no_data(BYVAL AS AtspiEventListenerSimpleCB, BYVAL AS const gchar PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_event_listener_register_from_callback(BYVAL AS AtspiEventListenerCB, BYVAL AS any /'void'/ PTR, BYVAL AS GDestroyNotify, BYVAL AS const gchar PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_event_listener_register_from_callback_full(BYVAL AS AtspiEventListenerCB, BYVAL AS any /'void'/ PTR, BYVAL AS GDestroyNotify, BYVAL AS const gchar PTR, BYVAL AS GArray PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_event_listener_register_no_data(BYVAL AS AtspiEventListenerSimpleCB, BYVAL AS GDestroyNotify, BYVAL AS const gchar PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_event_listener_deregister(BYVAL AS AtspiEventListener PTR, BYVAL AS const gchar PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_event_listener_register(BYVAL AS AtspiEventListener PTR, BYVAL AS const gchar PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_event_listener_register_full(BYVAL AS AtspiEventListener PTR, BYVAL AS const gchar PTR, BYVAL AS GArray PTR, BYVAL AS GError PTR PTR) AS gboolean
TYPE _AtspiEventListenerClass
  AS GObjectClass parent_class
END TYPE
TYPE _AtspiEventListenerMode
  AS gboolean synchronous
  AS gboolean preemptive
  AS gboolean global
END TYPE
TYPE _AtspiHyperlink
  AS AtspiObject parent
END TYPE
DECLARE FUNCTION atspi_event_type_get_type() AS GType
#DEFINE ATSPI_TYPE_EVENT_TYPE (atspi_event_type_get_type())
DECLARE FUNCTION atspi_hyperlink_get_type() AS GType
#DEFINE ATSPI_TYPE_HYPERLINK (atspi_hyperlink_get_type())
#DEFINE ATSPI_HYPERLINK(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_HYPERLINK, AtspiHyperlink))
#DEFINE ATSPI_HYPERLINK_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_HYPERLINK, AtspiHyperlinkClass))
#DEFINE ATSPI_IS_HYPERLINK(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_HYPERLINK))
#DEFINE ATSPI_IS_CLASS_HYPERLINK(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), ATSPI_TYPE_HYPERLINK))
#DEFINE ATSPI_HYPERLINK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), ATSPI_TYPE_HYPERLINK, AtspiHyperlinkClass))
DECLARE FUNCTION atspi_hyperlink_get_end_index(BYVAL AS AtspiHyperlink PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_hyperlink_get_index_range(BYVAL AS AtspiHyperlink PTR, BYVAL AS GError PTR PTR) AS AtspiRange PTR
DECLARE FUNCTION atspi_hyperlink_get_n_anchors(BYVAL AS AtspiHyperlink PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_hyperlink_get_object(BYVAL AS AtspiHyperlink PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_hyperlink_get_start_index(BYVAL AS AtspiHyperlink PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_hyperlink_get_uri(BYVAL AS AtspiHyperlink PTR, BYVAL AS gint /'int'/, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_hyperlink_is_valid(BYVAL AS AtspiHyperlink PTR, BYVAL AS GError PTR PTR) AS gboolean
TYPE _AtspiHyperlinkClass
  AS AtspiObjectClass parent_class
END TYPE
DECLARE FUNCTION atspi_hypertext_get_type() AS GType
#DEFINE ATSPI_TYPE_HYPERTEXT (atspi_hypertext_get_type())
#DEFINE ATSPI_HYPERTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_HYPERTEXT, AtspiHypertext))
#DEFINE ATSPI_HYPERTEXT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_HYPERTEXT, Atspi))
#DEFINE ATSPI_IS_HYPERTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_HYPERTEXT))
#DEFINE ATSPI_HYPERTEXT_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_HYPERTEXT, Atspi))
DECLARE FUNCTION atspi_hypertext_get_link(BYVAL AS AtspiHypertext PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS AtspiHyperlink PTR
DECLARE FUNCTION atspi_hypertext_get_link_index(BYVAL AS AtspiHypertext PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_hypertext_get_n_links(BYVAL AS AtspiHypertext PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_image_get_type() AS GType
#DEFINE ATSPI_TYPE_IMAGE (atspi_image_get_type())
#DEFINE ATSPI_IMAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_IMAGE, AtspiImage))
#DEFINE ATSPI_IMAGE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_IMAGE, Atspi))
#DEFINE ATSPI_IS_IMAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_IMAGE))
#DEFINE ATSPI_IMAGE_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_IMAGE, Atspi))
DECLARE FUNCTION atspi_image_get_image_description(BYVAL AS AtspiImage PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_image_get_image_extents(BYVAL AS AtspiImage PTR, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS AtspiRect PTR
DECLARE FUNCTION atspi_image_get_image_locale(BYVAL AS AtspiImage PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_image_get_image_position(BYVAL AS AtspiImage PTR, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS AtspiPoint PTR
DECLARE FUNCTION atspi_image_get_image_size(BYVAL AS AtspiImage PTR, BYVAL AS GError PTR PTR) AS AtspiPoint PTR
TYPE _AtspiKeyDefinition
  AS gint keycode
  AS gint keysym
  AS gchar PTR keystring
  AS gint unused
END TYPE
TYPE _AtspiKeySet
  AS guint PTR keysyms
  AS gushort PTR keycodes
  AS gchar PTR PTR keystrings
  AS gshort len
END TYPE
DECLARE FUNCTION atspi_key_event_type_get_type() AS GType
#DEFINE ATSPI_TYPE_KEY_EVENT_TYPE (atspi_key_event_type_get_type())
TYPE _AtspiMatchRule
  AS GObject parent
  AS AtspiStateSet PTR states
  AS AtspiCollectionMatchType statematchtype
  AS GHashTable PTR attributes
  AS AtspiCollectionMatchType attributematchtype
  AS GArray PTR interfaces
  AS AtspiCollectionMatchType interfacematchtype
  AS gint roles(3)
  AS AtspiCollectionMatchType rolematchtype
  AS gboolean invert
END TYPE
DECLARE FUNCTION atspi_key_synth_type_get_type() AS GType
#DEFINE ATSPI_TYPE_KEY_SYNTH_TYPE (atspi_key_synth_type_get_type())
DECLARE FUNCTION atspi_locale_type_get_type() AS GType
#DEFINE ATSPI_TYPE_LOCALE_TYPE (atspi_locale_type_get_type())
DECLARE FUNCTION atspi_match_rule_get_type() AS GType
#DEFINE ATSPI_TYPE_MATCH_RULE (atspi_match_rule_get_type())
#DEFINE ATSPI_MATCH_RULE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_MATCH_RULE, AtspiMatchRule))
#DEFINE ATSPI_MATCH_RULE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_MATCH_RULE, AtspiMatchRuleClass))
#DEFINE ATSPI_IS_MATCH_RULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_MATCH_RULE))
#DEFINE ATSPI_IS_CLASS_MATCH_RULE(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), ATSPI_TYPE_MATCH_RULE))
#DEFINE ATSPI_MATCH_RULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), ATSPI_TYPE_MATCH_RULE, AtspiMatchRuleClass))
DECLARE FUNCTION atspi_match_rule_new(BYVAL AS AtspiStateSet PTR, BYVAL AS AtspiCollectionMatchType, BYVAL AS GHashTable PTR, BYVAL AS AtspiCollectionMatchType, BYVAL AS GArray PTR, BYVAL AS AtspiCollectionMatchType, BYVAL AS GArray PTR, BYVAL AS AtspiCollectionMatchType, BYVAL AS gboolean) AS AtspiMatchRule PTR
TYPE _AtspiMatchRuleClass
  AS GObjectClass parent_class
END TYPE
TYPE _AtspiPoint
  AS gint x
  AS gint y
END TYPE
DECLARE FUNCTION atspi_modifier_type_get_type() AS GType
#DEFINE ATSPI_TYPE_MODIFIER_TYPE (atspi_modifier_type_get_type())
DECLARE FUNCTION atspi_point_copy(BYVAL AS AtspiPoint PTR) AS AtspiPoint PTR
TYPE _AtspiRange
  AS gint start_offset
  AS gint end_offset
END TYPE
DECLARE FUNCTION atspi_range_copy(BYVAL AS AtspiRange PTR) AS AtspiRange PTR
TYPE _AtspiRect
  AS gint x
  AS gint y
  AS gint width
  AS gint height
END TYPE
DECLARE FUNCTION atspi_rect_copy(BYVAL AS AtspiRect PTR) AS AtspiRect PTR
TYPE _AtspiRelation
  AS GObject parent
  AS AtspiRelationType relation_type
  AS GArray PTR targets
END TYPE
DECLARE FUNCTION atspi_relation_get_type() AS GType
#DEFINE ATSPI_TYPE_RELATION (atspi_relation_get_type())
#DEFINE ATSPI_RELATION(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_RELATION, AtspiRelation))
#DEFINE ATSPI_RELATION_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_RELATION, AtspiRelationClass))
#DEFINE ATSPI_IS_RELATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_RELATION))
#DEFINE ATSPI_IS_CLASS_RELATION(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), ATSPI_TYPE_RELATION))
#DEFINE ATSPI_RELATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), ATSPI_TYPE_RELATION, AtspiRelationClass))
DECLARE FUNCTION atspi_relation_get_n_targets(BYVAL AS AtspiRelation PTR) AS gint
DECLARE FUNCTION atspi_relation_get_relation_type(BYVAL AS AtspiRelation PTR) AS AtspiRelationType
DECLARE FUNCTION atspi_relation_get_target(BYVAL AS AtspiRelation PTR, BYVAL AS gint) AS AtspiAccessible PTR
TYPE _AtspiRelationClass
  AS GObjectClass parent_class
END TYPE
DECLARE FUNCTION atspi_relation_type_get_type() AS GType
#DEFINE ATSPI_TYPE_RELATION_TYPE (atspi_relation_type_get_type())
DECLARE FUNCTION atspi_role_get_type() AS GType
#DEFINE ATSPI_TYPE_ROLE (atspi_role_get_type())
DECLARE FUNCTION atspi_scroll_type_get_type() AS GType
#DEFINE ATSPI_TYPE_SCROLL_TYPE (atspi_scroll_type_get_type())
DECLARE FUNCTION atspi_selection_get_type() AS GType
#DEFINE ATSPI_TYPE_SELECTION (atspi_selection_get_type())
#DEFINE ATSPI_SELECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_SELECTION, AtspiSelection))
#DEFINE ATSPI_SELECTION_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_SELECTION, Atspi))
#DEFINE ATSPI_IS_SELECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_SELECTION))
#DEFINE ATSPI_SELECTION_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_SELECTION, Atspi))
DECLARE FUNCTION atspi_selection_clear_selection(BYVAL AS AtspiSelection PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_selection_deselect_child(BYVAL AS AtspiSelection PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_selection_deselect_selected_child(BYVAL AS AtspiSelection PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_selection_get_n_selected_children(BYVAL AS AtspiSelection PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_selection_get_selected_child(BYVAL AS AtspiSelection PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_selection_is_child_selected(BYVAL AS AtspiSelection PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_selection_select_all(BYVAL AS AtspiSelection PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_selection_select_child(BYVAL AS AtspiSelection PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
TYPE _AtspiStateSet
  AS GObject parent
  AS _AtspiAccessible PTR accessible
  AS gint64 states
END TYPE
DECLARE FUNCTION atspi_state_set_get_type() AS GType
#DEFINE ATSPI_TYPE_STATE_SET (atspi_state_set_get_type())
#DEFINE ATSPI_STATE_SET(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_STATE_SET, AtspiStateSet))
#DEFINE ATSPI_STATE_SET_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_STATE_SET, AtspiStateSetClass))
#DEFINE ATSPI_IS_STATE_SET(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_STATE_SET))
#DEFINE ATSPI_IS_CLASS_STATE_SET(obj) (G_TYPE_CHECK_CLASS_TYPE((obj), ATSPI_TYPE_STATE_SET))
#DEFINE ATSPI_STATE_SET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS((obj), ATSPI_TYPE_STATE_SET, AtspiStateSetClass))
DECLARE FUNCTION atspi_state_set_new(BYVAL AS GArray PTR) AS AtspiStateSet PTR
DECLARE SUB atspi_state_set_add(BYVAL AS AtspiStateSet PTR, BYVAL AS AtspiStateType)
DECLARE FUNCTION atspi_state_set_compare(BYVAL AS AtspiStateSet PTR, BYVAL AS AtspiStateSet PTR) AS AtspiStateSet PTR
DECLARE FUNCTION atspi_state_set_contains(BYVAL AS AtspiStateSet PTR, BYVAL AS AtspiStateType) AS gboolean
DECLARE FUNCTION atspi_state_set_equals(BYVAL AS AtspiStateSet PTR, BYVAL AS AtspiStateSet PTR) AS gboolean
DECLARE FUNCTION atspi_state_set_get_states(BYVAL AS AtspiStateSet PTR) AS GArray PTR
DECLARE FUNCTION atspi_state_set_is_empty(BYVAL AS AtspiStateSet PTR) AS gboolean
DECLARE SUB atspi_state_set_remove(BYVAL AS AtspiStateSet PTR, BYVAL AS AtspiStateType)
DECLARE SUB atspi_state_set_set_by_name(BYVAL AS AtspiStateSet PTR, BYVAL AS const gchar PTR, BYVAL AS gboolean)
TYPE _AtspiStateSetClass
  AS GObjectClass parent_class
END TYPE
DECLARE FUNCTION atspi_state_type_get_type() AS GType
#DEFINE ATSPI_TYPE_STATE_TYPE (atspi_state_type_get_type())
DECLARE FUNCTION atspi_table_get_type() AS GType
#DEFINE ATSPI_TYPE_TABLE (atspi_table_get_type())
#DEFINE ATSPI_TABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_TABLE, AtspiTable))
#DEFINE ATSPI_TABLE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_TABLE, Atspi))
#DEFINE ATSPI_IS_TABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_TABLE))
#DEFINE ATSPI_TABLE_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_TABLE, Atspi))
DECLARE FUNCTION atspi_table_add_column_selection(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_table_add_row_selection(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_table_get_accessible_at(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_table_get_caption(BYVAL AS AtspiTable PTR, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_table_get_column_at_index(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_get_column_description(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_table_get_column_extent_at(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_get_column_header(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_table_get_index_at(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_get_n_columns(BYVAL AS AtspiTable PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_get_n_rows(BYVAL AS AtspiTable PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_get_n_selected_columns(BYVAL AS AtspiTable PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_get_n_selected_rows(BYVAL AS AtspiTable PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_get_row_at_index(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_get_row_column_extents_at_index(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS gboolean PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_table_get_row_description(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_table_get_row_extent_at(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_get_row_header(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_table_get_selected_columns(BYVAL AS AtspiTable PTR, BYVAL AS GError PTR PTR) AS GArray PTR
DECLARE FUNCTION atspi_table_get_selected_rows(BYVAL AS AtspiTable PTR, BYVAL AS GError PTR PTR) AS GArray PTR
DECLARE FUNCTION atspi_table_get_summary(BYVAL AS AtspiTable PTR, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_table_is_column_selected(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_table_is_row_selected(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_table_is_selected(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_table_remove_column_selection(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_table_remove_row_selection(BYVAL AS AtspiTable PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_table_cell_get_type() AS GType
#DEFINE ATSPI_TYPE_TABLE_CELL (atspi_table_cell_get_type())
#DEFINE ATSPI_TABLE_CELL(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_TABLE_CELL, AtspiTableCell))
#DEFINE ATSPI_TABLE_CELL_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_TABLE_CELL, Atspi))
#DEFINE ATSPI_IS_TABLE_CELL(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_TABLE_CELL))
#DEFINE ATSPI_TABLE_CELL_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_TABLE_CELL, Atspi))
DECLARE FUNCTION atspi_table_cell_get_column_header_cells(BYVAL AS AtspiTableCell PTR, BYVAL AS GError PTR PTR) AS GPtrArray PTR
DECLARE FUNCTION atspi_table_cell_get_column_index(BYVAL AS AtspiTableCell PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_cell_get_column_span(BYVAL AS AtspiTableCell PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_cell_get_position(BYVAL AS AtspiTableCell PTR, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE SUB atspi_table_cell_get_row_column_span(BYVAL AS AtspiTableCell PTR, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS GError PTR PTR)
DECLARE FUNCTION atspi_table_cell_get_row_header_cells(BYVAL AS AtspiTableCell PTR, BYVAL AS GError PTR PTR) AS GPtrArray PTR
DECLARE FUNCTION atspi_table_cell_get_row_span(BYVAL AS AtspiTableCell PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_table_cell_get_table(BYVAL AS AtspiTableCell PTR, BYVAL AS GError PTR PTR) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_text_get_type() AS GType
#DEFINE ATSPI_TYPE_TEXT (atspi_text_get_type())
#DEFINE ATSPI_TEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_TEXT, AtspiText))
#DEFINE ATSPI_TEXT_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_TEXT, Atspi))
#DEFINE ATSPI_IS_TEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_TEXT))
#DEFINE ATSPI_TEXT_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_TEXT, Atspi))
DECLARE FUNCTION atspi_text_add_selection(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_text_get_attribute_run(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gboolean, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS GError PTR PTR) AS GHashTable PTR
DECLARE FUNCTION atspi_text_get_attribute_value(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gchar PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_text_get_attributes(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS GError PTR PTR) AS GHashTable PTR
DECLARE FUNCTION atspi_text_get_bounded_ranges(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS AtspiCoordType, BYVAL AS AtspiTextClipType, BYVAL AS AtspiTextClipType, BYVAL AS GError PTR PTR) AS GArray PTR
DECLARE FUNCTION atspi_text_get_caret_offset(BYVAL AS AtspiText PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_text_get_character_at_offset(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS guint
DECLARE FUNCTION atspi_text_get_character_count(BYVAL AS AtspiText PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_text_get_character_extents(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS AtspiRect PTR
DECLARE FUNCTION atspi_text_get_default_attributes(BYVAL AS AtspiText PTR, BYVAL AS GError PTR PTR) AS GHashTable PTR
DECLARE FUNCTION atspi_text_get_n_selections(BYVAL AS AtspiText PTR, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_text_get_offset_at_point(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS gint
DECLARE FUNCTION atspi_text_get_range_extents(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS AtspiCoordType, BYVAL AS GError PTR PTR) AS AtspiRect PTR
DECLARE FUNCTION atspi_text_get_selection(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS AtspiRange PTR
DECLARE FUNCTION atspi_text_get_string_at_offset(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS AtspiTextGranularity, BYVAL AS GError PTR PTR) AS AtspiTextRange PTR
DECLARE FUNCTION atspi_text_get_text(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_text_get_text_after_offset(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS AtspiTextBoundaryType, BYVAL AS GError PTR PTR) AS AtspiTextRange PTR
DECLARE FUNCTION atspi_text_get_text_at_offset(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS AtspiTextBoundaryType, BYVAL AS GError PTR PTR) AS AtspiTextRange PTR
DECLARE FUNCTION atspi_text_get_text_attribute_value(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gchar PTR, BYVAL AS GError PTR PTR) AS gchar PTR
DECLARE FUNCTION atspi_text_get_text_attributes(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gint PTR, BYVAL AS gint PTR, BYVAL AS GError PTR PTR) AS GHashTable PTR
DECLARE FUNCTION atspi_text_get_text_before_offset(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS AtspiTextBoundaryType, BYVAL AS GError PTR PTR) AS AtspiTextRange PTR
DECLARE FUNCTION atspi_text_remove_selection(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_text_scroll_substring_to(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS AtspiScrollType, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_text_scroll_substring_to_point(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS AtspiCoordType, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_text_set_caret_offset(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_text_set_selection(BYVAL AS AtspiText PTR, BYVAL AS gint, BYVAL AS gint, BYVAL AS gint, BYVAL AS GError PTR PTR) AS gboolean
TYPE _AtspiTextRange
  AS gint start_offset
  AS gint end_offset
  AS gchar PTR content
END TYPE
DECLARE FUNCTION atspi_text_boundary_type_get_type() AS GType
#DEFINE ATSPI_TYPE_TEXT_BOUNDARY_TYPE (atspi_text_boundary_type_get_type())
DECLARE FUNCTION atspi_text_clip_type_get_type() AS GType
#DEFINE ATSPI_TYPE_TEXT_CLIP_TYPE (atspi_text_clip_type_get_type())
DECLARE FUNCTION atspi_text_granularity_get_type() AS GType
#DEFINE ATSPI_TYPE_TEXT_GRANULARITY (atspi_text_granularity_get_type())
DECLARE FUNCTION atspi_value_get_type() AS GType
#DEFINE ATSPI_TYPE_VALUE (atspi_value_get_type())
#DEFINE ATSPI_VALUE(obj) (G_TYPE_CHECK_INSTANCE_CAST((obj), ATSPI_TYPE_VALUE, AtspiValue))
#DEFINE ATSPI_VALUE_CLASS(obj) (G_TYPE_CHECK_CLASS_CAST((obj), ATSPI_TYPE_VALUE, Atspi))
#DEFINE ATSPI_IS_VALUE(obj) (G_TYPE_CHECK_INSTANCE_TYPE((obj), ATSPI_TYPE_VALUE))
#DEFINE ATSPI_VALUE_GET_IFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE((obj), ATSPI_TYPE_VALUE, Atspi))
DECLARE FUNCTION atspi_value_get_current_value(BYVAL AS AtspiValue PTR, BYVAL AS GError PTR PTR) AS gdouble
DECLARE FUNCTION atspi_value_get_maximum_value(BYVAL AS AtspiValue PTR, BYVAL AS GError PTR PTR) AS gdouble
DECLARE FUNCTION atspi_value_get_minimum_increment(BYVAL AS AtspiValue PTR, BYVAL AS GError PTR PTR) AS gdouble
DECLARE FUNCTION atspi_value_get_minimum_value(BYVAL AS AtspiValue PTR, BYVAL AS GError PTR PTR) AS gdouble
DECLARE FUNCTION atspi_value_set_current_value(BYVAL AS AtspiValue PTR, BYVAL AS gdouble, BYVAL AS GError PTR PTR) AS gboolean
' P_4

DECLARE SUB atspi_dbus_connection_setup_with_g_main(BYVAL AS DBusConnection PTR, BYVAL AS GMainContext PTR)
DECLARE SUB atspi_dbus_server_setup_with_g_main(BYVAL AS DBusServer PTR, BYVAL AS GMainContext PTR)
DECLARE FUNCTION atspi_deregister_device_event_listener(BYVAL AS AtspiDeviceListener PTR, BYVAL AS any /'void'/ PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_deregister_keystroke_listener(BYVAL AS AtspiDeviceListener PTR, BYVAL AS GArray PTR, BYVAL AS AtspiKeyMaskType, BYVAL AS AtspiKeyEventMask, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_exit() AS gint /'int'/
DECLARE FUNCTION atspi_generate_keyboard_event(BYVAL AS glong, BYVAL AS const gchar PTR, BYVAL AS AtspiKeySynthType, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_generate_mouse_event(BYVAL AS glong, BYVAL AS glong, BYVAL AS const gchar PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_get_a11y_bus() AS DBusConnection PTR
DECLARE FUNCTION atspi_get_desktop(BYVAL AS gint) AS AtspiAccessible PTR
DECLARE FUNCTION atspi_get_desktop_count() AS gint
DECLARE FUNCTION atspi_get_desktop_list() AS GArray PTR
DECLARE FUNCTION atspi_init() AS gint /'int'/
DECLARE FUNCTION atspi_is_initialized() AS gboolean
DECLARE FUNCTION atspi_register_device_event_listener(BYVAL AS AtspiDeviceListener PTR, BYVAL AS AtspiDeviceEventMask, BYVAL AS any /'void'/ PTR, BYVAL AS GError PTR PTR) AS gboolean
DECLARE FUNCTION atspi_register_keystroke_listener(BYVAL AS AtspiDeviceListener PTR, BYVAL AS GArray PTR, BYVAL AS AtspiKeyMaskType, BYVAL AS AtspiKeyEventMask, BYVAL AS AtspiKeyListenerSyncType, BYVAL AS GError PTR PTR) AS gboolean
DECLARE SUB atspi_set_main_context(BYVAL AS GMainContext PTR)
DECLARE SUB atspi_set_reference_window(BYVAL AS AtspiAccessible PTR)
DECLARE SUB atspi_set_timeout(BYVAL AS gint, BYVAL AS gint)
END EXTERN

